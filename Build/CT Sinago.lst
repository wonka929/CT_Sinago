***********************************************************************
*
*	CODE GENERATION LISTING FOR: CT Sinago
*	COMPILER VERSION: 3.1.1.0
*
***********************************************************************

***********************************************************************
UNUSED FUNCTIONS:

	SysSpyData
	SysLWVarsnprintf
	SysVarsnprintf
	SysVarfprintf
	SysVarsscanf
	Sysrename
	Sysremove
	Sysfilelength
	Sysfopen
	SysPCodeAccept
	SysGetTxBSize
	SysGetRxBSize
	SysGetOSpace
	SysGetIChars
	VarSwap
	IEE754DoubleToFloat
	ResistorValue
	VaPotentiometer
	VBitTest
	VBitSet
	VarToLEArray
	VarToBEArray
	LEArrayToVar
	BEArrayToVar
	GetPolynomialCRC
	ValueScale
	Linearize
	GetISO1155Crc
***********************************************************************

***********************************************************************
UNUSED FUNCTION BLOCKS:

	SysGetIpInfos
	SysIPReach
	SysDirListing
	SysGetCrc
	eTOF
	eTP
	SR
	RS
	CTUD
	CTD
	CTU
	MBTHLThermostat
	ACModbus
	InvtGD20EU
	SensitSTHC102
	EastronSDM630_v2
	EastronSDM120_v2
	StepRelay
	CLIClient
	LRamp
	HMIAInOnePicoface
	ModbusMaster
	DewPointCalculator
	PWMOut_v1
	ModbusConversion
	Wiegand26Dcd
	BufferModified
	OnOffCycle_v1
	StrainGaugeAcq
	ModbusSlave_v1
	HIDClkDtaReader
	BlinkValue
	Average
	IEC62056_21Rd
	PIDMng_v1
	IODataExchange
	IOEncoder
	WordToDouble
	WordToByte
	DoubleToWord
	ByteToWord
	ByteToBit
	BitToByte
	BLINK
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
005BA0F0  FB90 F3F1		sdiv r3, r0, r1
005BA0F4  4359     		mul r1, r1, r3
005BA0F6  EBC1 0000		rsb r0, r1, r0
005BA0FA  4770     		bx lr

$$MOD_U:
005BA0FC  FBB0 F3F1		udiv r3, r0, r1
005BA100  4359     		mul r1, r1, r3
005BA102  EBC1 0000		rsb r0, r1, r0
005BA106  4770     		bx lr

**************************************************
	List function block: F_TRIG
**************************************************

FUNCTION_BLOCK F_TRIG

	{ DE:"(Sfr053c000) eLLabStdLib - Falling edge detector" }

        VAR_INPUT
CLK : BOOL;	{ DE:"Clock signal" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Output" }
	END_VAR

        VAR
CLKMemo : BOOL := FALSE;	{ DE:"Clock memo" }
	END_VAR

END_FUNCTION_BLOCK

005BA108  E92D 4040		stmdb sp!, { r6, lr }
005BA10C  462E     		mov r6, r5

005BA10E  F8DF 7028		ldr r7, [pc, #+40] ; 0x1
005BA112  5DF0     		ldrb r0, [r6, +r7]
005BA114  2800     		cmp r0, #0
005BA116  BF08 2001		eqmov r0, #1
005BA11A  BF18 2000		nemov r0, #0

005BA11E  7837     		ldrb r7, [r6]
005BA120  4038     		and r0, r0, r7

005BA122  F8DF 7018		ldr r7, [pc, #+24] ; 0x2
005BA126  55F0     		strb r0, [r6, +r7]

005BA128  F8DF 700C		ldr r7, [pc, #+12] ; 0x1
005BA12C  5DF0     		ldrb r0, [r6, +r7]

005BA12E  7030     		strb r0, [r6]

005BA130  E8BD 4040		ldmia sp!, { r6, lr }

005BA134  4770     		bx lr

005BA138  00000001		; 0x00000001
005BA13C  00000002		; 0x00000002


Frame allocation:

	0000 bit  0: VAR CLKMemo
	0001 bit  0: VAR CLK
	0002 bit  0: VAR Q

END_FUNCTION_BLOCK
**************************************************
	List function block: R_TRIG
**************************************************

FUNCTION_BLOCK R_TRIG

	{ DE:"(Sfr053c000) eLLabStdLib - Rising edge detector" }

        VAR_INPUT
CLK : BOOL;	{ DE:"Clock signal" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Output" }
	END_VAR

        VAR
CLKMemo : BOOL := FALSE;	{ DE:"Clock memo" }
	END_VAR

END_FUNCTION_BLOCK

005BA140  E92D 4040		stmdb sp!, { r6, lr }
005BA144  462E     		mov r6, r5

005BA146  F8DF 7028		ldr r7, [pc, #+40] ; 0x1
005BA14A  5DF0     		ldrb r0, [r6, +r7]

005BA14C  7837     		ldrb r7, [r6]
005BA14E  2F00     		cmp r7, #0
005BA150  BF08 2701		eqmov r7, #1
005BA154  BF18 2700		nemov r7, #0
005BA158  4038     		and r0, r0, r7

005BA15A  F8DF 7018		ldr r7, [pc, #+24] ; 0x2
005BA15E  55F0     		strb r0, [r6, +r7]

005BA160  F8DF 700C		ldr r7, [pc, #+12] ; 0x1
005BA164  5DF0     		ldrb r0, [r6, +r7]

005BA166  7030     		strb r0, [r6]

005BA168  E8BD 4040		ldmia sp!, { r6, lr }

005BA16C  4770     		bx lr

005BA170  00000001		; 0x00000001
005BA174  00000002		; 0x00000002


Frame allocation:

	0000 bit  0: VAR CLKMemo
	0001 bit  0: VAR CLK
	0002 bit  0: VAR Q

END_FUNCTION_BLOCK
**************************************************
	List function block: eTON
**************************************************

FUNCTION_BLOCK eTON

	{ DE:"(Sfr053c000) eLLabStdLib - On delay timer" }

        VAR_INPUT
IN : BOOL;	{ DE:"Timer input" }
PT : UDINT;	{ DE:"Preset time value (mS)" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Delayed output" }
ET : UDINT;	{ DE:"Executing time (mS)" }
	END_VAR

        VAR_EXTERNAL
	{G:"SystemVariables"}
SysTime AT %MB0.320 : UDINT;	{ DE:"System time [mS]" }
	END_VAR

        VAR
TimeBf : UDINT;	{ DE:"Time buffer" }
	END_VAR

END_FUNCTION_BLOCK

005BA178  E92D 4040		stmdb sp!, { r6, lr }
005BA17C  462E     		mov r6, r5

005BA17E  F8DF 70AC		ldr r7, [pc, #+172] ; 0x4
005BA182  5DF0     		ldrb r0, [r6, +r7]

005BA184  2800     		cmp r0, #0
005BA186  BF08 2001		eqmov r0, #1
005BA18A  BF18 2000		nemov r0, #0

005BA18E  2800     		cmp r0, #0
005BA190  D00E     		beq #28 ; 0x005BA1B0


005BA194  F8DF 70A4		ldr r7, [pc, #+164] ; 0x20418B74
005BA198  6838     		ldr r0, [r7]
005BA19A  6030     		str r0, [r6]

005BA19C  2000     		mov r0, #0 ; 0
005BA19E  F8DF 7094		ldr r7, [pc, #+148] ; 0xC
005BA1A2  55F0     		strb r0, [r6, +r7]

005BA1A4  2000     		mov r0, #0 ; 0
005BA1A6  F8DF 7090		ldr r7, [pc, #+144] ; 0x10
005BA1AA  51F0     		str r0, [r6, +r7]

005BA1AC  E03A     		b #116 ; 0x005BA224


005BA1B0  F8DF 7080		ldr r7, [pc, #+128] ; 0xC
005BA1B4  5DF0     		ldrb r0, [r6, +r7]

005BA1B6  2800     		cmp r0, #0
005BA1B8  D014     		beq #40 ; 0x005BA1E4


005BA1BC  F8DF 7070		ldr r7, [pc, #+112] ; 0x8
005BA1C0  59F0     		ldr r0, [r6, +r7]

005BA1C2  F8DF 7074		ldr r7, [pc, #+116] ; 0x10
005BA1C6  59F7     		ldr r7, [r6, +r7]
005BA1C8  42B8     		cmp r0, r7
005BA1CA  BF98 2000		lsmov r0, #0
005BA1CE  BF88 2001		himov r0, #1

005BA1D2  2800     		cmp r0, #0
005BA1D4  D004     		beq #8 ; 0x005BA1E0


005BA1D8  2000     		mov r0, #0 ; 0
005BA1DA  F8DF 7058		ldr r7, [pc, #+88] ; 0xC
005BA1DE  55F0     		strb r0, [r6, +r7]

005BA1E0  E020     		b #64 ; 0x005BA224


005BA1E4  F8DF 7054		ldr r7, [pc, #+84] ; 0x20418B74
005BA1E8  6838     		ldr r0, [r7]

005BA1EA  6837     		ldr r7, [r6]
005BA1EC  1BC0     		sub r0, r0, r7

005BA1EE  F8DF 7048		ldr r7, [pc, #+72] ; 0x10
005BA1F2  51F0     		str r0, [r6, +r7]

005BA1F4  F8DF 7040		ldr r7, [pc, #+64] ; 0x10
005BA1F8  59F0     		ldr r0, [r6, +r7]

005BA1FA  F8DF 7034		ldr r7, [pc, #+52] ; 0x8
005BA1FE  59F7     		ldr r7, [r6, +r7]
005BA200  42B8     		cmp r0, r7
005BA202  BF38 2000		lomov r0, #0
005BA206  BF28 2001		hsmov r0, #1

005BA20A  2800     		cmp r0, #0
005BA20C  D00A     		beq #20 ; 0x005BA224


005BA210  2001     		mov r0, #1 ; 1
005BA212  F8DF 7020		ldr r7, [pc, #+32] ; 0xC
005BA216  55F0     		strb r0, [r6, +r7]

005BA218  F8DF 7014		ldr r7, [pc, #+20] ; 0x8
005BA21C  59F0     		ldr r0, [r6, +r7]
005BA21E  F8DF 7018		ldr r7, [pc, #+24] ; 0x10
005BA222  51F0     		str r0, [r6, +r7]

005BA224  E8BD 4040		ldmia sp!, { r6, lr }

005BA228  4770     		bx lr

005BA22C  00000004		; 0x00000004
005BA230  00000008		; 0x00000008
005BA234  0000000C		; 0x0000000C
005BA238  00000010		; 0x00000010
005BA23C  20418B74		; 0x20418B74


Frame allocation:

	0000       : VAR TimeBf
	0004 bit  0: VAR IN
	0008       : VAR PT
	000C bit  0: VAR Q
	0010       : VAR ET

END_FUNCTION_BLOCK
**************************************************
	List function block: HHMM_to_MM
**************************************************

FUNCTION_BLOCK HHMM_to_MM

        VAR_INPUT
HH_on1 : INT := 0;
MM_on1 : INT := 0;
HH_off1 : INT := 0;
MM_off1 : INT := 0;
HH_on2 : INT := 0;
MM_on2 : INT := 0;
HH_off2 : INT := 0;
MM_off2 : INT := 0;
	END_VAR

        VAR_OUTPUT
MMs_on1 : INT := 0;
MMs_off1 : INT := 0;
MMs_on2 : INT := 0;
MMs_off2 : INT := 0;
	END_VAR

END_FUNCTION_BLOCK

005BA240  E92D 4040		stmdb sp!, { r6, lr }
005BA244  462E     		mov r6, r5

#0		{SRC:HHMM_to_MM}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF HH_on1 > 0 OR HH_on2 > 0 *)
#5			LD		HH_on2	{LNXT:1|-1|-1}
(*) UNDEF
005BA246  F8DF 70A8		ldr r7, [pc, #+168] ; 0x8
005BA24A  5FF0     		ldrsh r0, [r6, +r7]

#6			GT		0	{LNXT:1|-1|-1}
(*) INT
005BA24C  2800     		cmp r0, #0
005BA24E  BFD8 2000		lemov r0, #0
005BA252  BFC8 2001		gtmov r0, #1

#7			OR(		HH_on1	{LNXT:1|-1|-1}
(*) BOOL
005BA256  B082     		sub sp, sp, #8
005BA258  F8CD 0000		str r0, [sp]
005BA25C  F9B6 0000		ldrsh r0, [r6]

#8			GT		0	{LNXT:1|-1|-1}
(*) INT
005BA260  2800     		cmp r0, #0
005BA262  BFD8 2000		lemov r0, #0
005BA266  BFC8 2001		gtmov r0, #1

#9			)	{LNXT:1|-1|-1}
(*) BOOL
005BA26A  4607     		mov r7, r0
005BA26C  F8DD 0000		ldr r0, [sp]
005BA270  B002     		add sp, sp, #8
005BA272  4338     		orr r0, r0, r7

#10			JMPCN	$label0	{LNXT:1|3|9}
(-) BOOL
005BA274  2800     		cmp r0, #0
005BA276  D031     		beq #98 ; 0x005BA2DC


#11		
#12			(* THEN *)
#13		
#14				(* MMs_on1 := HH_on1 * 60 + MM_on1; *)
#15				LD		HH_on1	{LNXT:3|4|-1}
(*) UNDEF
005BA27A  F9B6 0000		ldrsh r0, [r6]

#16				MUL		60	{LNXT:3|4|-1}
(*) INT
005BA27E  273C     		mov r7, #60 ; 60
005BA280  4378     		mul r0, r0, r7

#17				ADD		MM_on1	{LNXT:3|4|-1}
(*) INT
005BA282  F8DF 7060		ldr r7, [pc, #+96] ; 0x2
005BA286  5FF7     		ldrsh r7, [r6, +r7]
005BA288  19C0     		add r0, r0, r7

#18				ST		MMs_on1	{LNXT:3|4|-1}
(*) INT
005BA28A  F8DF 7074		ldr r7, [pc, #+116] ; 0x10
005BA28E  53F0     		strh r0, [r6, +r7]

#19		
#20				(* MMs_off1 := HH_off1 * 60 + MM_off1; *)
#21				LD		HH_off1	{LNXT:4|5|-1}
(*) UNDEF
005BA290  F8DF 7054		ldr r7, [pc, #+84] ; 0x4
005BA294  5FF0     		ldrsh r0, [r6, +r7]

#22				MUL		60	{LNXT:4|5|-1}
(*) INT
005BA296  273C     		mov r7, #60 ; 60
005BA298  4378     		mul r0, r0, r7

#23				ADD		MM_off1	{LNXT:4|5|-1}
(*) INT
005BA29A  F8DF 7050		ldr r7, [pc, #+80] ; 0x6
005BA29E  5FF7     		ldrsh r7, [r6, +r7]
005BA2A0  19C0     		add r0, r0, r7

#24				ST		MMs_off1	{LNXT:4|5|-1}
(*) INT
005BA2A2  F8DF 7060		ldr r7, [pc, #+96] ; 0x12
005BA2A6  53F0     		strh r0, [r6, +r7]

#25		
#26				(* MMs_on2 := HH_on2 * 60 + MM_on2; *)
#27				LD		HH_on2	{LNXT:5|6|-1}
(*) UNDEF
005BA2A8  F8DF 7044		ldr r7, [pc, #+68] ; 0x8
005BA2AC  5FF0     		ldrsh r0, [r6, +r7]

#28				MUL		60	{LNXT:5|6|-1}
(*) INT
005BA2AE  273C     		mov r7, #60 ; 60
005BA2B0  4378     		mul r0, r0, r7

#29				ADD		MM_on2	{LNXT:5|6|-1}
(*) INT
005BA2B2  F8DF 7040		ldr r7, [pc, #+64] ; 0xA
005BA2B6  5FF7     		ldrsh r7, [r6, +r7]
005BA2B8  19C0     		add r0, r0, r7

#30				ST		MMs_on2	{LNXT:5|6|-1}
(*) INT
005BA2BA  F8DF 704C		ldr r7, [pc, #+76] ; 0x14
005BA2BE  53F0     		strh r0, [r6, +r7]

#31		
#32				(* MMs_off2 := HH_off2 * 60 + MM_off2; *)
#33				LD		HH_off2	{LNXT:6|-1|-1}
(*) UNDEF
005BA2C0  F8DF 7034		ldr r7, [pc, #+52] ; 0xC
005BA2C4  5FF0     		ldrsh r0, [r6, +r7]

#34				MUL		60	{LNXT:6|-1|-1}
(*) INT
005BA2C6  273C     		mov r7, #60 ; 60
005BA2C8  4378     		mul r0, r0, r7

#35				ADD		MM_off2	{LNXT:6|-1|-1}
(*) INT
005BA2CA  F8DF 7030		ldr r7, [pc, #+48] ; 0xE
005BA2CE  5FF7     		ldrsh r7, [r6, +r7]
005BA2D0  19C0     		add r0, r0, r7

#36				ST		MMs_off2	{LNXT:6|-1|-1}
(*) INT
005BA2D2  F8DF 7038		ldr r7, [pc, #+56] ; 0x16
005BA2D6  53F0     		strh r0, [r6, +r7]

#37				JMP		$label1	{LNXT:1|3|9}
(-) INT
005BA2D8  E000     		b #0 ; 0x005BA2DC


#38		$label0:
#39		
#40			(* ELSE *)
#41		
#42				(* RETURN *)
#43				RET
#44		
(-) INT
005BA2DC  E8BD 4040		ldmia sp!, { r6, lr }

005BA2E0  4770     		bx lr

005BA2E4  00000002		; 0x00000002
005BA2E8  00000004		; 0x00000004
005BA2EC  00000006		; 0x00000006
005BA2F0  00000008		; 0x00000008
005BA2F4  0000000A		; 0x0000000A
005BA2F8  0000000C		; 0x0000000C
005BA2FC  0000000E		; 0x0000000E
005BA300  00000010		; 0x00000010
005BA304  00000012		; 0x00000012
005BA308  00000014		; 0x00000014
005BA30C  00000016		; 0x00000016


Frame allocation:

	0000       : VAR HH_on1
	0002       : VAR MM_on1
	0004       : VAR HH_off1
	0006       : VAR MM_off1
	0008       : VAR HH_on2
	000A       : VAR MM_on2
	000C       : VAR HH_off2
	000E       : VAR MM_off2
	0010       : VAR MMs_on1
	0012       : VAR MMs_off1
	0014       : VAR MMs_on2
	0016       : VAR MMs_off2

END_FUNCTION_BLOCK
**************************************************
	List function block: OnOffCalendar
**************************************************

FUNCTION_BLOCK OnOffCalendar

        VAR_INPUT
Giorno_settimana : INT;
Ora : INT;
Minuto : INT;
P11On : INT := 480;
P12Off : INT := 750;
P13On : INT := 840;
P14Off : INT := 1080;
P21On : INT := 480;
P22Off : INT := 750;
P23On : INT := 840;
P24Off : INT := 1080;
P31On : INT := 480;
P32Off : INT := 750;
P33On : INT := 840;
P34Off : INT := 1080;
P41On : INT := 480;
P42Off : INT := 750;
P43On : INT := 840;
P44Off : INT := 1080;
P51On : INT := 480;
P52Off : INT := 750;
P53On : INT := 840;
P54Off : INT := 1080;
P61On : INT := 480;
P62Off : INT := 750;
P63On : INT := 840;
P64Off : INT := 1080;
P71On : INT := 480;
P72Off : INT := 750;
P73On : INT := 840;
P74Off : INT := 1080;
Lun_enabled : BOOL := TRUE;
Mar_enabled : BOOL := TRUE;
Mer_enabled : BOOL := TRUE;
Gio_enabled : BOOL := TRUE;
Ven_enabled : BOOL := TRUE;
Sab_enabled : BOOL := FALSE;
Dom_enabled : BOOL := FALSE;
	END_VAR

        VAR_OUTPUT
OnByCalendar : BOOL;
	END_VAR

        VAR
NOW : INT;
	END_VAR

END_FUNCTION_BLOCK

005BA310  E92D 4040		stmdb sp!, { r6, lr }
005BA314  462E     		mov r6, r5

#0		{SRC:OnOffCalendar}
#1		(*$WAITSWITCH$*)
#2		
#3			(* NOW := Ora*60+Minuto; *)
#4			LD		Ora	{LNXT:1|4|-1}
(*) UNDEF
005BA316  F8DF 7594		ldr r7, [pc, #+1428] ; 0x4
005BA31A  5FF0     		ldrsh r0, [r6, +r7]

#5			MUL		60	{LNXT:1|4|-1}
(*) INT
005BA31C  273C     		mov r7, #60 ; 60
005BA31E  4378     		mul r0, r0, r7

#6			ADD		Minuto	{LNXT:1|4|-1}
(*) INT
005BA320  F8DF 758C		ldr r7, [pc, #+1420] ; 0x6
005BA324  5FF7     		ldrsh r7, [r6, +r7]
005BA326  19C0     		add r0, r0, r7

#7			ST		NOW	{LNXT:1|4|-1}
(-) INT
005BA328  8030     		strh r0, [r6]

#8		
#9		
#10			(* CASE Giorno_settimana OF *)
#11		
#12			(* 1: *)
#13			LD		Giorno_settimana	{LNXT:4|-1|-1}
(*) UNDEF
005BA32A  F8DF 757C		ldr r7, [pc, #+1404] ; 0x2
005BA32E  5FF0     		ldrsh r0, [r6, +r7]

#14			EQ		1	{LNXT:4|-1|-1}
(*) INT
005BA330  2801     		cmp r0, #1
005BA332  BF18 2000		nemov r0, #0
005BA336  BF08 2001		eqmov r0, #1

#15			JMPC		$label1	{LNXT:4|5|13}
(-) BOOL
005BA33A  2800     		cmp r0, #0
005BA33C  D144     		bne #136 ; 0x005BA3C8


#16		
#17			(* 2: *)
#18			LD		Giorno_settimana	{LNXT:13|-1|-1}
(*) UNDEF
005BA340  F8DF 7564		ldr r7, [pc, #+1380] ; 0x2
005BA344  5FF0     		ldrsh r0, [r6, +r7]

#19			EQ		2	{LNXT:13|-1|-1}
(*) INT
005BA346  2802     		cmp r0, #2
005BA348  BF18 2000		nemov r0, #0
005BA34C  BF08 2001		eqmov r0, #1

#20			JMPC		$label2	{LNXT:13|14|22}
(-) BOOL
005BA350  2800     		cmp r0, #0
005BA352  F040 8091		bne #290 ; 0x005BA478


#21		
#22			(* 3: *)
#23			LD		Giorno_settimana	{LNXT:22|-1|-1}
(*) UNDEF
005BA356  F8DF 7550		ldr r7, [pc, #+1360] ; 0x2
005BA35A  5FF0     		ldrsh r0, [r6, +r7]

#24			EQ		3	{LNXT:22|-1|-1}
(*) INT
005BA35C  2803     		cmp r0, #3
005BA35E  BF18 2000		nemov r0, #0
005BA362  BF08 2001		eqmov r0, #1

#25			JMPC		$label3	{LNXT:22|23|31}
(-) BOOL
005BA366  2800     		cmp r0, #0
005BA368  F040 80DE		bne #444 ; 0x005BA528


#26		
#27			(* 4: *)
#28			LD		Giorno_settimana	{LNXT:31|-1|-1}
(*) UNDEF
005BA36C  F8DF 7538		ldr r7, [pc, #+1336] ; 0x2
005BA370  5FF0     		ldrsh r0, [r6, +r7]

#29			EQ		4	{LNXT:31|-1|-1}
(*) INT
005BA372  2804     		cmp r0, #4
005BA374  BF18 2000		nemov r0, #0
005BA378  BF08 2001		eqmov r0, #1

#30			JMPC		$label4	{LNXT:31|32|40}
(-) BOOL
005BA37C  2800     		cmp r0, #0
005BA37E  F040 812B		bne #598 ; 0x005BA5D8


#31		
#32			(* 5: *)
#33			LD		Giorno_settimana	{LNXT:40|-1|-1}
(*) UNDEF
005BA382  F8DF 7524		ldr r7, [pc, #+1316] ; 0x2
005BA386  5FF0     		ldrsh r0, [r6, +r7]

#34			EQ		5	{LNXT:40|-1|-1}
(*) INT
005BA388  2805     		cmp r0, #5
005BA38A  BF18 2000		nemov r0, #0
005BA38E  BF08 2001		eqmov r0, #1

#35			JMPC		$label5	{LNXT:40|41|49}
(-) BOOL
005BA392  2800     		cmp r0, #0
005BA394  F040 8178		bne #752 ; 0x005BA688


#36		
#37			(* 6: *)
#38			LD		Giorno_settimana	{LNXT:49|-1|-1}
(*) UNDEF
005BA398  F8DF 750C		ldr r7, [pc, #+1292] ; 0x2
005BA39C  5FF0     		ldrsh r0, [r6, +r7]

#39			EQ		6	{LNXT:49|-1|-1}
(*) INT
005BA39E  2806     		cmp r0, #6
005BA3A0  BF18 2000		nemov r0, #0
005BA3A4  BF08 2001		eqmov r0, #1

#40			JMPC		$label6	{LNXT:49|50|58}
(-) BOOL
005BA3A8  2800     		cmp r0, #0
005BA3AA  F040 81C5		bne #906 ; 0x005BA738


#41		
#42			(* 7: *)
#43			LD		Giorno_settimana	{LNXT:58|-1|-1}
(*) UNDEF
005BA3AE  F8DF 74F8		ldr r7, [pc, #+1272] ; 0x2
005BA3B2  5FF0     		ldrsh r0, [r6, +r7]

#44			EQ		7	{LNXT:58|-1|-1}
(*) INT
005BA3B4  2807     		cmp r0, #7
005BA3B6  BF18 2000		nemov r0, #0
005BA3BA  BF08 2001		eqmov r0, #1

#45			JMPC		$label7	{LNXT:58|59|68}
(-) BOOL
005BA3BE  2800     		cmp r0, #0
005BA3C0  F040 8212		bne #1060 ; 0x005BA7E8


#46		
#47			(* ELSE *)
#48			JMP		$label8	{LNXT:58|59|68}
(-) BOOL
005BA3C4  E268     		b #1232 ; 0x005BA898


#49		
#50			(* Istruzioni di ciascun CASE: *)
#51		
#52		$label1:
#53		
#54				(* IF NOW >= P11On AND NOW < P12Off AND Lun_enabled *)
#55				LD		NOW	{LNXT:5|-1|-1}
(*) UNDEF
005BA3C8  F9B6 0000		ldrsh r0, [r6]

#56				LT		P12Off	{LNXT:5|-1|-1}
(*) INT
005BA3CC  F8DF 74E8		ldr r7, [pc, #+1256] ; 0xA
005BA3D0  5FF7     		ldrsh r7, [r6, +r7]
005BA3D2  42B8     		cmp r0, r7
005BA3D4  BFA8 2000		gemov r0, #0
005BA3D8  BFB8 2001		ltmov r0, #1

#57				AND(		NOW	{LNXT:5|-1|-1}
(*) BOOL
005BA3DC  B082     		sub sp, sp, #8
005BA3DE  F8CD 0000		str r0, [sp]
005BA3E2  F9B6 0000		ldrsh r0, [r6]

#58				GE		P11On	{LNXT:5|-1|-1}
(*) INT
005BA3E6  F8DF 74CC		ldr r7, [pc, #+1228] ; 0x8
005BA3EA  5FF7     		ldrsh r7, [r6, +r7]
005BA3EC  42B8     		cmp r0, r7
005BA3EE  BFB8 2000		ltmov r0, #0
005BA3F2  BFA8 2001		gemov r0, #1

#59				)	{LNXT:5|-1|-1}
(*) BOOL
005BA3F6  4607     		mov r7, r0
005BA3F8  F8DD 0000		ldr r0, [sp]
005BA3FC  B002     		add sp, sp, #8
005BA3FE  4038     		and r0, r0, r7

#60				AND		Lun_enabled	{LNXT:5|-1|-1}
(*) BOOL
005BA400  F8DF 7520		ldr r7, [pc, #+1312] ; 0x40
005BA404  5DF7     		ldrb r7, [r6, +r7]
005BA406  4038     		and r0, r0, r7

#61				JMPCN	$label9	{LNXT:5|6|7}
(-) BOOL
005BA408  2800     		cmp r0, #0
005BA40A  D006     		beq #12 ; 0x005BA41A


#62		
#63				(* THEN *)
#64		
#65					(* OnByCalendar := TRUE; *)
#66					MOVE		TRUE,OnByCalendar	{LNXT:6|-1|-1}
(*) BOOL
005BA40E  2001     		mov r0, #1 ; 1
005BA410  F8DF 752C		ldr r7, [pc, #+1324] ; 0x47
005BA414  55F0     		strb r0, [r6, +r7]

#67					JMP		$label11	{LNXT:5|6|7}
(-) BOOL
005BA416  E02D     		b #90 ; 0x005BA474


#68		$label9:
#69		
#70				(* ELSIF NOW >= P13On AND NOW < P14Off AND Lun_enabled *)
#71				LD		NOW	{LNXT:7|-1|-1}
(*) UNDEF
005BA41A  F9B6 0000		ldrsh r0, [r6]

#72				LT		P14Off	{LNXT:7|-1|-1}
(*) INT
005BA41E  F8DF 74A0		ldr r7, [pc, #+1184] ; 0xE
005BA422  5FF7     		ldrsh r7, [r6, +r7]
005BA424  42B8     		cmp r0, r7
005BA426  BFA8 2000		gemov r0, #0
005BA42A  BFB8 2001		ltmov r0, #1

#73				AND(		NOW	{LNXT:7|-1|-1}
(*) BOOL
005BA42E  B082     		sub sp, sp, #8
005BA430  F8CD 0000		str r0, [sp]
005BA434  F9B6 0000		ldrsh r0, [r6]

#74				GE		P13On	{LNXT:7|-1|-1}
(*) INT
005BA438  F8DF 7480		ldr r7, [pc, #+1152] ; 0xC
005BA43C  5FF7     		ldrsh r7, [r6, +r7]
005BA43E  42B8     		cmp r0, r7
005BA440  BFB8 2000		ltmov r0, #0
005BA444  BFA8 2001		gemov r0, #1

#75				)	{LNXT:7|-1|-1}
(*) BOOL
005BA448  4607     		mov r7, r0
005BA44A  F8DD 0000		ldr r0, [sp]
005BA44E  B002     		add sp, sp, #8
005BA450  4038     		and r0, r0, r7

#76				AND		Lun_enabled	{LNXT:7|-1|-1}
(*) BOOL
005BA452  F8DF 74D0		ldr r7, [pc, #+1232] ; 0x40
005BA456  5DF7     		ldrb r7, [r6, +r7]
005BA458  4038     		and r0, r0, r7

#77				JMPCN	$label10	{LNXT:7|8|10}
(-) BOOL
005BA45A  2800     		cmp r0, #0
005BA45C  D006     		beq #12 ; 0x005BA46C


#78		
#79				(* THEN *)
#80		
#81					(* OnByCalendar := TRUE; *)
#82					MOVE		TRUE,OnByCalendar	{LNXT:8|-1|-1}
(*) BOOL
005BA460  2001     		mov r0, #1 ; 1
005BA462  F8DF 74DC		ldr r7, [pc, #+1244] ; 0x47
005BA466  55F0     		strb r0, [r6, +r7]

#83					JMP		$label11	{LNXT:7|8|10}
(-) BOOL
005BA468  E004     		b #8 ; 0x005BA474


#84		$label10:
#85		
#86				(* ELSE *)
#87		
#88					(* OnByCalendar := FALSE; *)
#89					MOVE		FALSE,OnByCalendar	{LNXT:10|-1|-1}
(*) BOOL
005BA46C  2000     		mov r0, #0 ; 0
005BA46E  F8DF 74D0		ldr r7, [pc, #+1232] ; 0x47
005BA472  55F0     		strb r0, [r6, +r7]

#90		
#91		$label11:
#92				(* END_IF *)
#93				JMP		$label0	{LNXT:1|10|-1}
(-) BOOL
005BA474  E214     		b #1064 ; 0x005BA8A0


#94		
#95		$label2:
#96		
#97				(* IF NOW >= P21On AND NOW < P22Off AND Mar_enabled *)
#98				LD		NOW	{LNXT:14|-1|-1}
(*) UNDEF
005BA478  F9B6 0000		ldrsh r0, [r6]

#99				LT		P22Off	{LNXT:14|-1|-1}
(*) INT
005BA47C  F8DF 7448		ldr r7, [pc, #+1096] ; 0x12
005BA480  5FF7     		ldrsh r7, [r6, +r7]
005BA482  42B8     		cmp r0, r7
005BA484  BFA8 2000		gemov r0, #0
005BA488  BFB8 2001		ltmov r0, #1

#100				AND(		NOW	{LNXT:14|-1|-1}
(*) BOOL
005BA48C  B082     		sub sp, sp, #8
005BA48E  F8CD 0000		str r0, [sp]
005BA492  F9B6 0000		ldrsh r0, [r6]

#101				GE		P21On	{LNXT:14|-1|-1}
(*) INT
005BA496  F8DF 742C		ldr r7, [pc, #+1068] ; 0x10
005BA49A  5FF7     		ldrsh r7, [r6, +r7]
005BA49C  42B8     		cmp r0, r7
005BA49E  BFB8 2000		ltmov r0, #0
005BA4A2  BFA8 2001		gemov r0, #1

#102				)	{LNXT:14|-1|-1}
(*) BOOL
005BA4A6  4607     		mov r7, r0
005BA4A8  F8DD 0000		ldr r0, [sp]
005BA4AC  B002     		add sp, sp, #8
005BA4AE  4038     		and r0, r0, r7

#103				AND		Mar_enabled	{LNXT:14|-1|-1}
(*) BOOL
005BA4B0  F8DF 7474		ldr r7, [pc, #+1140] ; 0x41
005BA4B4  5DF7     		ldrb r7, [r6, +r7]
005BA4B6  4038     		and r0, r0, r7

#104				JMPCN	$label12	{LNXT:14|15|16}
(-) BOOL
005BA4B8  2800     		cmp r0, #0
005BA4BA  D006     		beq #12 ; 0x005BA4CA


#105		
#106				(* THEN *)
#107		
#108					(* OnByCalendar := TRUE; *)
#109					MOVE		TRUE,OnByCalendar	{LNXT:15|-1|-1}
(*) BOOL
005BA4BE  2001     		mov r0, #1 ; 1
005BA4C0  F8DF 747C		ldr r7, [pc, #+1148] ; 0x47
005BA4C4  55F0     		strb r0, [r6, +r7]

#110					JMP		$label14	{LNXT:14|15|16}
(-) BOOL
005BA4C6  E02D     		b #90 ; 0x005BA524


#111		$label12:
#112		
#113				(* ELSIF NOW >= P23On AND NOW < P24Off AND Mar_enabled *)
#114				LD		NOW	{LNXT:16|-1|-1}
(*) UNDEF
005BA4CA  F9B6 0000		ldrsh r0, [r6]

#115				LT		P24Off	{LNXT:16|-1|-1}
(*) INT
005BA4CE  F8DF 7400		ldr r7, [pc, #+1024] ; 0x16
005BA4D2  5FF7     		ldrsh r7, [r6, +r7]
005BA4D4  42B8     		cmp r0, r7
005BA4D6  BFA8 2000		gemov r0, #0
005BA4DA  BFB8 2001		ltmov r0, #1

#116				AND(		NOW	{LNXT:16|-1|-1}
(*) BOOL
005BA4DE  B082     		sub sp, sp, #8
005BA4E0  F8CD 0000		str r0, [sp]
005BA4E4  F9B6 0000		ldrsh r0, [r6]

#117				GE		P23On	{LNXT:16|-1|-1}
(*) INT
005BA4E8  F8DF 73E0		ldr r7, [pc, #+992] ; 0x14
005BA4EC  5FF7     		ldrsh r7, [r6, +r7]
005BA4EE  42B8     		cmp r0, r7
005BA4F0  BFB8 2000		ltmov r0, #0
005BA4F4  BFA8 2001		gemov r0, #1

#118				)	{LNXT:16|-1|-1}
(*) BOOL
005BA4F8  4607     		mov r7, r0
005BA4FA  F8DD 0000		ldr r0, [sp]
005BA4FE  B002     		add sp, sp, #8
005BA500  4038     		and r0, r0, r7

#119				AND		Mar_enabled	{LNXT:16|-1|-1}
(*) BOOL
005BA502  F8DF 7424		ldr r7, [pc, #+1060] ; 0x41
005BA506  5DF7     		ldrb r7, [r6, +r7]
005BA508  4038     		and r0, r0, r7

#120				JMPCN	$label13	{LNXT:16|17|19}
(-) BOOL
005BA50A  2800     		cmp r0, #0
005BA50C  D006     		beq #12 ; 0x005BA51C


#121		
#122				(* THEN *)
#123		
#124					(* OnByCalendar := TRUE; *)
#125					MOVE		TRUE,OnByCalendar	{LNXT:17|-1|-1}
(*) BOOL
005BA510  2001     		mov r0, #1 ; 1
005BA512  F8DF 742C		ldr r7, [pc, #+1068] ; 0x47
005BA516  55F0     		strb r0, [r6, +r7]

#126					JMP		$label14	{LNXT:16|17|19}
(-) BOOL
005BA518  E004     		b #8 ; 0x005BA524


#127		$label13:
#128		
#129				(* ELSE *)
#130		
#131					(* OnByCalendar := FALSE; *)
#132					MOVE		FALSE,OnByCalendar	{LNXT:19|-1|-1}
(*) BOOL
005BA51C  2000     		mov r0, #0 ; 0
005BA51E  F8DF 7420		ldr r7, [pc, #+1056] ; 0x47
005BA522  55F0     		strb r0, [r6, +r7]

#133		
#134		$label14:
#135				(* END_IF *)
#136				JMP		$label0	{LNXT:1|19|-1}
(-) BOOL
005BA524  E1BC     		b #888 ; 0x005BA8A0


#137		
#138		$label3:
#139		
#140				(* IF NOW >= P31On AND NOW < P32Off AND Mer_enabled *)
#141				LD		NOW	{LNXT:23|-1|-1}
(*) UNDEF
005BA528  F9B6 0000		ldrsh r0, [r6]

#142				LT		P32Off	{LNXT:23|-1|-1}
(*) INT
005BA52C  F8DF 73A8		ldr r7, [pc, #+936] ; 0x1A
005BA530  5FF7     		ldrsh r7, [r6, +r7]
005BA532  42B8     		cmp r0, r7
005BA534  BFA8 2000		gemov r0, #0
005BA538  BFB8 2001		ltmov r0, #1

#143				AND(		NOW	{LNXT:23|-1|-1}
(*) BOOL
005BA53C  B082     		sub sp, sp, #8
005BA53E  F8CD 0000		str r0, [sp]
005BA542  F9B6 0000		ldrsh r0, [r6]

#144				GE		P31On	{LNXT:23|-1|-1}
(*) INT
005BA546  F8DF 738C		ldr r7, [pc, #+908] ; 0x18
005BA54A  5FF7     		ldrsh r7, [r6, +r7]
005BA54C  42B8     		cmp r0, r7
005BA54E  BFB8 2000		ltmov r0, #0
005BA552  BFA8 2001		gemov r0, #1

#145				)	{LNXT:23|-1|-1}
(*) BOOL
005BA556  4607     		mov r7, r0
005BA558  F8DD 0000		ldr r0, [sp]
005BA55C  B002     		add sp, sp, #8
005BA55E  4038     		and r0, r0, r7

#146				AND		Mer_enabled	{LNXT:23|-1|-1}
(*) BOOL
005BA560  F8DF 73C8		ldr r7, [pc, #+968] ; 0x42
005BA564  5DF7     		ldrb r7, [r6, +r7]
005BA566  4038     		and r0, r0, r7

#147				JMPCN	$label15	{LNXT:23|24|25}
(-) BOOL
005BA568  2800     		cmp r0, #0
005BA56A  D006     		beq #12 ; 0x005BA57A


#148		
#149				(* THEN *)
#150		
#151					(* OnByCalendar := TRUE; *)
#152					MOVE		TRUE,OnByCalendar	{LNXT:24|-1|-1}
(*) BOOL
005BA56E  2001     		mov r0, #1 ; 1
005BA570  F8DF 73CC		ldr r7, [pc, #+972] ; 0x47
005BA574  55F0     		strb r0, [r6, +r7]

#153					JMP		$label17	{LNXT:23|24|25}
(-) BOOL
005BA576  E02D     		b #90 ; 0x005BA5D4


#154		$label15:
#155		
#156				(* ELSIF NOW >= P33On AND NOW < P34Off AND Mer_enabled *)
#157				LD		NOW	{LNXT:25|-1|-1}
(*) UNDEF
005BA57A  F9B6 0000		ldrsh r0, [r6]

#158				LT		P34Off	{LNXT:25|-1|-1}
(*) INT
005BA57E  F8DF 7360		ldr r7, [pc, #+864] ; 0x1E
005BA582  5FF7     		ldrsh r7, [r6, +r7]
005BA584  42B8     		cmp r0, r7
005BA586  BFA8 2000		gemov r0, #0
005BA58A  BFB8 2001		ltmov r0, #1

#159				AND(		NOW	{LNXT:25|-1|-1}
(*) BOOL
005BA58E  B082     		sub sp, sp, #8
005BA590  F8CD 0000		str r0, [sp]
005BA594  F9B6 0000		ldrsh r0, [r6]

#160				GE		P33On	{LNXT:25|-1|-1}
(*) INT
005BA598  F8DF 7340		ldr r7, [pc, #+832] ; 0x1C
005BA59C  5FF7     		ldrsh r7, [r6, +r7]
005BA59E  42B8     		cmp r0, r7
005BA5A0  BFB8 2000		ltmov r0, #0
005BA5A4  BFA8 2001		gemov r0, #1

#161				)	{LNXT:25|-1|-1}
(*) BOOL
005BA5A8  4607     		mov r7, r0
005BA5AA  F8DD 0000		ldr r0, [sp]
005BA5AE  B002     		add sp, sp, #8
005BA5B0  4038     		and r0, r0, r7

#162				AND		Mer_enabled	{LNXT:25|-1|-1}
(*) BOOL
005BA5B2  F8DF 7378		ldr r7, [pc, #+888] ; 0x42
005BA5B6  5DF7     		ldrb r7, [r6, +r7]
005BA5B8  4038     		and r0, r0, r7

#163				JMPCN	$label16	{LNXT:25|26|28}
(-) BOOL
005BA5BA  2800     		cmp r0, #0
005BA5BC  D006     		beq #12 ; 0x005BA5CC


#164		
#165				(* THEN *)
#166		
#167					(* OnByCalendar := TRUE; *)
#168					MOVE		TRUE,OnByCalendar	{LNXT:26|-1|-1}
(*) BOOL
005BA5C0  2001     		mov r0, #1 ; 1
005BA5C2  F8DF 737C		ldr r7, [pc, #+892] ; 0x47
005BA5C6  55F0     		strb r0, [r6, +r7]

#169					JMP		$label17	{LNXT:25|26|28}
(-) BOOL
005BA5C8  E004     		b #8 ; 0x005BA5D4


#170		$label16:
#171		
#172				(* ELSE *)
#173		
#174					(* OnByCalendar := FALSE; *)
#175					MOVE		FALSE,OnByCalendar	{LNXT:28|-1|-1}
(*) BOOL
005BA5CC  2000     		mov r0, #0 ; 0
005BA5CE  F8DF 7370		ldr r7, [pc, #+880] ; 0x47
005BA5D2  55F0     		strb r0, [r6, +r7]

#176		
#177		$label17:
#178				(* END_IF *)
#179				JMP		$label0	{LNXT:1|28|-1}
(-) BOOL
005BA5D4  E164     		b #712 ; 0x005BA8A0


#180		
#181		$label4:
#182		
#183				(* IF NOW >= P41On AND NOW < P42Off AND Gio_enabled *)
#184				LD		NOW	{LNXT:32|-1|-1}
(*) UNDEF
005BA5D8  F9B6 0000		ldrsh r0, [r6]

#185				LT		P42Off	{LNXT:32|-1|-1}
(*) INT
005BA5DC  F8DF 7308		ldr r7, [pc, #+776] ; 0x22
005BA5E0  5FF7     		ldrsh r7, [r6, +r7]
005BA5E2  42B8     		cmp r0, r7
005BA5E4  BFA8 2000		gemov r0, #0
005BA5E8  BFB8 2001		ltmov r0, #1

#186				AND(		NOW	{LNXT:32|-1|-1}
(*) BOOL
005BA5EC  B082     		sub sp, sp, #8
005BA5EE  F8CD 0000		str r0, [sp]
005BA5F2  F9B6 0000		ldrsh r0, [r6]

#187				GE		P41On	{LNXT:32|-1|-1}
(*) INT
005BA5F6  F8DF 72EC		ldr r7, [pc, #+748] ; 0x20
005BA5FA  5FF7     		ldrsh r7, [r6, +r7]
005BA5FC  42B8     		cmp r0, r7
005BA5FE  BFB8 2000		ltmov r0, #0
005BA602  BFA8 2001		gemov r0, #1

#188				)	{LNXT:32|-1|-1}
(*) BOOL
005BA606  4607     		mov r7, r0
005BA608  F8DD 0000		ldr r0, [sp]
005BA60C  B002     		add sp, sp, #8
005BA60E  4038     		and r0, r0, r7

#189				AND		Gio_enabled	{LNXT:32|-1|-1}
(*) BOOL
005BA610  F8DF 731C		ldr r7, [pc, #+796] ; 0x43
005BA614  5DF7     		ldrb r7, [r6, +r7]
005BA616  4038     		and r0, r0, r7

#190				JMPCN	$label18	{LNXT:32|33|34}
(-) BOOL
005BA618  2800     		cmp r0, #0
005BA61A  D006     		beq #12 ; 0x005BA62A


#191		
#192				(* THEN *)
#193		
#194					(* OnByCalendar := TRUE; *)
#195					MOVE		TRUE,OnByCalendar	{LNXT:33|-1|-1}
(*) BOOL
005BA61E  2001     		mov r0, #1 ; 1
005BA620  F8DF 731C		ldr r7, [pc, #+796] ; 0x47
005BA624  55F0     		strb r0, [r6, +r7]

#196					JMP		$label20	{LNXT:32|33|34}
(-) BOOL
005BA626  E02D     		b #90 ; 0x005BA684


#197		$label18:
#198		
#199				(* ELSIF NOW >= P43On AND NOW < P44Off AND Gio_enabled *)
#200				LD		NOW	{LNXT:34|-1|-1}
(*) UNDEF
005BA62A  F9B6 0000		ldrsh r0, [r6]

#201				LT		P44Off	{LNXT:34|-1|-1}
(*) INT
005BA62E  F8DF 72C0		ldr r7, [pc, #+704] ; 0x26
005BA632  5FF7     		ldrsh r7, [r6, +r7]
005BA634  42B8     		cmp r0, r7
005BA636  BFA8 2000		gemov r0, #0
005BA63A  BFB8 2001		ltmov r0, #1

#202				AND(		NOW	{LNXT:34|-1|-1}
(*) BOOL
005BA63E  B082     		sub sp, sp, #8
005BA640  F8CD 0000		str r0, [sp]
005BA644  F9B6 0000		ldrsh r0, [r6]

#203				GE		P43On	{LNXT:34|-1|-1}
(*) INT
005BA648  F8DF 72A0		ldr r7, [pc, #+672] ; 0x24
005BA64C  5FF7     		ldrsh r7, [r6, +r7]
005BA64E  42B8     		cmp r0, r7
005BA650  BFB8 2000		ltmov r0, #0
005BA654  BFA8 2001		gemov r0, #1

#204				)	{LNXT:34|-1|-1}
(*) BOOL
005BA658  4607     		mov r7, r0
005BA65A  F8DD 0000		ldr r0, [sp]
005BA65E  B002     		add sp, sp, #8
005BA660  4038     		and r0, r0, r7

#205				AND		Gio_enabled	{LNXT:34|-1|-1}
(*) BOOL
005BA662  F8DF 72CC		ldr r7, [pc, #+716] ; 0x43
005BA666  5DF7     		ldrb r7, [r6, +r7]
005BA668  4038     		and r0, r0, r7

#206				JMPCN	$label19	{LNXT:34|35|37}
(-) BOOL
005BA66A  2800     		cmp r0, #0
005BA66C  D006     		beq #12 ; 0x005BA67C


#207		
#208				(* THEN *)
#209		
#210					(* OnByCalendar := TRUE; *)
#211					MOVE		TRUE,OnByCalendar	{LNXT:35|-1|-1}
(*) BOOL
005BA670  2001     		mov r0, #1 ; 1
005BA672  F8DF 72CC		ldr r7, [pc, #+716] ; 0x47
005BA676  55F0     		strb r0, [r6, +r7]

#212					JMP		$label20	{LNXT:34|35|37}
(-) BOOL
005BA678  E004     		b #8 ; 0x005BA684


#213		$label19:
#214		
#215				(* ELSE *)
#216		
#217					(* OnByCalendar := FALSE; *)
#218					MOVE		FALSE,OnByCalendar	{LNXT:37|-1|-1}
(*) BOOL
005BA67C  2000     		mov r0, #0 ; 0
005BA67E  F8DF 72C0		ldr r7, [pc, #+704] ; 0x47
005BA682  55F0     		strb r0, [r6, +r7]

#219		
#220		$label20:
#221				(* END_IF *)
#222				JMP		$label0	{LNXT:1|37|-1}
(-) BOOL
005BA684  E10C     		b #536 ; 0x005BA8A0


#223		
#224		$label5:
#225		
#226				(* IF NOW >= P51On AND NOW < P52Off AND Ven_enabled *)
#227				LD		NOW	{LNXT:41|-1|-1}
(*) UNDEF
005BA688  F9B6 0000		ldrsh r0, [r6]

#228				LT		P52Off	{LNXT:41|-1|-1}
(*) INT
005BA68C  F8DF 7268		ldr r7, [pc, #+616] ; 0x2A
005BA690  5FF7     		ldrsh r7, [r6, +r7]
005BA692  42B8     		cmp r0, r7
005BA694  BFA8 2000		gemov r0, #0
005BA698  BFB8 2001		ltmov r0, #1

#229				AND(		NOW	{LNXT:41|-1|-1}
(*) BOOL
005BA69C  B082     		sub sp, sp, #8
005BA69E  F8CD 0000		str r0, [sp]
005BA6A2  F9B6 0000		ldrsh r0, [r6]

#230				GE		P51On	{LNXT:41|-1|-1}
(*) INT
005BA6A6  F8DF 724C		ldr r7, [pc, #+588] ; 0x28
005BA6AA  5FF7     		ldrsh r7, [r6, +r7]
005BA6AC  42B8     		cmp r0, r7
005BA6AE  BFB8 2000		ltmov r0, #0
005BA6B2  BFA8 2001		gemov r0, #1

#231				)	{LNXT:41|-1|-1}
(*) BOOL
005BA6B6  4607     		mov r7, r0
005BA6B8  F8DD 0000		ldr r0, [sp]
005BA6BC  B002     		add sp, sp, #8
005BA6BE  4038     		and r0, r0, r7

#232				AND		Ven_enabled	{LNXT:41|-1|-1}
(*) BOOL
005BA6C0  F8DF 7270		ldr r7, [pc, #+624] ; 0x44
005BA6C4  5DF7     		ldrb r7, [r6, +r7]
005BA6C6  4038     		and r0, r0, r7

#233				JMPCN	$label21	{LNXT:41|42|43}
(-) BOOL
005BA6C8  2800     		cmp r0, #0
005BA6CA  D006     		beq #12 ; 0x005BA6DA


#234		
#235				(* THEN *)
#236		
#237					(* OnByCalendar := TRUE; *)
#238					MOVE		TRUE,OnByCalendar	{LNXT:42|-1|-1}
(*) BOOL
005BA6CE  2001     		mov r0, #1 ; 1
005BA6D0  F8DF 726C		ldr r7, [pc, #+620] ; 0x47
005BA6D4  55F0     		strb r0, [r6, +r7]

#239					JMP		$label23	{LNXT:41|42|43}
(-) BOOL
005BA6D6  E02D     		b #90 ; 0x005BA734


#240		$label21:
#241		
#242				(* ELSIF NOW >= P53On AND NOW < P54Off AND Ven_enabled *)
#243				LD		NOW	{LNXT:43|-1|-1}
(*) UNDEF
005BA6DA  F9B6 0000		ldrsh r0, [r6]

#244				LT		P54Off	{LNXT:43|-1|-1}
(*) INT
005BA6DE  F8DF 7220		ldr r7, [pc, #+544] ; 0x2E
005BA6E2  5FF7     		ldrsh r7, [r6, +r7]
005BA6E4  42B8     		cmp r0, r7
005BA6E6  BFA8 2000		gemov r0, #0
005BA6EA  BFB8 2001		ltmov r0, #1

#245				AND(		NOW	{LNXT:43|-1|-1}
(*) BOOL
005BA6EE  B082     		sub sp, sp, #8
005BA6F0  F8CD 0000		str r0, [sp]
005BA6F4  F9B6 0000		ldrsh r0, [r6]

#246				GE		P53On	{LNXT:43|-1|-1}
(*) INT
005BA6F8  F8DF 7200		ldr r7, [pc, #+512] ; 0x2C
005BA6FC  5FF7     		ldrsh r7, [r6, +r7]
005BA6FE  42B8     		cmp r0, r7
005BA700  BFB8 2000		ltmov r0, #0
005BA704  BFA8 2001		gemov r0, #1

#247				)	{LNXT:43|-1|-1}
(*) BOOL
005BA708  4607     		mov r7, r0
005BA70A  F8DD 0000		ldr r0, [sp]
005BA70E  B002     		add sp, sp, #8
005BA710  4038     		and r0, r0, r7

#248				AND		Ven_enabled	{LNXT:43|-1|-1}
(*) BOOL
005BA712  F8DF 7220		ldr r7, [pc, #+544] ; 0x44
005BA716  5DF7     		ldrb r7, [r6, +r7]
005BA718  4038     		and r0, r0, r7

#249				JMPCN	$label22	{LNXT:43|44|46}
(-) BOOL
005BA71A  2800     		cmp r0, #0
005BA71C  D006     		beq #12 ; 0x005BA72C


#250		
#251				(* THEN *)
#252		
#253					(* OnByCalendar := TRUE; *)
#254					MOVE		TRUE,OnByCalendar	{LNXT:44|-1|-1}
(*) BOOL
005BA720  2001     		mov r0, #1 ; 1
005BA722  F8DF 721C		ldr r7, [pc, #+540] ; 0x47
005BA726  55F0     		strb r0, [r6, +r7]

#255					JMP		$label23	{LNXT:43|44|46}
(-) BOOL
005BA728  E004     		b #8 ; 0x005BA734


#256		$label22:
#257		
#258				(* ELSE *)
#259		
#260					(* OnByCalendar := FALSE; *)
#261					MOVE		FALSE,OnByCalendar	{LNXT:46|-1|-1}
(*) BOOL
005BA72C  2000     		mov r0, #0 ; 0
005BA72E  F8DF 7210		ldr r7, [pc, #+528] ; 0x47
005BA732  55F0     		strb r0, [r6, +r7]

#262		
#263		$label23:
#264				(* END_IF *)
#265				JMP		$label0	{LNXT:1|46|-1}
(-) BOOL
005BA734  E0B4     		b #360 ; 0x005BA8A0


#266		
#267		$label6:
#268		
#269				(* IF NOW >= P61On AND NOW < P62Off AND Sab_enabled *)
#270				LD		NOW	{LNXT:50|-1|-1}
(*) UNDEF
005BA738  F9B6 0000		ldrsh r0, [r6]

#271				LT		P62Off	{LNXT:50|-1|-1}
(*) INT
005BA73C  F8DF 71C8		ldr r7, [pc, #+456] ; 0x32
005BA740  5FF7     		ldrsh r7, [r6, +r7]
005BA742  42B8     		cmp r0, r7
005BA744  BFA8 2000		gemov r0, #0
005BA748  BFB8 2001		ltmov r0, #1

#272				AND(		NOW	{LNXT:50|-1|-1}
(*) BOOL
005BA74C  B082     		sub sp, sp, #8
005BA74E  F8CD 0000		str r0, [sp]
005BA752  F9B6 0000		ldrsh r0, [r6]

#273				GE		P61On	{LNXT:50|-1|-1}
(*) INT
005BA756  F8DF 71AC		ldr r7, [pc, #+428] ; 0x30
005BA75A  5FF7     		ldrsh r7, [r6, +r7]
005BA75C  42B8     		cmp r0, r7
005BA75E  BFB8 2000		ltmov r0, #0
005BA762  BFA8 2001		gemov r0, #1

#274				)	{LNXT:50|-1|-1}
(*) BOOL
005BA766  4607     		mov r7, r0
005BA768  F8DD 0000		ldr r0, [sp]
005BA76C  B002     		add sp, sp, #8
005BA76E  4038     		and r0, r0, r7

#275				AND		Sab_enabled	{LNXT:50|-1|-1}
(*) BOOL
005BA770  F8DF 71C4		ldr r7, [pc, #+452] ; 0x45
005BA774  5DF7     		ldrb r7, [r6, +r7]
005BA776  4038     		and r0, r0, r7

#276				JMPCN	$label24	{LNXT:50|51|52}
(-) BOOL
005BA778  2800     		cmp r0, #0
005BA77A  D006     		beq #12 ; 0x005BA78A


#277		
#278				(* THEN *)
#279		
#280					(* OnByCalendar := TRUE; *)
#281					MOVE		TRUE,OnByCalendar	{LNXT:51|-1|-1}
(*) BOOL
005BA77E  2001     		mov r0, #1 ; 1
005BA780  F8DF 71BC		ldr r7, [pc, #+444] ; 0x47
005BA784  55F0     		strb r0, [r6, +r7]

#282					JMP		$label26	{LNXT:50|51|52}
(-) BOOL
005BA786  E02D     		b #90 ; 0x005BA7E4


#283		$label24:
#284		
#285				(* ELSIF NOW >= P63On AND NOW < P64Off AND Sab_enabled *)
#286				LD		NOW	{LNXT:52|-1|-1}
(*) UNDEF
005BA78A  F9B6 0000		ldrsh r0, [r6]

#287				LT		P64Off	{LNXT:52|-1|-1}
(*) INT
005BA78E  F8DF 7180		ldr r7, [pc, #+384] ; 0x36
005BA792  5FF7     		ldrsh r7, [r6, +r7]
005BA794  42B8     		cmp r0, r7
005BA796  BFA8 2000		gemov r0, #0
005BA79A  BFB8 2001		ltmov r0, #1

#288				AND(		NOW	{LNXT:52|-1|-1}
(*) BOOL
005BA79E  B082     		sub sp, sp, #8
005BA7A0  F8CD 0000		str r0, [sp]
005BA7A4  F9B6 0000		ldrsh r0, [r6]

#289				GE		P63On	{LNXT:52|-1|-1}
(*) INT
005BA7A8  F8DF 7160		ldr r7, [pc, #+352] ; 0x34
005BA7AC  5FF7     		ldrsh r7, [r6, +r7]
005BA7AE  42B8     		cmp r0, r7
005BA7B0  BFB8 2000		ltmov r0, #0
005BA7B4  BFA8 2001		gemov r0, #1

#290				)	{LNXT:52|-1|-1}
(*) BOOL
005BA7B8  4607     		mov r7, r0
005BA7BA  F8DD 0000		ldr r0, [sp]
005BA7BE  B002     		add sp, sp, #8
005BA7C0  4038     		and r0, r0, r7

#291				AND		Sab_enabled	{LNXT:52|-1|-1}
(*) BOOL
005BA7C2  F8DF 7174		ldr r7, [pc, #+372] ; 0x45
005BA7C6  5DF7     		ldrb r7, [r6, +r7]
005BA7C8  4038     		and r0, r0, r7

#292				JMPCN	$label25	{LNXT:52|53|55}
(-) BOOL
005BA7CA  2800     		cmp r0, #0
005BA7CC  D006     		beq #12 ; 0x005BA7DC


#293		
#294				(* THEN *)
#295		
#296					(* OnByCalendar := TRUE; *)
#297					MOVE		TRUE,OnByCalendar	{LNXT:53|-1|-1}
(*) BOOL
005BA7D0  2001     		mov r0, #1 ; 1
005BA7D2  F8DF 716C		ldr r7, [pc, #+364] ; 0x47
005BA7D6  55F0     		strb r0, [r6, +r7]

#298					JMP		$label26	{LNXT:52|53|55}
(-) BOOL
005BA7D8  E004     		b #8 ; 0x005BA7E4


#299		$label25:
#300		
#301				(* ELSE *)
#302		
#303					(* OnByCalendar := FALSE; *)
#304					MOVE		FALSE,OnByCalendar	{LNXT:55|-1|-1}
(*) BOOL
005BA7DC  2000     		mov r0, #0 ; 0
005BA7DE  F8DF 7160		ldr r7, [pc, #+352] ; 0x47
005BA7E2  55F0     		strb r0, [r6, +r7]

#305		
#306		$label26:
#307				(* END_IF *)
#308				JMP		$label0	{LNXT:1|55|-1}
(-) BOOL
005BA7E4  E05C     		b #184 ; 0x005BA8A0


#309		
#310		$label7:
#311		
#312				(* IF NOW >= P71On AND NOW < P72Off AND Dom_enabled *)
#313				LD		NOW	{LNXT:59|-1|-1}
(*) UNDEF
005BA7E8  F9B6 0000		ldrsh r0, [r6]

#314				LT		P72Off	{LNXT:59|-1|-1}
(*) INT
005BA7EC  F8DF 7128		ldr r7, [pc, #+296] ; 0x3A
005BA7F0  5FF7     		ldrsh r7, [r6, +r7]
005BA7F2  42B8     		cmp r0, r7
005BA7F4  BFA8 2000		gemov r0, #0
005BA7F8  BFB8 2001		ltmov r0, #1

#315				AND(		NOW	{LNXT:59|-1|-1}
(*) BOOL
005BA7FC  B082     		sub sp, sp, #8
005BA7FE  F8CD 0000		str r0, [sp]
005BA802  F9B6 0000		ldrsh r0, [r6]

#316				GE		P71On	{LNXT:59|-1|-1}
(*) INT
005BA806  F8DF 710C		ldr r7, [pc, #+268] ; 0x38
005BA80A  5FF7     		ldrsh r7, [r6, +r7]
005BA80C  42B8     		cmp r0, r7
005BA80E  BFB8 2000		ltmov r0, #0
005BA812  BFA8 2001		gemov r0, #1

#317				)	{LNXT:59|-1|-1}
(*) BOOL
005BA816  4607     		mov r7, r0
005BA818  F8DD 0000		ldr r0, [sp]
005BA81C  B002     		add sp, sp, #8
005BA81E  4038     		and r0, r0, r7

#318				AND		Dom_enabled	{LNXT:59|-1|-1}
(*) BOOL
005BA820  F8DF 7118		ldr r7, [pc, #+280] ; 0x46
005BA824  5DF7     		ldrb r7, [r6, +r7]
005BA826  4038     		and r0, r0, r7

#319				JMPCN	$label27	{LNXT:59|60|61}
(-) BOOL
005BA828  2800     		cmp r0, #0
005BA82A  D006     		beq #12 ; 0x005BA83A


#320		
#321				(* THEN *)
#322		
#323					(* OnByCalendar := TRUE; *)
#324					MOVE		TRUE,OnByCalendar	{LNXT:60|-1|-1}
(*) BOOL
005BA82E  2001     		mov r0, #1 ; 1
005BA830  F8DF 710C		ldr r7, [pc, #+268] ; 0x47
005BA834  55F0     		strb r0, [r6, +r7]

#325					JMP		$label29	{LNXT:59|60|61}
(-) BOOL
005BA836  E02D     		b #90 ; 0x005BA894


#326		$label27:
#327		
#328				(* ELSIF NOW >= P73On AND NOW < P74Off AND Dom_enabled *)
#329				LD		NOW	{LNXT:61|-1|-1}
(*) UNDEF
005BA83A  F9B6 0000		ldrsh r0, [r6]

#330				LT		P74Off	{LNXT:61|-1|-1}
(*) INT
005BA83E  F8DF 70E0		ldr r7, [pc, #+224] ; 0x3E
005BA842  5FF7     		ldrsh r7, [r6, +r7]
005BA844  42B8     		cmp r0, r7
005BA846  BFA8 2000		gemov r0, #0
005BA84A  BFB8 2001		ltmov r0, #1

#331				AND(		NOW	{LNXT:61|-1|-1}
(*) BOOL
005BA84E  B082     		sub sp, sp, #8
005BA850  F8CD 0000		str r0, [sp]
005BA854  F9B6 0000		ldrsh r0, [r6]

#332				GE		P73On	{LNXT:61|-1|-1}
(*) INT
005BA858  F8DF 70C0		ldr r7, [pc, #+192] ; 0x3C
005BA85C  5FF7     		ldrsh r7, [r6, +r7]
005BA85E  42B8     		cmp r0, r7
005BA860  BFB8 2000		ltmov r0, #0
005BA864  BFA8 2001		gemov r0, #1

#333				)	{LNXT:61|-1|-1}
(*) BOOL
005BA868  4607     		mov r7, r0
005BA86A  F8DD 0000		ldr r0, [sp]
005BA86E  B002     		add sp, sp, #8
005BA870  4038     		and r0, r0, r7

#334				AND		Dom_enabled	{LNXT:61|-1|-1}
(*) BOOL
005BA872  F8DF 70C8		ldr r7, [pc, #+200] ; 0x46
005BA876  5DF7     		ldrb r7, [r6, +r7]
005BA878  4038     		and r0, r0, r7

#335				JMPCN	$label28	{LNXT:61|62|64}
(-) BOOL
005BA87A  2800     		cmp r0, #0
005BA87C  D006     		beq #12 ; 0x005BA88C


#336		
#337				(* THEN *)
#338		
#339					(* OnByCalendar := TRUE; *)
#340					MOVE		TRUE,OnByCalendar	{LNXT:62|-1|-1}
(*) BOOL
005BA880  2001     		mov r0, #1 ; 1
005BA882  F8DF 70BC		ldr r7, [pc, #+188] ; 0x47
005BA886  55F0     		strb r0, [r6, +r7]

#341					JMP		$label29	{LNXT:61|62|64}
(-) BOOL
005BA888  E004     		b #8 ; 0x005BA894


#342		$label28:
#343		
#344				(* ELSE *)
#345		
#346					(* OnByCalendar := FALSE; *)
#347					MOVE		FALSE,OnByCalendar	{LNXT:64|-1|-1}
(*) BOOL
005BA88C  2000     		mov r0, #0 ; 0
005BA88E  F8DF 70B0		ldr r7, [pc, #+176] ; 0x47
005BA892  55F0     		strb r0, [r6, +r7]

#348		
#349		$label29:
#350				(* END_IF *)
#351				JMP		$label0	{LNXT:1|64|-1}
(-) BOOL
005BA894  E004     		b #8 ; 0x005BA8A0


#352		
#353		$label8:
#354				(* OnByCalendar := FALSE; *)
#355				MOVE		FALSE,OnByCalendar	{LNXT:68|-1|-1}
(*) BOOL
005BA898  2000     		mov r0, #0 ; 0
005BA89A  F8DF 70A4		ldr r7, [pc, #+164] ; 0x47
005BA89E  55F0     		strb r0, [r6, +r7]

005BA8A0  E8BD 4040		ldmia sp!, { r6, lr }

005BA8A4  4770     		bx lr

005BA8A8  00000002		; 0x00000002
005BA8AC  00000004		; 0x00000004
005BA8B0  00000006		; 0x00000006
005BA8B4  00000008		; 0x00000008
005BA8B8  0000000A		; 0x0000000A
005BA8BC  0000000C		; 0x0000000C
005BA8C0  0000000E		; 0x0000000E
005BA8C4  00000010		; 0x00000010
005BA8C8  00000012		; 0x00000012
005BA8CC  00000014		; 0x00000014
005BA8D0  00000016		; 0x00000016
005BA8D4  00000018		; 0x00000018
005BA8D8  0000001A		; 0x0000001A
005BA8DC  0000001C		; 0x0000001C
005BA8E0  0000001E		; 0x0000001E
005BA8E4  00000020		; 0x00000020
005BA8E8  00000022		; 0x00000022
005BA8EC  00000024		; 0x00000024
005BA8F0  00000026		; 0x00000026
005BA8F4  00000028		; 0x00000028
005BA8F8  0000002A		; 0x0000002A
005BA8FC  0000002C		; 0x0000002C
005BA900  0000002E		; 0x0000002E
005BA904  00000030		; 0x00000030
005BA908  00000032		; 0x00000032
005BA90C  00000034		; 0x00000034
005BA910  00000036		; 0x00000036
005BA914  00000038		; 0x00000038
005BA918  0000003A		; 0x0000003A
005BA91C  0000003C		; 0x0000003C
005BA920  0000003E		; 0x0000003E
005BA924  00000040		; 0x00000040
005BA928  00000041		; 0x00000041
005BA92C  00000042		; 0x00000042
005BA930  00000043		; 0x00000043
005BA934  00000044		; 0x00000044
005BA938  00000045		; 0x00000045
005BA93C  00000046		; 0x00000046
005BA940  00000047		; 0x00000047


Frame allocation:

	0000       : VAR NOW
	0002       : VAR Giorno_settimana
	0004       : VAR Ora
	0006       : VAR Minuto
	0008       : VAR P11On
	000A       : VAR P12Off
	000C       : VAR P13On
	000E       : VAR P14Off
	0010       : VAR P21On
	0012       : VAR P22Off
	0014       : VAR P23On
	0016       : VAR P24Off
	0018       : VAR P31On
	001A       : VAR P32Off
	001C       : VAR P33On
	001E       : VAR P34Off
	0020       : VAR P41On
	0022       : VAR P42Off
	0024       : VAR P43On
	0026       : VAR P44Off
	0028       : VAR P51On
	002A       : VAR P52Off
	002C       : VAR P53On
	002E       : VAR P54Off
	0030       : VAR P61On
	0032       : VAR P62Off
	0034       : VAR P63On
	0036       : VAR P64Off
	0038       : VAR P71On
	003A       : VAR P72Off
	003C       : VAR P73On
	003E       : VAR P74Off
	0040 bit  0: VAR Lun_enabled
	0041 bit  0: VAR Mar_enabled
	0042 bit  0: VAR Mer_enabled
	0043 bit  0: VAR Gio_enabled
	0044 bit  0: VAR Ven_enabled
	0045 bit  0: VAR Sab_enabled
	0046 bit  0: VAR Dom_enabled
	0047 bit  0: VAR OnByCalendar

END_FUNCTION_BLOCK
**************************************************
	List function: XUnifiedLibInit
**************************************************

FUNCTION XUnifiedLibInit : BOOL

	{ DE:"XUnified library init" }

        VAR_INPUT
Cmd : BOOL;	{ DE:"Command" }
	END_VAR

        VAR
b : BOOL;	{ DE:"Dummy" }
ver : STRING[ 10 ];	{ DE:"Lib version" }
ptr : @BYTE;
	END_VAR

END_FUNCTION

	*** Function data allocation

	Par Cmd: CALLER STACK FRAME AT sp+0
	Var b: REGISTER _TMP_32LO
	Var ver: LOCAL STACK FRAME AT sp-12
	Var ptr: REGISTER _TMP_32HI

005BA944  466F     		mov r7, sp
005BA946  B084     		sub sp, sp, #16
005BA948  B082     		sub sp, sp, #8
005BA94A  F8CD E000		str lr, [sp]
005BA94E  E92D 1E50		stmdb sp!, { r4, r6, r9, r10, r11, r12 }
005BA952  463E     		mov r6, r7
005BA954  2400     		mov r4, #0

#0		{SRC:XUnifiedLibInit}
#1		(*$WAITSWITCH$*)
#2		
#3			(* ver:='SFR094A020'; *)
#4			MOVE		'SFR094A020',ver	{LNXT:2|3|-1}
(*) BOOL
005BA956  F8DF 7074		ldr r7, [pc, #+116] ; 0x5BA0C4
005BA95A  4638     		mov r0, r7
005BA95C  B082     		sub sp, sp, #8
005BA95E  F8CD 0000		str r0, [sp]
005BA962  E92D 0006		stmdb sp!, { r1, r2 }
005BA966  220B     		mov r2, #11 ; 11
005BA968  4631     		mov r1, r6
005BA96A  F8DF 7054		ldr r7, [pc, #+84] ; 0xFFFFFFF4
005BA96E  19C9     		add r1, r1, r7
005BA970  F8DF 4054		ldr r4, [pc, #+84] ; 0x4B2AAD
005BA974  F044 0401		orr r4, r4, #1
005BA978  47A0     		blx r4
005BA97A  E8BD 0006		ldmia sp!, { r1, r2 }
005BA97E  F8DD 0000		ldr r0, [sp]
005BA982  B002     		add sp, sp, #8

#5		
#6			(* ptr:=ADR(ver); *)
#7			ADR		ver	{LNXT:3|4|-1}
(*) STRING
005BA984  F8DF 7038		ldr r7, [pc, #+56] ; 0xFFFFFFF4
005BA988  19F0     		add r0, r6, r7

#8			ST		ptr	{LNXT:3|4|-1}
(-) DWORD
005BA98A  4682     		mov r10, r0

#9		
#10			(* b:=SysXUnifiedValue(TRUE, 1, ptr); *)
#11			LD		TRUE	{LNXT:4|5|-1}
(-) UNDEF
005BA98C  2001     		mov r0, #1 ; 1

#12			SysXUnifiedValue		1, ptr	{LNXT:4|5|-1}
(-) BOOL
005BA98E  B082     		sub sp, sp, #8
005BA990  F8CD 4000		str r4, [sp]
005BA994  4652     		mov r2, r10
005BA996  2101     		mov r1, #1 ; 1
005BA998  F8DF 4028		ldr r4, [pc, #+40] ; 0x49C019
005BA99C  F044 0401		orr r4, r4, #1
005BA9A0  47A0     		blx r4
005BA9A2  F8DD 4000		ldr r4, [sp]
005BA9A6  B002     		add sp, sp, #8

#13			ST		b	{LNXT:4|5|-1}
(-) BOOL
005BA9A8  4681     		mov r9, r0

#14		
#15			(* XUnifiedLibInit:=TRUE; *)
#16			MOVE		TRUE,XUnifiedLibInit	{LNXT:5|-1|-1}
(*) BOOL
005BA9AA  2001     		mov r0, #1 ; 1
005BA9AC  4604     		mov r4, r0

005BA9AE  4620     		mov r0, r4
005BA9B0  E8BD 1E50		ldmia sp!, { r4, r6, r9, r10, r11, r12 }
005BA9B4  F8DD E000		ldr lr, [sp]
005BA9B8  B002     		add sp, sp, #8
005BA9BA  B004     		add sp, sp, #16

005BA9BC  4770     		bx lr

005BA9C0  FFFFFFF4		; 0xFFFFFFF4
005BA9C4  0049C019		; 0x0049C019
005BA9C8  004B2AAD		; 0x004B2AAD
005BA9CC  005BA0C4		; 0x005BA0C4

END_FUNCTION
**************************************************
	List program: $$ElsistInit
**************************************************

PROGRAM $$ElsistInit

        VAR
dummy : BOOL;
	END_VAR

END_PROGRAM

005BA9D0  B082     		sub sp, sp, #8
005BA9D2  F8CD E000		str lr, [sp]
005BA9D6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:$$ElsistInit}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummy:=XUnifiedLibInit(TRUE); *)
#4			LD		TRUE	{LNXT:2|2|-1}
(-) UNDEF
005BA9DA  2001     		mov r0, #1 ; 1

#5			XUnifiedLibInit	{LNXT:2|2|-1}
(-) BOOL
005BA9DC  B082     		sub sp, sp, #8
005BA9DE  F8CD 0000		str r0, [sp]
005BA9E2  467C     		mov r4, pc
005BA9E4  3CA2     		sub  r4, r4, #+0xA2 ; 0x5BA944
005BA9E6  F044 0401		orr r4, r4, #1
005BA9EA  47A0     		blx r4
005BA9EC  B002     		add sp, sp, #8

#6			ST		dummy	{LNXT:2|2|-1}
(*) BOOL
005BA9EE  F8DF 7010		ldr r7, [pc, #+16] ; 0x20414A14
005BA9F2  7038     		strb r0, [r7]

005BA9F4  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
005BA9F8  F8DD E000		ldr lr, [sp]
005BA9FC  B002     		add sp, sp, #8

005BA9FE  4770     		bx lr

005BAA00  20414A14		; 0x20414A14

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
005BAA04  4770     		bx lr


*** OUTPUT:
005BAA06  4770     		bx lr



**************************************************
	Task Boot init code
**************************************************

005BAA08  B082     		sub sp, sp, #8
005BAA0A  F8CD E000		str lr, [sp]
005BAA0E  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

005BAA12  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
005BAA16  F8DD E000		ldr lr, [sp]
005BAA1A  B002     		add sp, sp, #8

005BAA1C  4770     		bx lr

**************************************************
	List program: Analog_Value
**************************************************

PROGRAM Analog_Value

        VAR
AI1 : SysGetAnInp;	{ DE:"Analog input acquisition" }
AI2 : SysGetAnInp;	{ DE:"Analog input acquisition" }
	END_VAR

END_PROGRAM

005BAA30  B082     		sub sp, sp, #8
005BAA32  F8CD E000		str lr, [sp]
005BAA36  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:Analog_Value}
#1		(*$WAITSWITCH$*)
#2		
#3			(* AI1.Address:=255; *)
#4			MOVE		255,AI1.Address	{LNXT:13|14|-1}
(*) UDINT
005BAA3A  20FF     		mov r0, #255 ; 255
005BAA3C  F8DF 7094		ldr r7, [pc, #+148] ; 0x20414A20
005BAA40  7038     		strb r0, [r7]

#5		
#6			(* AI1.Channel:=0; *)
#7			MOVE		0,AI1.Channel	{LNXT:14|15|-1}
(*) USINT
005BAA42  2000     		mov r0, #0 ; 0
005BAA44  F8DF 7090		ldr r7, [pc, #+144] ; 0x20414A21
005BAA48  7038     		strb r0, [r7]

#8		
#9			(* AI1.Mode:=AD_PT100_DIFFER; *)
#10			MOVE		AD_PT100_DIFFER,AI1.Mode	{LNXT:15|16|-1}
(*) USINT
005BAA4A  200A     		mov r0, #10 ; 10
005BAA4C  F8DF 708C		ldr r7, [pc, #+140] ; 0x20414A24
005BAA50  6038     		str r0, [r7]

#11		
#12			(* AI1 *)
#13			CAL		AI1	{LNXT:16|17|-1}
(*) DINT
005BAA52  E92D 0021		stmdb sp!, { r0, r5 }
005BAA56  F8DF 7078		ldr r7, [pc, #+120] ; 0x20414A18
005BAA5A  4638     		mov r0, r7
005BAA5C  F8DF 406C		ldr r4, [pc, #+108] ; 0x498B01
005BAA60  F044 0401		orr r4, r4, #1
005BAA64  47A0     		blx r4
005BAA66  E8BD 0021		ldmia sp!, { r0, r5 }

#14		
#15		
#16			(* IF AI1.Done *)
#17			LD		AI1.Done	{LNXT:17|-1|-1}
(*) UNDEF
005BAA6A  F8DF 7074		ldr r7, [pc, #+116] ; 0x20414A28
005BAA6E  7838     		ldrb r0, [r7]

#18			JMPCN	$label0	{LNXT:17|17|19}
(-) BOOL
005BAA70  2800     		cmp r0, #0
005BAA72  D006     		beq #12 ; 0x005BAA82


#19		
#20			(* THEN *)
#21		
#22				(* Temp_accumulo:=AI1.Value; *)
#23				MOVE		AI1.Value,Temp_accumulo	{LNXT:17|19|-1}
(*) BOOL
005BAA76  F8DF 706C		ldr r7, [pc, #+108] ; 0x20414A2C
005BAA7A  6838     		ldr r0, [r7]
005BAA7C  F8DF 7068		ldr r7, [pc, #+104] ; 0x20414A30
005BAA80  6038     		str r0, [r7]

#24		
#25		$label0:
#26			(* END_IF *)
#27		
#28			(* AI2.Address:=255; *)
#29			MOVE		255,AI2.Address	{LNXT:19|20|-1}
(*) REAL
005BAA82  20FF     		mov r0, #255 ; 255
005BAA84  F8DF 7068		ldr r7, [pc, #+104] ; 0x20414A3C
005BAA88  7038     		strb r0, [r7]

#30		
#31			(* AI2.Channel:=1; *)
#32			MOVE		1,AI2.Channel	{LNXT:20|21|-1}
(*) USINT
005BAA8A  2001     		mov r0, #1 ; 1
005BAA8C  F8DF 7064		ldr r7, [pc, #+100] ; 0x20414A3D
005BAA90  7038     		strb r0, [r7]

#33		
#34			(* AI2.Mode:= AD_PT100_DIFFER; *)
#35			MOVE		AD_PT100_DIFFER,AI2.Mode	{LNXT:21|22|-1}
(*) USINT
005BAA92  200A     		mov r0, #10 ; 10
005BAA94  F8DF 7060		ldr r7, [pc, #+96] ; 0x20414A40
005BAA98  6038     		str r0, [r7]

#36		
#37			(* AI2 *)
#38			CAL		AI2	{LNXT:22|23|-1}
(*) DINT
005BAA9A  E92D 0021		stmdb sp!, { r0, r5 }
005BAA9E  F8DF 704C		ldr r7, [pc, #+76] ; 0x20414A34
005BAAA2  4638     		mov r0, r7
005BAAA4  F8DF 4024		ldr r4, [pc, #+36] ; 0x498B01
005BAAA8  F044 0401		orr r4, r4, #1
005BAAAC  47A0     		blx r4
005BAAAE  E8BD 0021		ldmia sp!, { r0, r5 }

#39		
#40		
#41			(* IF AI2.Done *)
#42			LD		AI2.Done	{LNXT:23|-1|-1}
(*) UNDEF
005BAAB2  F8DF 7048		ldr r7, [pc, #+72] ; 0x20414A44
005BAAB6  7838     		ldrb r0, [r7]

#43			JMPCN	$label1	{LNXT:23|23|13}
(-) BOOL
005BAAB8  2800     		cmp r0, #0
005BAABA  D006     		beq #12 ; 0x005BAACA


#44		
#45			(* THEN *)
#46		
#47				(* Sonda_esterna:=AI2.Value; *)
#48				MOVE		AI2.Value,Sonda_esterna	{LNXT:23|13|-1}
(*) BOOL
005BAABE  F8DF 7040		ldr r7, [pc, #+64] ; 0x20414A48
005BAAC2  6838     		ldr r0, [r7]
005BAAC4  F8DF 703C		ldr r7, [pc, #+60] ; 0x20414A4C
005BAAC8  6038     		str r0, [r7]

005BAACA  E01D     		b #58

005BAACC  00498B01		; 0x00498B01
005BAAD0  20414A18		; 0x20414A18
005BAAD4  20414A20		; 0x20414A20
005BAAD8  20414A21		; 0x20414A21
005BAADC  20414A24		; 0x20414A24
005BAAE0  20414A28		; 0x20414A28
005BAAE4  20414A2C		; 0x20414A2C
005BAAE8  20414A30		; 0x20414A30
005BAAEC  20414A34		; 0x20414A34
005BAAF0  20414A3C		; 0x20414A3C
005BAAF4  20414A3D		; 0x20414A3D
005BAAF8  20414A40		; 0x20414A40
005BAAFC  20414A44		; 0x20414A44
005BAB00  20414A48		; 0x20414A48
005BAB04  20414A4C		; 0x20414A4C

END_PROGRAM
**************************************************
	List program: Controllo_HVAC_inverno
**************************************************

PROGRAM Controllo_HVAC_inverno

        VAR
Fase : INT := 0;
Delay : eTON;
Delay1 : eTON;
Delay2 : eTON;
Delay3 : eTON;
	END_VAR

END_PROGRAM

#0		{SRC:Controllo_HVAC_inverno}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Estate_Inverno AND (CalendarOnOff OR Automatico_Manuale *)
#5			LD		CalendarOnOff	{LNXT:1|-1|-1}
(*) UNDEF
005BAB08  F8DF 782C		ldr r7, [pc, #+2092] ; 0x20414A15
005BAB0C  7838     		ldrb r0, [r7]

#6			OR		Automatico_Manuale	{LNXT:1|-1|-1}
(*) BOOL
005BAB0E  F8DF 7848		ldr r7, [pc, #+2120] ; 0x20418D79
005BAB12  783F     		ldrb r7, [r7]
005BAB14  4338     		orr r0, r0, r7

#7			AND		Estate_Inverno	{LNXT:1|-1|-1}
(*) BOOL
005BAB16  F8DF 783C		ldr r7, [pc, #+2108] ; 0x20418D78
005BAB1A  783F     		ldrb r7, [r7]
005BAB1C  4038     		and r0, r0, r7

#8			JMPCN	$label0	{LNXT:1|3|152}
(-) BOOL
005BAB1E  2800     		cmp r0, #0
005BAB20  F000 850A		beq #2580 ; 0x005BB538


#9		
#10			(* THEN *)
#11		
#12				(* Delay.PT := 20000; *)
#13				MOVE		20000,Delay.PT	{LNXT:3|4|-1}
(*) BOOL
005BAB24  F8DF 7808		ldr r7, [pc, #+2056] ; 0x5BA0D0
005BAB28  8838     		ldrh r0, [r7]
005BAB2A  F8DF 7820		ldr r7, [pc, #+2080] ; 0x20414A58
005BAB2E  6038     		str r0, [r7]

#14		
#15				(* Delay *)
#16				CAL		Delay	{LNXT:4|8|-1}
(*) UINT
005BAB30  E92D 0021		stmdb sp!, { r0, r5 }
005BAB34  F8DF 780C		ldr r7, [pc, #+2060] ; 0x20414A50
005BAB38  463D     		mov r5, r7
005BAB3A  F8DF 47F8		ldr r4, [pc, #+2040] ; 0x5BA178
005BAB3E  F044 0401		orr r4, r4, #1
005BAB42  47A0     		blx r4
005BAB44  E8BD 0021		ldmia sp!, { r0, r5 }

#17		
#18		
#19				(* CASE Fase OF *)
#20		
#21				(* 0: *)
#22				LD		Fase	{LNXT:10|-1|-1}
(*) UNDEF
005BAB48  F8DF 77F0		ldr r7, [pc, #+2032] ; 0x20414A16
005BAB4C  F9B7 0000		ldrsh r0, [r7]

#23				EQ		0	{LNXT:10|-1|-1}
(*) INT
005BAB50  2800     		cmp r0, #0
005BAB52  BF18 2000		nemov r0, #0
005BAB56  BF08 2001		eqmov r0, #1

#24				JMPC		$label3	{LNXT:10|10|28}
(-) BOOL
005BAB5A  2800     		cmp r0, #0
005BAB5C  D156     		bne #172 ; 0x005BAC0C


#25		
#26				(* 1: *)
#27				LD		Fase	{LNXT:28|-1|-1}
(*) UNDEF
005BAB60  F8DF 77D8		ldr r7, [pc, #+2008] ; 0x20414A16
005BAB64  F9B7 0000		ldrsh r0, [r7]

#28				EQ		1	{LNXT:28|-1|-1}
(*) INT
005BAB68  2801     		cmp r0, #1
005BAB6A  BF18 2000		nemov r0, #0
005BAB6E  BF08 2001		eqmov r0, #1

#29				JMPC		$label4	{LNXT:28|29|49}
(-) BOOL
005BAB72  2800     		cmp r0, #0
005BAB74  F040 80A0		bne #320 ; 0x005BACB8


#30		
#31				(* 2: *)
#32				LD		Fase	{LNXT:49|-1|-1}
(*) UNDEF
005BAB78  F8DF 77C0		ldr r7, [pc, #+1984] ; 0x20414A16
005BAB7C  F9B7 0000		ldrsh r0, [r7]

#33				EQ		2	{LNXT:49|-1|-1}
(*) INT
005BAB80  2802     		cmp r0, #2
005BAB82  BF18 2000		nemov r0, #0
005BAB86  BF08 2001		eqmov r0, #1

#34				JMPC		$label5	{LNXT:49|50|70}
(-) BOOL
005BAB8A  2800     		cmp r0, #0
005BAB8C  F040 8152		bne #676 ; 0x005BAE34


#35		
#36				(* 3: *)
#37				LD		Fase	{LNXT:70|-1|-1}
(*) UNDEF
005BAB90  F8DF 77A8		ldr r7, [pc, #+1960] ; 0x20414A16
005BAB94  F9B7 0000		ldrsh r0, [r7]

#38				EQ		3	{LNXT:70|-1|-1}
(*) INT
005BAB98  2803     		cmp r0, #3
005BAB9A  BF18 2000		nemov r0, #0
005BAB9E  BF08 2001		eqmov r0, #1

#39				JMPC		$label6	{LNXT:70|71|89}
(-) BOOL
005BABA2  2800     		cmp r0, #0
005BABA4  F040 8208		bne #1040 ; 0x005BAFB8


#40		
#41				(* 4: *)
#42				LD		Fase	{LNXT:89|-1|-1}
(*) UNDEF
005BABA8  F8DF 7790		ldr r7, [pc, #+1936] ; 0x20414A16
005BABAC  F9B7 0000		ldrsh r0, [r7]

#43				EQ		4	{LNXT:89|-1|-1}
(*) INT
005BABB0  2804     		cmp r0, #4
005BABB2  BF18 2000		nemov r0, #0
005BABB6  BF08 2001		eqmov r0, #1

#44				JMPC		$label7	{LNXT:89|89|108}
(-) BOOL
005BABBA  2800     		cmp r0, #0
005BABBC  F040 8266		bne #1228 ; 0x005BB08C


#45		
#46				(* 5: *)
#47				LD		Fase	{LNXT:108|-1|-1}
(*) UNDEF
005BABC0  F8DF 7778		ldr r7, [pc, #+1912] ; 0x20414A16
005BABC4  F9B7 0000		ldrsh r0, [r7]

#48				EQ		5	{LNXT:108|-1|-1}
(*) INT
005BABC8  2805     		cmp r0, #5
005BABCA  BF18 2000		nemov r0, #0
005BABCE  BF08 2001		eqmov r0, #1

#49				JMPC		$label8	{LNXT:108|109|128}
(-) BOOL
005BABD2  2800     		cmp r0, #0
005BABD4  F040 82CA		bne #1428 ; 0x005BB16C


#50		
#51				(* 6: *)
#52				LD		Fase	{LNXT:128|-1|-1}
(*) UNDEF
005BABD8  F8DF 7760		ldr r7, [pc, #+1888] ; 0x20414A16
005BABDC  F9B7 0000		ldrsh r0, [r7]

#53				EQ		6	{LNXT:128|-1|-1}
(*) INT
005BABE0  2806     		cmp r0, #6
005BABE2  BF18 2000		nemov r0, #0
005BABE6  BF08 2001		eqmov r0, #1

#54				JMPC		$label9	{LNXT:128|129|139}
(-) BOOL
005BABEA  2800     		cmp r0, #0
005BABEC  F040 837A		bne #1780 ; 0x005BB2E4


#55		
#56				(* 7: *)
#57				LD		Fase	{LNXT:139|-1|-1}
(*) UNDEF
005BABF0  F8DF 7748		ldr r7, [pc, #+1864] ; 0x20414A16
005BABF4  F9B7 0000		ldrsh r0, [r7]

#58				EQ		7	{LNXT:139|-1|-1}
(*) INT
005BABF8  2807     		cmp r0, #7
005BABFA  BF18 2000		nemov r0, #0
005BABFE  BF08 2001		eqmov r0, #1

#59				JMPC		$label10	{LNXT:139|140|1}
(-) BOOL
005BAC02  2800     		cmp r0, #0
005BAC04  F040 841B		bne #2102 ; 0x005BB43E


#60				JMP		$label2	{LNXT:139|140|1}
(-) BOOL
005BAC08  F000 BC94		b #2344 ; 0x005BB534


#61		
#62				(* Istruzioni di ciascun CASE: *)
#63		
#64		$label3:
#65		
#66					(* IF Blocco_caldaia AND Blocco_PdC *)
#67					LD		Blocco_caldaia	{LNXT:10|-1|-1}
(*) UNDEF
005BAC0C  F8DF 7754		ldr r7, [pc, #+1876] ; 0x20419F79
005BAC10  7838     		ldrb r0, [r7]

#68					AND		Blocco_PdC	{LNXT:10|-1|-1}
(*) BOOL
005BAC12  F8DF 7754		ldr r7, [pc, #+1876] ; 0x20419F7B
005BAC16  783F     		ldrb r7, [r7]
005BAC18  4038     		and r0, r0, r7

#69					JMPCN	$label11	{LNXT:10|12|19}
(-) BOOL
005BAC1A  2800     		cmp r0, #0
005BAC1C  D016     		beq #44 ; 0x005BAC4C


#70		
#71					(* THEN *)
#72		
#73						(* Comando_caldaia := FALSE; *)
#74						MOVE		FALSE,Comando_caldaia	{LNXT:12|13|-1}
(*) BOOL
005BAC20  2000     		mov r0, #0 ; 0
005BAC22  F8DF 7748		ldr r7, [pc, #+1864] ; 0x2041A198
005BAC26  7038     		strb r0, [r7]

#75		
#76						(* Comando_pompa_fancoil := FALSE; *)
#77						MOVE		FALSE,Comando_pompa_fancoil	{LNXT:13|14|-1}
(*) BOOL
005BAC28  2000     		mov r0, #0 ; 0
005BAC2A  F8DF 774C		ldr r7, [pc, #+1868] ; 0x2041A19B
005BAC2E  7038     		strb r0, [r7]

#78		
#79						(* Comando_PdC := FALSE; *)
#80						MOVE		FALSE,Comando_PdC	{LNXT:14|15|-1}
(*) BOOL
005BAC30  2000     		mov r0, #0 ; 0
005BAC32  F8DF 773C		ldr r7, [pc, #+1852] ; 0x2041A199
005BAC36  7038     		strb r0, [r7]

#81		
#82						(* Comando_pompa_UTA := FALSE; *)
#83						MOVE		FALSE,Comando_pompa_UTA	{LNXT:15|17|-1}
(*) BOOL
005BAC38  2000     		mov r0, #0 ; 0
005BAC3A  F8DF 7738		ldr r7, [pc, #+1848] ; 0x2041A19A
005BAC3E  7038     		strb r0, [r7]

#84		
#85						(* Fase := 0; *)
#86						MOVE		0,Fase	{LNXT:17|1|-1}
(*) BOOL
005BAC40  2000     		mov r0, #0 ; 0
005BAC42  F8DF 76F8		ldr r7, [pc, #+1784] ; 0x20414A16
005BAC46  8038     		strh r0, [r7]

#87						JMP		$label13	{LNXT:10|12|19}
(-) INT
005BAC48  E034     		b #104 ; 0x005BACB4


#88		$label11:
#89		
#90					(* ELSIF Blocco_caldaia AND NOT Blocco_PdC *)
#91					LD		Blocco_PdC	{LNXT:19|-1|-1}
(*) UNDEF
005BAC4C  F8DF 7718		ldr r7, [pc, #+1816] ; 0x20419F7B
005BAC50  7838     		ldrb r0, [r7]

#92					NOT	{LNXT:19|-1|-1}
(*) BOOL
005BAC52  2800     		cmp r0, #0
005BAC54  BF08 2001		eqmov r0, #1
005BAC58  BF18 2000		nemov r0, #0

#93					AND		Blocco_caldaia	{LNXT:19|-1|-1}
(*) BOOL
005BAC5C  F8DF 7704		ldr r7, [pc, #+1796] ; 0x20419F79
005BAC60  783F     		ldrb r7, [r7]
005BAC62  4038     		and r0, r0, r7

#94					JMPCN	$label12	{LNXT:19|21|23}
(-) BOOL
005BAC64  2800     		cmp r0, #0
005BAC66  D006     		beq #12 ; 0x005BAC76


#95		
#96					(* THEN *)
#97		
#98						(* Fase := 1; *)
#99						MOVE		1,Fase	{LNXT:21|1|-1}
(*) BOOL
005BAC6A  2001     		mov r0, #1 ; 1
005BAC6C  F8DF 76CC		ldr r7, [pc, #+1740] ; 0x20414A16
005BAC70  8038     		strh r0, [r7]

#100						JMP		$label13	{LNXT:19|21|23}
(-) INT
005BAC72  E01F     		b #62 ; 0x005BACB4


#101		$label12:
#102		
#103					(* ELSIF Blocco_caldaia AND NOT Blocco_PdC *)
#104					LD		Blocco_PdC	{LNXT:23|-1|-1}
(*) UNDEF
005BAC76  F8DF 76F0		ldr r7, [pc, #+1776] ; 0x20419F7B
005BAC7A  7838     		ldrb r0, [r7]

#105					NOT	{LNXT:23|-1|-1}
(*) BOOL
005BAC7C  2800     		cmp r0, #0
005BAC7E  BF08 2001		eqmov r0, #1
005BAC82  BF18 2000		nemov r0, #0

#106					AND(		Blocco_caldaia	{LNXT:23|-1|-1}
(*) BOOL
005BAC86  B082     		sub sp, sp, #8
005BAC88  F8CD 0000		str r0, [sp]
005BAC8C  F8DF 76D4		ldr r7, [pc, #+1748] ; 0x20419F79
005BAC90  7838     		ldrb r0, [r7]

#107					NOT	{LNXT:23|-1|-1}
(*) BOOL
005BAC92  2800     		cmp r0, #0
005BAC94  BF08 2001		eqmov r0, #1
005BAC98  BF18 2000		nemov r0, #0

#108					)	{LNXT:23|-1|-1}
(*) BOOL
005BAC9C  4607     		mov r7, r0
005BAC9E  F8DD 0000		ldr r0, [sp]
005BACA2  B002     		add sp, sp, #8
005BACA4  4038     		and r0, r0, r7

#109					JMPCN	$label13	{LNXT:23|25|1}
(-) BOOL
005BACA6  2800     		cmp r0, #0
005BACA8  D004     		beq #8 ; 0x005BACB4


#110		
#111					(* THEN *)
#112		
#113						(* Fase := 2; *)
#114						MOVE		2,Fase	{LNXT:25|1|-1}
(*) BOOL
005BACAC  2002     		mov r0, #2 ; 2
005BACAE  F8DF 768C		ldr r7, [pc, #+1676] ; 0x20414A16
005BACB2  8038     		strh r0, [r7]

#115		
#116		$label13:
#117					(* END_IF *)
#118					JMP		$label2	{LNXT:1|1|-1}
(-) INT
005BACB4  F000 BC3E		b #2172 ; 0x005BB534


#119		
#120		$label4:
#121					(* Comando_caldaia := FALSE; *)
#122					MOVE		FALSE,Comando_caldaia	{LNXT:29|30|-1}
(*) INT
005BACB8  2000     		mov r0, #0 ; 0
005BACBA  F8DF 76B0		ldr r7, [pc, #+1712] ; 0x2041A198
005BACBE  7038     		strb r0, [r7]

#123		
#124					(* Comando_pompa_fancoil := FALSE; *)
#125					MOVE		FALSE,Comando_pompa_fancoil	{LNXT:30|31|-1}
(*) BOOL
005BACC0  2000     		mov r0, #0 ; 0
005BACC2  F8DF 76B4		ldr r7, [pc, #+1716] ; 0x2041A19B
005BACC6  7038     		strb r0, [r7]

#126		
#127					(* Comando_PdC := TRUE; *)
#128					MOVE		TRUE,Comando_PdC	{LNXT:31|32|-1}
(*) BOOL
005BACC8  2001     		mov r0, #1 ; 1
005BACCA  F8DF 76A4		ldr r7, [pc, #+1700] ; 0x2041A199
005BACCE  7038     		strb r0, [r7]

#129		
#130					(* Comando_pompa_UTA := FALSE; *)
#131					MOVE		FALSE,Comando_pompa_UTA	{LNXT:32|34|-1}
(*) BOOL
005BACD0  2000     		mov r0, #0 ; 0
005BACD2  F8DF 76A0		ldr r7, [pc, #+1696] ; 0x2041A19A
005BACD6  7038     		strb r0, [r7]

#132		
#133		
#134					(* IF Temp_accumulo < Temp_setpoint_inverno - T_tolleranza_inverno *)
#135					LD		Temp_accumulo	{LNXT:34|-1|-1}
(*) UNDEF
005BACD8  F8DF 7664		ldr r7, [pc, #+1636] ; 0x20414A30
005BACDC  6838     		ldr r0, [r7]

#136					LT(		Temp_setpoint_inverno	{LNXT:34|-1|-1}
(*) REAL
005BACDE  B082     		sub sp, sp, #8
005BACE0  F8CD 0000		str r0, [sp]
005BACE4  F8DF 7678		ldr r7, [pc, #+1656] ; 0x20418E48
005BACE8  6838     		ldr r0, [r7]

#137					SUB		T_tolleranza_inverno	{LNXT:34|-1|-1}
(*) REAL
005BACEA  F8DF 7670		ldr r7, [pc, #+1648] ; 0x20418E44
005BACEE  683F     		ldr r7, [r7]
005BACF0  B082     		sub sp, sp, #8
005BACF2  F8CD 1000		str r1, [sp]
005BACF6  4639     		mov r1, r7
005BACF8  F8DF 4628		ldr r4, [pc, #+1576] ; 0x4B257F
005BACFC  F044 0401		orr r4, r4, #1
005BAD00  47A0     		blx r4
005BAD02  F8DD 1000		ldr r1, [sp]
005BAD06  B002     		add sp, sp, #8

#138					)	{LNXT:34|-1|-1}
(*) REAL
005BAD08  4607     		mov r7, r0
005BAD0A  F8DD 0000		ldr r0, [sp]
005BAD0E  B002     		add sp, sp, #8
005BAD10  B082     		sub sp, sp, #8
005BAD12  F8CD 1000		str r1, [sp]
005BAD16  4639     		mov r1, r7
005BAD18  F8DF 4610		ldr r4, [pc, #+1552] ; 0x4B25FD
005BAD1C  F044 0401		orr r4, r4, #1
005BAD20  47A0     		blx r4
005BAD22  F8DD 1000		ldr r1, [sp]
005BAD26  B002     		add sp, sp, #8

#139					JMPCN	$label14	{LNXT:34|35|43}
(-) BOOL
005BAD28  2800     		cmp r0, #0
005BAD2A  D04E     		beq #156 ; 0x005BADCA


#140		
#141					(* THEN *)
#142		
#143						(* Delay.IN:=TRUE; *)
#144						MOVE		TRUE,Delay.IN	{LNXT:35|36|-1}
(*) BOOL
005BAD2E  2001     		mov r0, #1 ; 1
005BAD30  F8DF 7614		ldr r7, [pc, #+1556] ; 0x20414A54
005BAD34  7038     		strb r0, [r7]

#145		
#146		
#147						(* IF Delay.Q AND Temp_accumulo > Temp_setpoint_inverno - T_tolleranza_inverno *)
#148						LD		Temp_accumulo	{LNXT:36|-1|-1}
(*) UNDEF
005BAD36  F8DF 7608		ldr r7, [pc, #+1544] ; 0x20414A30
005BAD3A  6838     		ldr r0, [r7]

#149						GT(		Temp_setpoint_inverno	{LNXT:36|-1|-1}
(*) REAL
005BAD3C  B082     		sub sp, sp, #8
005BAD3E  F8CD 0000		str r0, [sp]
005BAD42  F8DF 761C		ldr r7, [pc, #+1564] ; 0x20418E48
005BAD46  6838     		ldr r0, [r7]

#150						SUB		T_tolleranza_inverno	{LNXT:36|-1|-1}
(*) REAL
005BAD48  F8DF 7610		ldr r7, [pc, #+1552] ; 0x20418E44
005BAD4C  683F     		ldr r7, [r7]
005BAD4E  B082     		sub sp, sp, #8
005BAD50  F8CD 1000		str r1, [sp]
005BAD54  4639     		mov r1, r7
005BAD56  F8DF 45CC		ldr r4, [pc, #+1484] ; 0x4B257F
005BAD5A  F044 0401		orr r4, r4, #1
005BAD5E  47A0     		blx r4
005BAD60  F8DD 1000		ldr r1, [sp]
005BAD64  B002     		add sp, sp, #8

#151						)	{LNXT:36|-1|-1}
(*) REAL
005BAD66  4607     		mov r7, r0
005BAD68  F8DD 0000		ldr r0, [sp]
005BAD6C  B002     		add sp, sp, #8
005BAD6E  B082     		sub sp, sp, #8
005BAD70  F8CD 1000		str r1, [sp]
005BAD74  4639     		mov r1, r7
005BAD76  F8DF 45B0		ldr r4, [pc, #+1456] ; 0x4B25B5
005BAD7A  F044 0401		orr r4, r4, #1
005BAD7E  47A0     		blx r4
005BAD80  F8DD 1000		ldr r1, [sp]
005BAD84  B002     		add sp, sp, #8

#152						AND		Delay.Q	{LNXT:36|-1|-1}
(*) BOOL
005BAD86  F8DF 75C8		ldr r7, [pc, #+1480] ; 0x20414A5C
005BAD8A  783F     		ldrb r7, [r7]
005BAD8C  4038     		and r0, r0, r7

#153						JMPCN	$label16	{LNXT:36|37|40}
(-) BOOL
005BAD8E  2800     		cmp r0, #0
005BAD90  D00A     		beq #20 ; 0x005BADA8


#154		
#155						(* THEN *)
#156		
#157							(* Delay.IN:=FALSE; *)
#158							MOVE		FALSE,Delay.IN	{LNXT:37|38|-1}
(*) BOOL
005BAD94  2000     		mov r0, #0 ; 0
005BAD96  F8DF 75B0		ldr r7, [pc, #+1456] ; 0x20414A54
005BAD9A  7038     		strb r0, [r7]

#159		
#160							(* Fase := 4; *)
#161							MOVE		4,Fase	{LNXT:38|1|-1}
(*) BOOL
005BAD9C  2004     		mov r0, #4 ; 4
005BAD9E  F8DF 759C		ldr r7, [pc, #+1436] ; 0x20414A16
005BADA2  8038     		strh r0, [r7]

#162							JMP		$label17	{LNXT:36|37|40}
(-) INT
005BADA4  E00F     		b #30 ; 0x005BADC6


#163		$label16:
#164		
#165						(* ELSE *)
#166		
#167							(* Delay.IN:=NOT Delay.Q; *)
#168							LD		Delay.Q	{LNXT:40|41|-1}
(*) UNDEF
005BADA8  F8DF 75A4		ldr r7, [pc, #+1444] ; 0x20414A5C
005BADAC  7838     		ldrb r0, [r7]

#169							NOT	{LNXT:40|41|-1}
(*) BOOL
005BADAE  2800     		cmp r0, #0
005BADB0  BF08 2001		eqmov r0, #1
005BADB4  BF18 2000		nemov r0, #0

#170							ST		Delay.IN	{LNXT:40|41|-1}
(*) BOOL
005BADB8  F8DF 758C		ldr r7, [pc, #+1420] ; 0x20414A54
005BADBC  7038     		strb r0, [r7]

#171		
#172							(* Fase := 1; *)
#173							MOVE		1,Fase	{LNXT:41|1|-1}
(*) BOOL
005BADBE  2001     		mov r0, #1 ; 1
005BADC0  F8DF 7578		ldr r7, [pc, #+1400] ; 0x20414A16
005BADC4  8038     		strh r0, [r7]

#174		
#175		$label17:
#176						(* END_IF *)
#177						JMP		$label15	{LNXT:34|35|43}
(-) INT
005BADC6  E033     		b #102 ; 0x005BAE30


#178		$label14:
#179		
#180					(* ELSIF Temp_accumulo > Temp_setpoint_inverno - T_tolleranza_inverno *)
#181					LD		Temp_accumulo	{LNXT:43|-1|-1}
(*) UNDEF
005BADCA  F8DF 7574		ldr r7, [pc, #+1396] ; 0x20414A30
005BADCE  6838     		ldr r0, [r7]

#182					GT(		Temp_setpoint_inverno	{LNXT:43|-1|-1}
(*) REAL
005BADD0  B082     		sub sp, sp, #8
005BADD2  F8CD 0000		str r0, [sp]
005BADD6  F8DF 7588		ldr r7, [pc, #+1416] ; 0x20418E48
005BADDA  6838     		ldr r0, [r7]

#183					SUB		T_tolleranza_inverno	{LNXT:43|-1|-1}
(*) REAL
005BADDC  F8DF 757C		ldr r7, [pc, #+1404] ; 0x20418E44
005BADE0  683F     		ldr r7, [r7]
005BADE2  B082     		sub sp, sp, #8
005BADE4  F8CD 1000		str r1, [sp]
005BADE8  4639     		mov r1, r7
005BADEA  F8DF 4538		ldr r4, [pc, #+1336] ; 0x4B257F
005BADEE  F044 0401		orr r4, r4, #1
005BADF2  47A0     		blx r4
005BADF4  F8DD 1000		ldr r1, [sp]
005BADF8  B002     		add sp, sp, #8

#184					)	{LNXT:43|-1|-1}
(*) REAL
005BADFA  4607     		mov r7, r0
005BADFC  F8DD 0000		ldr r0, [sp]
005BAE00  B002     		add sp, sp, #8
005BAE02  B082     		sub sp, sp, #8
005BAE04  F8CD 1000		str r1, [sp]
005BAE08  4639     		mov r1, r7
005BAE0A  F8DF 451C		ldr r4, [pc, #+1308] ; 0x4B25B5
005BAE0E  F044 0401		orr r4, r4, #1
005BAE12  47A0     		blx r4
005BAE14  F8DD 1000		ldr r1, [sp]
005BAE18  B002     		add sp, sp, #8

#185					JMPCN	$label15	{LNXT:43|44|1}
(-) BOOL
005BAE1A  2800     		cmp r0, #0
005BAE1C  D008     		beq #16 ; 0x005BAE30


#186		
#187					(* THEN *)
#188		
#189						(* Delay.IN:=FALSE; *)
#190						MOVE		FALSE,Delay.IN	{LNXT:44|45|-1}
(*) BOOL
005BAE20  2000     		mov r0, #0 ; 0
005BAE22  F8DF 7524		ldr r7, [pc, #+1316] ; 0x20414A54
005BAE26  7038     		strb r0, [r7]

#191		
#192						(* Fase := 4; *)
#193						MOVE		4,Fase	{LNXT:45|1|-1}
(*) BOOL
005BAE28  2004     		mov r0, #4 ; 4
005BAE2A  F8DF 7510		ldr r7, [pc, #+1296] ; 0x20414A16
005BAE2E  8038     		strh r0, [r7]

#194		
#195		$label15:
#196					(* END_IF *)
#197					JMP		$label2	{LNXT:29|1|-1}
(-) INT
005BAE30  E380     		b #1792 ; 0x005BB534


#198		
#199		$label5:
#200					(* Comando_caldaia := TRUE; *)
#201					MOVE		TRUE,Comando_caldaia	{LNXT:50|51|-1}
(*) INT
005BAE34  2001     		mov r0, #1 ; 1
005BAE36  F8DF 7534		ldr r7, [pc, #+1332] ; 0x2041A198
005BAE3A  7038     		strb r0, [r7]

#202		
#203					(* Comando_pompa_fancoil := FALSE; *)
#204					MOVE		FALSE,Comando_pompa_fancoil	{LNXT:51|52|-1}
(*) BOOL
005BAE3C  2000     		mov r0, #0 ; 0
005BAE3E  F8DF 7538		ldr r7, [pc, #+1336] ; 0x2041A19B
005BAE42  7038     		strb r0, [r7]

#205		
#206					(* Comando_PdC := FALSE; *)
#207					MOVE		FALSE,Comando_PdC	{LNXT:52|53|-1}
(*) BOOL
005BAE44  2000     		mov r0, #0 ; 0
005BAE46  F8DF 7528		ldr r7, [pc, #+1320] ; 0x2041A199
005BAE4A  7038     		strb r0, [r7]

#208		
#209					(* Comando_pompa_UTA := FALSE; *)
#210					MOVE		FALSE,Comando_pompa_UTA	{LNXT:53|55|-1}
(*) BOOL
005BAE4C  2000     		mov r0, #0 ; 0
005BAE4E  F8DF 7524		ldr r7, [pc, #+1316] ; 0x2041A19A
005BAE52  7038     		strb r0, [r7]

#211		
#212		
#213					(* IF Temp_accumulo < Temp_setpoint_inverno - T_tolleranza_inverno *)
#214					LD		Temp_accumulo	{LNXT:55|-1|-1}
(*) UNDEF
005BAE54  F8DF 74E8		ldr r7, [pc, #+1256] ; 0x20414A30
005BAE58  6838     		ldr r0, [r7]

#215					LT(		Temp_setpoint_inverno	{LNXT:55|-1|-1}
(*) REAL
005BAE5A  B082     		sub sp, sp, #8
005BAE5C  F8CD 0000		str r0, [sp]
005BAE60  F8DF 74FC		ldr r7, [pc, #+1276] ; 0x20418E48
005BAE64  6838     		ldr r0, [r7]

#216					SUB		T_tolleranza_inverno	{LNXT:55|-1|-1}
(*) REAL
005BAE66  F8DF 74F4		ldr r7, [pc, #+1268] ; 0x20418E44
005BAE6A  683F     		ldr r7, [r7]
005BAE6C  B082     		sub sp, sp, #8
005BAE6E  F8CD 1000		str r1, [sp]
005BAE72  4639     		mov r1, r7
005BAE74  F8DF 44AC		ldr r4, [pc, #+1196] ; 0x4B257F
005BAE78  F044 0401		orr r4, r4, #1
005BAE7C  47A0     		blx r4
005BAE7E  F8DD 1000		ldr r1, [sp]
005BAE82  B002     		add sp, sp, #8

#217					)	{LNXT:55|-1|-1}
(*) REAL
005BAE84  4607     		mov r7, r0
005BAE86  F8DD 0000		ldr r0, [sp]
005BAE8A  B002     		add sp, sp, #8
005BAE8C  B082     		sub sp, sp, #8
005BAE8E  F8CD 1000		str r1, [sp]
005BAE92  4639     		mov r1, r7
005BAE94  F8DF 4494		ldr r4, [pc, #+1172] ; 0x4B25FD
005BAE98  F044 0401		orr r4, r4, #1
005BAE9C  47A0     		blx r4
005BAE9E  F8DD 1000		ldr r1, [sp]
005BAEA2  B002     		add sp, sp, #8

#218					JMPCN	$label18	{LNXT:55|56|65}
(-) BOOL
005BAEA4  2800     		cmp r0, #0
005BAEA6  D052     		beq #164 ; 0x005BAF4E


#219		
#220					(* THEN *)
#221		
#222						(* Comando_caldaia := TRUE; *)
#223						MOVE		TRUE,Comando_caldaia	{LNXT:56|57|-1}
(*) BOOL
005BAEAA  2001     		mov r0, #1 ; 1
005BAEAC  F8DF 74BC		ldr r7, [pc, #+1212] ; 0x2041A198
005BAEB0  7038     		strb r0, [r7]

#224		
#225						(* Delay.IN:=TRUE; *)
#226						MOVE		TRUE,Delay.IN	{LNXT:57|58|-1}
(*) BOOL
005BAEB2  2001     		mov r0, #1 ; 1
005BAEB4  F8DF 7490		ldr r7, [pc, #+1168] ; 0x20414A54
005BAEB8  7038     		strb r0, [r7]

#227		
#228		
#229						(* IF Delay.Q AND Temp_accumulo > Temp_setpoint_inverno - T_tolleranza_inverno *)
#230						LD		Temp_accumulo	{LNXT:58|-1|-1}
(*) UNDEF
005BAEBA  F8DF 7484		ldr r7, [pc, #+1156] ; 0x20414A30
005BAEBE  6838     		ldr r0, [r7]

#231						GT(		Temp_setpoint_inverno	{LNXT:58|-1|-1}
(*) REAL
005BAEC0  B082     		sub sp, sp, #8
005BAEC2  F8CD 0000		str r0, [sp]
005BAEC6  F8DF 7498		ldr r7, [pc, #+1176] ; 0x20418E48
005BAECA  6838     		ldr r0, [r7]

#232						SUB		T_tolleranza_inverno	{LNXT:58|-1|-1}
(*) REAL
005BAECC  F8DF 748C		ldr r7, [pc, #+1164] ; 0x20418E44
005BAED0  683F     		ldr r7, [r7]
005BAED2  B082     		sub sp, sp, #8
005BAED4  F8CD 1000		str r1, [sp]
005BAED8  4639     		mov r1, r7
005BAEDA  F8DF 4448		ldr r4, [pc, #+1096] ; 0x4B257F
005BAEDE  F044 0401		orr r4, r4, #1
005BAEE2  47A0     		blx r4
005BAEE4  F8DD 1000		ldr r1, [sp]
005BAEE8  B002     		add sp, sp, #8

#233						)	{LNXT:58|-1|-1}
(*) REAL
005BAEEA  4607     		mov r7, r0
005BAEEC  F8DD 0000		ldr r0, [sp]
005BAEF0  B002     		add sp, sp, #8
005BAEF2  B082     		sub sp, sp, #8
005BAEF4  F8CD 1000		str r1, [sp]
005BAEF8  4639     		mov r1, r7
005BAEFA  F8DF 442C		ldr r4, [pc, #+1068] ; 0x4B25B5
005BAEFE  F044 0401		orr r4, r4, #1
005BAF02  47A0     		blx r4
005BAF04  F8DD 1000		ldr r1, [sp]
005BAF08  B002     		add sp, sp, #8

#234						AND		Delay.Q	{LNXT:58|-1|-1}
(*) BOOL
005BAF0A  F8DF 7444		ldr r7, [pc, #+1092] ; 0x20414A5C
005BAF0E  783F     		ldrb r7, [r7]
005BAF10  4038     		and r0, r0, r7

#235						JMPCN	$label20	{LNXT:58|59|62}
(-) BOOL
005BAF12  2800     		cmp r0, #0
005BAF14  D00A     		beq #20 ; 0x005BAF2C


#236		
#237						(* THEN *)
#238		
#239							(* Delay.IN:=FALSE; *)
#240							MOVE		FALSE,Delay.IN	{LNXT:59|60|-1}
(*) BOOL
005BAF18  2000     		mov r0, #0 ; 0
005BAF1A  F8DF 742C		ldr r7, [pc, #+1068] ; 0x20414A54
005BAF1E  7038     		strb r0, [r7]

#241		
#242							(* Fase := 3; *)
#243							MOVE		3,Fase	{LNXT:60|1|-1}
(*) BOOL
005BAF20  2003     		mov r0, #3 ; 3
005BAF22  F8DF 7418		ldr r7, [pc, #+1048] ; 0x20414A16
005BAF26  8038     		strh r0, [r7]

#244							JMP		$label21	{LNXT:58|59|62}
(-) INT
005BAF28  E00F     		b #30 ; 0x005BAF4A


#245		$label20:
#246		
#247						(* ELSE *)
#248		
#249							(* Delay.IN:=NOT Delay.Q; *)
#250							LD		Delay.Q	{LNXT:62|63|-1}
(*) UNDEF
005BAF2C  F8DF 7420		ldr r7, [pc, #+1056] ; 0x20414A5C
005BAF30  7838     		ldrb r0, [r7]

#251							NOT	{LNXT:62|63|-1}
(*) BOOL
005BAF32  2800     		cmp r0, #0
005BAF34  BF08 2001		eqmov r0, #1
005BAF38  BF18 2000		nemov r0, #0

#252							ST		Delay.IN	{LNXT:62|63|-1}
(*) BOOL
005BAF3C  F8DF 7408		ldr r7, [pc, #+1032] ; 0x20414A54
005BAF40  7038     		strb r0, [r7]

#253		
#254							(* Fase := 2; *)
#255							MOVE		2,Fase	{LNXT:63|1|-1}
(*) BOOL
005BAF42  2002     		mov r0, #2 ; 2
005BAF44  F8DF 73F4		ldr r7, [pc, #+1012] ; 0x20414A16
005BAF48  8038     		strh r0, [r7]

#256		
#257		$label21:
#258						(* END_IF *)
#259						JMP		$label19	{LNXT:55|56|65}
(-) INT
005BAF4A  E033     		b #102 ; 0x005BAFB4


#260		$label18:
#261		
#262					(* ELSIF Temp_accumulo > Temp_setpoint_inverno - T_tolleranza_inverno *)
#263					LD		Temp_accumulo	{LNXT:65|-1|-1}
(*) UNDEF
005BAF4E  F8DF 73F0		ldr r7, [pc, #+1008] ; 0x20414A30
005BAF52  6838     		ldr r0, [r7]

#264					GT(		Temp_setpoint_inverno	{LNXT:65|-1|-1}
(*) REAL
005BAF54  B082     		sub sp, sp, #8
005BAF56  F8CD 0000		str r0, [sp]
005BAF5A  F8DF 7404		ldr r7, [pc, #+1028] ; 0x20418E48
005BAF5E  6838     		ldr r0, [r7]

#265					SUB		T_tolleranza_inverno	{LNXT:65|-1|-1}
(*) REAL
005BAF60  F8DF 73F8		ldr r7, [pc, #+1016] ; 0x20418E44
005BAF64  683F     		ldr r7, [r7]
005BAF66  B082     		sub sp, sp, #8
005BAF68  F8CD 1000		str r1, [sp]
005BAF6C  4639     		mov r1, r7
005BAF6E  F8DF 43B4		ldr r4, [pc, #+948] ; 0x4B257F
005BAF72  F044 0401		orr r4, r4, #1
005BAF76  47A0     		blx r4
005BAF78  F8DD 1000		ldr r1, [sp]
005BAF7C  B002     		add sp, sp, #8

#266					)	{LNXT:65|-1|-1}
(*) REAL
005BAF7E  4607     		mov r7, r0
005BAF80  F8DD 0000		ldr r0, [sp]
005BAF84  B002     		add sp, sp, #8
005BAF86  B082     		sub sp, sp, #8
005BAF88  F8CD 1000		str r1, [sp]
005BAF8C  4639     		mov r1, r7
005BAF8E  F8DF 4398		ldr r4, [pc, #+920] ; 0x4B25B5
005BAF92  F044 0401		orr r4, r4, #1
005BAF96  47A0     		blx r4
005BAF98  F8DD 1000		ldr r1, [sp]
005BAF9C  B002     		add sp, sp, #8

#267					JMPCN	$label19	{LNXT:65|66|1}
(-) BOOL
005BAF9E  2800     		cmp r0, #0
005BAFA0  D008     		beq #16 ; 0x005BAFB4


#268		
#269					(* THEN *)
#270		
#271						(* Delay.IN:=FALSE; *)
#272						MOVE		FALSE,Delay.IN	{LNXT:66|67|-1}
(*) BOOL
005BAFA4  2000     		mov r0, #0 ; 0
005BAFA6  F8DF 73A0		ldr r7, [pc, #+928] ; 0x20414A54
005BAFAA  7038     		strb r0, [r7]

#273		
#274						(* Fase := 3; *)
#275						MOVE		3,Fase	{LNXT:67|1|-1}
(*) BOOL
005BAFAC  2003     		mov r0, #3 ; 3
005BAFAE  F8DF 738C		ldr r7, [pc, #+908] ; 0x20414A16
005BAFB2  8038     		strh r0, [r7]

#276		
#277		$label19:
#278					(* END_IF *)
#279					JMP		$label2	{LNXT:50|1|-1}
(-) INT
005BAFB4  E2BE     		b #1404 ; 0x005BB534


#280		
#281		$label6:
#282		
#283					(* IF Blocco_caldaia *)
#284					LD		Blocco_caldaia	{LNXT:71|-1|-1}
(*) UNDEF
005BAFB8  F8DF 73A8		ldr r7, [pc, #+936] ; 0x20419F79
005BAFBC  7838     		ldrb r0, [r7]

#285					JMPCN	$label22	{LNXT:71|72|74}
(-) BOOL
005BAFBE  2800     		cmp r0, #0
005BAFC0  D006     		beq #12 ; 0x005BAFD0


#286		
#287					(* THEN *)
#288		
#289						(* Fase := 1; *)
#290						MOVE		1,Fase	{LNXT:72|1|-1}
(*) BOOL
005BAFC4  2001     		mov r0, #1 ; 1
005BAFC6  F8DF 7374		ldr r7, [pc, #+884] ; 0x20414A16
005BAFCA  8038     		strh r0, [r7]

#291						JMP		$label23	{LNXT:71|72|74}
(-) INT
005BAFCC  E05C     		b #184 ; 0x005BB088


#292		$label22:
#293		
#294					(* ELSE *)
#295		
#296						(* Comando_caldaia := TRUE; *)
#297						MOVE		TRUE,Comando_caldaia	{LNXT:74|75|-1}
(*) INT
005BAFD0  2001     		mov r0, #1 ; 1
005BAFD2  F8DF 7398		ldr r7, [pc, #+920] ; 0x2041A198
005BAFD6  7038     		strb r0, [r7]

#298		
#299						(* Comando_pompa_fancoil := TRUE; *)
#300						MOVE		TRUE,Comando_pompa_fancoil	{LNXT:75|76|-1}
(*) BOOL
005BAFD8  2001     		mov r0, #1 ; 1
005BAFDA  F8DF 739C		ldr r7, [pc, #+924] ; 0x2041A19B
005BAFDE  7038     		strb r0, [r7]

#301		
#302						(* Comando_PdC := FALSE; *)
#303						MOVE		FALSE,Comando_PdC	{LNXT:76|77|-1}
(*) BOOL
005BAFE0  2000     		mov r0, #0 ; 0
005BAFE2  F8DF 738C		ldr r7, [pc, #+908] ; 0x2041A199
005BAFE6  7038     		strb r0, [r7]

#304		
#305						(* Comando_pompa_UTA := FALSE; *)
#306						MOVE		FALSE,Comando_pompa_UTA	{LNXT:77|79|-1}
(*) BOOL
005BAFE8  2000     		mov r0, #0 ; 0
005BAFEA  F8DF 7388		ldr r7, [pc, #+904] ; 0x2041A19A
005BAFEE  7038     		strb r0, [r7]

#307		
#308						(* Delay.IN:=TRUE; *)
#309						MOVE		TRUE,Delay.IN	{LNXT:79|80|-1}
(*) BOOL
005BAFF0  2001     		mov r0, #1 ; 1
005BAFF2  F8DF 7354		ldr r7, [pc, #+852] ; 0x20414A54
005BAFF6  7038     		strb r0, [r7]

#310		
#311		
#312						(* IF Delay.Q AND Temp_accumulo > Temp_setpoint_inverno - T_tolleranza_inverno *)
#313						LD		Temp_accumulo	{LNXT:80|-1|-1}
(*) UNDEF
005BAFF8  F8DF 7344		ldr r7, [pc, #+836] ; 0x20414A30
005BAFFC  6838     		ldr r0, [r7]

#314						GT(		Temp_setpoint_inverno	{LNXT:80|-1|-1}
(*) REAL
005BAFFE  B082     		sub sp, sp, #8
005BB000  F8CD 0000		str r0, [sp]
005BB004  F8DF 7358		ldr r7, [pc, #+856] ; 0x20418E48
005BB008  6838     		ldr r0, [r7]

#315						SUB		T_tolleranza_inverno	{LNXT:80|-1|-1}
(*) REAL
005BB00A  F8DF 7350		ldr r7, [pc, #+848] ; 0x20418E44
005BB00E  683F     		ldr r7, [r7]
005BB010  B082     		sub sp, sp, #8
005BB012  F8CD 1000		str r1, [sp]
005BB016  4639     		mov r1, r7
005BB018  F8DF 4308		ldr r4, [pc, #+776] ; 0x4B257F
005BB01C  F044 0401		orr r4, r4, #1
005BB020  47A0     		blx r4
005BB022  F8DD 1000		ldr r1, [sp]
005BB026  B002     		add sp, sp, #8

#316						)	{LNXT:80|-1|-1}
(*) REAL
005BB028  4607     		mov r7, r0
005BB02A  F8DD 0000		ldr r0, [sp]
005BB02E  B002     		add sp, sp, #8
005BB030  B082     		sub sp, sp, #8
005BB032  F8CD 1000		str r1, [sp]
005BB036  4639     		mov r1, r7
005BB038  F8DF 42EC		ldr r4, [pc, #+748] ; 0x4B25B5
005BB03C  F044 0401		orr r4, r4, #1
005BB040  47A0     		blx r4
005BB042  F8DD 1000		ldr r1, [sp]
005BB046  B002     		add sp, sp, #8

#317						AND		Delay.Q	{LNXT:80|-1|-1}
(*) BOOL
005BB048  F8DF 7304		ldr r7, [pc, #+772] ; 0x20414A5C
005BB04C  783F     		ldrb r7, [r7]
005BB04E  4038     		and r0, r0, r7

#318						JMPCN	$label24	{LNXT:80|81|84}
(-) BOOL
005BB050  2800     		cmp r0, #0
005BB052  D00A     		beq #20 ; 0x005BB06A


#319		
#320						(* THEN *)
#321		
#322							(* Delay.IN:=FALSE; *)
#323							MOVE		FALSE,Delay.IN	{LNXT:81|82|-1}
(*) BOOL
005BB056  2000     		mov r0, #0 ; 0
005BB058  F8DF 72EC		ldr r7, [pc, #+748] ; 0x20414A54
005BB05C  7038     		strb r0, [r7]

#324		
#325							(* Fase := 4; *)
#326							MOVE		4,Fase	{LNXT:82|1|-1}
(*) BOOL
005BB05E  2004     		mov r0, #4 ; 4
005BB060  F8DF 72D8		ldr r7, [pc, #+728] ; 0x20414A16
005BB064  8038     		strh r0, [r7]

#327							JMP		$label25	{LNXT:80|81|84}
(-) INT
005BB066  E00F     		b #30 ; 0x005BB088


#328		$label24:
#329		
#330						(* ELSE *)
#331		
#332							(* Delay.IN:=NOT Delay.Q; *)
#333							LD		Delay.Q	{LNXT:84|85|-1}
(*) UNDEF
005BB06A  F8DF 72E4		ldr r7, [pc, #+740] ; 0x20414A5C
005BB06E  7838     		ldrb r0, [r7]

#334							NOT	{LNXT:84|85|-1}
(*) BOOL
005BB070  2800     		cmp r0, #0
005BB072  BF08 2001		eqmov r0, #1
005BB076  BF18 2000		nemov r0, #0

#335							ST		Delay.IN	{LNXT:84|85|-1}
(*) BOOL
005BB07A  F8DF 72CC		ldr r7, [pc, #+716] ; 0x20414A54
005BB07E  7038     		strb r0, [r7]

#336		
#337							(* Fase :=3; *)
#338							MOVE		3,Fase	{LNXT:85|1|-1}
(*) BOOL
005BB080  2003     		mov r0, #3 ; 3
005BB082  F8DF 72B8		ldr r7, [pc, #+696] ; 0x20414A16
005BB086  8038     		strh r0, [r7]

#339		
#340		$label25:
#341						(* END_IF *)
#342		
#343		$label23:
#344					(* END_IF *)
#345					JMP		$label2	{LNXT:1|74|-1}
(-) INT
005BB088  E254     		b #1192 ; 0x005BB534


#346		
#347		$label7:
#348		
#349					(* IF Blocco_PdC *)
#350					LD		Blocco_PdC	{LNXT:89|-1|-1}
(*) UNDEF
005BB08C  F8DF 72D8		ldr r7, [pc, #+728] ; 0x20419F7B
005BB090  7838     		ldrb r0, [r7]

#351					JMPCN	$label26	{LNXT:89|90|1}
(-) BOOL
005BB092  2800     		cmp r0, #0
005BB094  D068     		beq #208 ; 0x005BB168


#352		
#353					(* THEN *)
#354		
#355						(* Fase := 7; *)
#356						MOVE		7,Fase	{LNXT:90|91|-1}
(*) BOOL
005BB098  2007     		mov r0, #7 ; 7
005BB09A  F8DF 72A0		ldr r7, [pc, #+672] ; 0x20414A16
005BB09E  8038     		strh r0, [r7]

#357		
#358						(* Comando_caldaia := FALSE; *)
#359						MOVE		FALSE,Comando_caldaia	{LNXT:91|92|-1}
(*) INT
005BB0A0  2000     		mov r0, #0 ; 0
005BB0A2  F8DF 72C8		ldr r7, [pc, #+712] ; 0x2041A198
005BB0A6  7038     		strb r0, [r7]

#360		
#361						(* Comando_pompa_fancoil := TRUE; *)
#362						MOVE		TRUE,Comando_pompa_fancoil	{LNXT:92|93|-1}
(*) BOOL
005BB0A8  2001     		mov r0, #1 ; 1
005BB0AA  F8DF 72CC		ldr r7, [pc, #+716] ; 0x2041A19B
005BB0AE  7038     		strb r0, [r7]

#363		
#364						(* Comando_PdC := TRUE; *)
#365						MOVE		TRUE,Comando_PdC	{LNXT:93|94|-1}
(*) BOOL
005BB0B0  2001     		mov r0, #1 ; 1
005BB0B2  F8DF 72BC		ldr r7, [pc, #+700] ; 0x2041A199
005BB0B6  7038     		strb r0, [r7]

#366		
#367						(* Comando_pompa_UTA := FALSE; *)
#368						MOVE		FALSE,Comando_pompa_UTA	{LNXT:94|96|-1}
(*) BOOL
005BB0B8  2000     		mov r0, #0 ; 0
005BB0BA  F8DF 72B8		ldr r7, [pc, #+696] ; 0x2041A19A
005BB0BE  7038     		strb r0, [r7]

#369		
#370						(* Delay.IN:=TRUE; *)
#371						MOVE		TRUE,Delay.IN	{LNXT:96|97|-1}
(*) BOOL
005BB0C0  2001     		mov r0, #1 ; 1
005BB0C2  F8DF 7284		ldr r7, [pc, #+644] ; 0x20414A54
005BB0C6  7038     		strb r0, [r7]

#372		
#373		
#374						(* IF Delay.Q AND Temp_accumulo > Temp_setpoint_inverno - T_tolleranza_inverno *)
#375						LD		Temp_accumulo	{LNXT:97|-1|-1}
(*) UNDEF
005BB0C8  F8DF 7274		ldr r7, [pc, #+628] ; 0x20414A30
005BB0CC  6838     		ldr r0, [r7]

#376						GT(		Temp_setpoint_inverno	{LNXT:97|-1|-1}
(*) REAL
005BB0CE  B082     		sub sp, sp, #8
005BB0D0  F8CD 0000		str r0, [sp]
005BB0D4  F8DF 7288		ldr r7, [pc, #+648] ; 0x20418E48
005BB0D8  6838     		ldr r0, [r7]

#377						SUB		T_tolleranza_inverno	{LNXT:97|-1|-1}
(*) REAL
005BB0DA  F8DF 7280		ldr r7, [pc, #+640] ; 0x20418E44
005BB0DE  683F     		ldr r7, [r7]
005BB0E0  B082     		sub sp, sp, #8
005BB0E2  F8CD 1000		str r1, [sp]
005BB0E6  4639     		mov r1, r7
005BB0E8  F8DF 4238		ldr r4, [pc, #+568] ; 0x4B257F
005BB0EC  F044 0401		orr r4, r4, #1
005BB0F0  47A0     		blx r4
005BB0F2  F8DD 1000		ldr r1, [sp]
005BB0F6  B002     		add sp, sp, #8

#378						)	{LNXT:97|-1|-1}
(*) REAL
005BB0F8  4607     		mov r7, r0
005BB0FA  F8DD 0000		ldr r0, [sp]
005BB0FE  B002     		add sp, sp, #8
005BB100  B082     		sub sp, sp, #8
005BB102  F8CD 1000		str r1, [sp]
005BB106  4639     		mov r1, r7
005BB108  F8DF 421C		ldr r4, [pc, #+540] ; 0x4B25B5
005BB10C  F044 0401		orr r4, r4, #1
005BB110  47A0     		blx r4
005BB112  F8DD 1000		ldr r1, [sp]
005BB116  B002     		add sp, sp, #8

#379						AND		Delay.Q	{LNXT:97|-1|-1}
(*) BOOL
005BB118  F8DF 7234		ldr r7, [pc, #+564] ; 0x20414A5C
005BB11C  783F     		ldrb r7, [r7]
005BB11E  4038     		and r0, r0, r7

#380						JMPCN	$label27	{LNXT:97|98|102}
(-) BOOL
005BB120  2800     		cmp r0, #0
005BB122  D00E     		beq #28 ; 0x005BB142


#381		
#382						(* THEN *)
#383		
#384							(* Comando_pompa_fancoil := TRUE; *)
#385							MOVE		TRUE,Comando_pompa_fancoil	{LNXT:98|99|-1}
(*) BOOL
005BB126  2001     		mov r0, #1 ; 1
005BB128  F8DF 724C		ldr r7, [pc, #+588] ; 0x2041A19B
005BB12C  7038     		strb r0, [r7]

#386		
#387							(* Delay.IN:=FALSE; *)
#388							MOVE		FALSE,Delay.IN	{LNXT:99|100|-1}
(*) BOOL
005BB12E  2000     		mov r0, #0 ; 0
005BB130  F8DF 7214		ldr r7, [pc, #+532] ; 0x20414A54
005BB134  7038     		strb r0, [r7]

#389		
#390							(* Fase := 5; *)
#391							MOVE		5,Fase	{LNXT:100|1|-1}
(*) BOOL
005BB136  2005     		mov r0, #5 ; 5
005BB138  F8DF 7200		ldr r7, [pc, #+512] ; 0x20414A16
005BB13C  8038     		strh r0, [r7]

#392							JMP		$label28	{LNXT:97|98|102}
(-) INT
005BB13E  E013     		b #38 ; 0x005BB168


#393		$label27:
#394		
#395						(* ELSE *)
#396		
#397							(* Comando_pompa_fancoil := FALSE; *)
#398							MOVE		FALSE,Comando_pompa_fancoil	{LNXT:102|103|-1}
(*) INT
005BB142  2000     		mov r0, #0 ; 0
005BB144  F8DF 7230		ldr r7, [pc, #+560] ; 0x2041A19B
005BB148  7038     		strb r0, [r7]

#399		
#400							(* Delay.IN:=NOT Delay.Q; *)
#401							LD		Delay.Q	{LNXT:103|104|-1}
(*) UNDEF
005BB14A  F8DF 7204		ldr r7, [pc, #+516] ; 0x20414A5C
005BB14E  7838     		ldrb r0, [r7]

#402							NOT	{LNXT:103|104|-1}
(*) BOOL
005BB150  2800     		cmp r0, #0
005BB152  BF08 2001		eqmov r0, #1
005BB156  BF18 2000		nemov r0, #0

#403							ST		Delay.IN	{LNXT:103|104|-1}
(*) BOOL
005BB15A  F8DF 71EC		ldr r7, [pc, #+492] ; 0x20414A54
005BB15E  7038     		strb r0, [r7]

#404		
#405							(* Fase := 4; *)
#406							MOVE		4,Fase	{LNXT:104|1|-1}
(*) BOOL
005BB160  2004     		mov r0, #4 ; 4
005BB162  F8DF 71D8		ldr r7, [pc, #+472] ; 0x20414A16
005BB166  8038     		strh r0, [r7]

#407		
#408		$label28:
#409						(* END_IF *)
#410		
#411		$label26:
#412					(* END_IF *)
#413					JMP		$label2	{LNXT:1|1|-1}
(-) INT
005BB168  E1E4     		b #968 ; 0x005BB534


#414		
#415		$label8:
#416					(* Comando_caldaia := FALSE; *)
#417					MOVE		FALSE,Comando_caldaia	{LNXT:109|110|-1}
(*) INT
005BB16C  2000     		mov r0, #0 ; 0
005BB16E  F8DF 71FC		ldr r7, [pc, #+508] ; 0x2041A198
005BB172  7038     		strb r0, [r7]

#418		
#419					(* Comando_pompa_fancoil := TRUE; *)
#420					MOVE		TRUE,Comando_pompa_fancoil	{LNXT:110|111|-1}
(*) BOOL
005BB174  2001     		mov r0, #1 ; 1
005BB176  F8DF 7200		ldr r7, [pc, #+512] ; 0x2041A19B
005BB17A  7038     		strb r0, [r7]

#421		
#422					(* Comando_PdC := TRUE; *)
#423					MOVE		TRUE,Comando_PdC	{LNXT:111|112|-1}
(*) BOOL
005BB17C  2001     		mov r0, #1 ; 1
005BB17E  F8DF 71F0		ldr r7, [pc, #+496] ; 0x2041A199
005BB182  7038     		strb r0, [r7]

#424		
#425					(* Comando_pompa_UTA := TRUE; *)
#426					MOVE		TRUE,Comando_pompa_UTA	{LNXT:112|114|-1}
(*) BOOL
005BB184  2001     		mov r0, #1 ; 1
005BB186  F8DF 71EC		ldr r7, [pc, #+492] ; 0x2041A19A
005BB18A  7038     		strb r0, [r7]

#427		
#428					(* Delay.IN := TRUE; *)
#429					MOVE		TRUE,Delay.IN	{LNXT:114|115|-1}
(*) BOOL
005BB18C  2001     		mov r0, #1 ; 1
005BB18E  F8DF 71B8		ldr r7, [pc, #+440] ; 0x20414A54
005BB192  7038     		strb r0, [r7]

#430		
#431		
#432					(* IF Temp_accumulo < Temp_setpoint_inverno - T_tolleranza_inverno - 3 *)
#433					LD		Temp_accumulo	{LNXT:115|-1|-1}
(*) UNDEF
005BB194  F8DF 71A8		ldr r7, [pc, #+424] ; 0x20414A30
005BB198  6838     		ldr r0, [r7]

#434					LT(		Temp_setpoint_inverno	{LNXT:115|-1|-1}
(*) REAL
005BB19A  B082     		sub sp, sp, #8
005BB19C  F8CD 0000		str r0, [sp]
005BB1A0  F8DF 71BC		ldr r7, [pc, #+444] ; 0x20418E48
005BB1A4  6838     		ldr r0, [r7]

#435					SUB		T_tolleranza_inverno	{LNXT:115|-1|-1}
(*) REAL
005BB1A6  F8DF 71B4		ldr r7, [pc, #+436] ; 0x20418E44
005BB1AA  683F     		ldr r7, [r7]
005BB1AC  B082     		sub sp, sp, #8
005BB1AE  F8CD 1000		str r1, [sp]
005BB1B2  4639     		mov r1, r7
005BB1B4  F8DF 416C		ldr r4, [pc, #+364] ; 0x4B257F
005BB1B8  F044 0401		orr r4, r4, #1
005BB1BC  47A0     		blx r4
005BB1BE  F8DD 1000		ldr r1, [sp]
005BB1C2  B002     		add sp, sp, #8

#436					SUB		3	{LNXT:115|-1|-1}
(*) REAL
005BB1C4  2703     		mov r7, #3 ; 3
005BB1C6  B082     		sub sp, sp, #8
005BB1C8  F8CD 0000		str r0, [sp]
005BB1CC  4638     		mov r0, r7
005BB1CE  F8DF 4150		ldr r4, [pc, #+336] ; 0x4B2505
005BB1D2  F044 0401		orr r4, r4, #1
005BB1D6  47A0     		blx r4
005BB1D8  4607     		mov r7, r0
005BB1DA  F8DD 0000		ldr r0, [sp]
005BB1DE  B002     		add sp, sp, #8
005BB1E0  B082     		sub sp, sp, #8
005BB1E2  F8CD 1000		str r1, [sp]
005BB1E6  4639     		mov r1, r7
005BB1E8  F8DF 4138		ldr r4, [pc, #+312] ; 0x4B257F
005BB1EC  F044 0401		orr r4, r4, #1
005BB1F0  47A0     		blx r4
005BB1F2  F8DD 1000		ldr r1, [sp]
005BB1F6  B002     		add sp, sp, #8

#437					)	{LNXT:115|-1|-1}
(*) REAL
005BB1F8  4607     		mov r7, r0
005BB1FA  F8DD 0000		ldr r0, [sp]
005BB1FE  B002     		add sp, sp, #8
005BB200  B082     		sub sp, sp, #8
005BB202  F8CD 1000		str r1, [sp]
005BB206  4639     		mov r1, r7
005BB208  F8DF 4120		ldr r4, [pc, #+288] ; 0x4B25FD
005BB20C  F044 0401		orr r4, r4, #1
005BB210  47A0     		blx r4
005BB212  F8DD 1000		ldr r1, [sp]
005BB216  B002     		add sp, sp, #8

#438					JMPCN	$label29	{LNXT:115|116|119}
(-) BOOL
005BB218  2800     		cmp r0, #0
005BB21A  D015     		beq #42 ; 0x005BB248


#439		
#440					(* THEN *)
#441		
#442						(* Comando_caldaia := TRUE; *)
#443						MOVE		TRUE,Comando_caldaia	{LNXT:116|117|-1}
(*) BOOL
005BB21E  2001     		mov r0, #1 ; 1
005BB220  F8DF 7148		ldr r7, [pc, #+328] ; 0x2041A198
005BB224  7038     		strb r0, [r7]

#444		
#445						(* Delay.IN := NOT Delay.Q; *)
#446						LD		Delay.Q	{LNXT:117|118|-1}
(*) UNDEF
005BB226  F8DF 7128		ldr r7, [pc, #+296] ; 0x20414A5C
005BB22A  7838     		ldrb r0, [r7]

#447						NOT	{LNXT:117|118|-1}
(*) BOOL
005BB22C  2800     		cmp r0, #0
005BB22E  BF08 2001		eqmov r0, #1
005BB232  BF18 2000		nemov r0, #0

#448						ST		Delay.IN	{LNXT:117|118|-1}
(*) BOOL
005BB236  F8DF 7110		ldr r7, [pc, #+272] ; 0x20414A54
005BB23A  7038     		strb r0, [r7]

#449		
#450						(* Fase := 6; *)
#451						MOVE		6,Fase	{LNXT:118|1|-1}
(*) BOOL
005BB23C  2006     		mov r0, #6 ; 6
005BB23E  F8DF 70FC		ldr r7, [pc, #+252] ; 0x20414A16
005BB242  8038     		strh r0, [r7]

#452						JMP		$label31	{LNXT:115|116|119}
(-) INT
005BB244  E04C     		b #152 ; 0x005BB2E0


#453		$label29:
#454		
#455					(* ELSIF Delay.Q AND Temp_accumulo > Temp_setpoint_inverno - T_tolleranza_inverno *)
#456					LD		Temp_accumulo	{LNXT:119|-1|-1}
(*) UNDEF
005BB248  F8DF 70F4		ldr r7, [pc, #+244] ; 0x20414A30
005BB24C  6838     		ldr r0, [r7]

#457					GT(		Temp_setpoint_inverno	{LNXT:119|-1|-1}
(*) REAL
005BB24E  B082     		sub sp, sp, #8
005BB250  F8CD 0000		str r0, [sp]
005BB254  F8DF 7108		ldr r7, [pc, #+264] ; 0x20418E48
005BB258  6838     		ldr r0, [r7]

#458					SUB		T_tolleranza_inverno	{LNXT:119|-1|-1}
(*) REAL
005BB25A  F8DF 7100		ldr r7, [pc, #+256] ; 0x20418E44
005BB25E  683F     		ldr r7, [r7]
005BB260  B082     		sub sp, sp, #8
005BB262  F8CD 1000		str r1, [sp]
005BB266  4639     		mov r1, r7
005BB268  F8DF 40B8		ldr r4, [pc, #+184] ; 0x4B257F
005BB26C  F044 0401		orr r4, r4, #1
005BB270  47A0     		blx r4
005BB272  F8DD 1000		ldr r1, [sp]
005BB276  B002     		add sp, sp, #8

#459					)	{LNXT:119|-1|-1}
(*) REAL
005BB278  4607     		mov r7, r0
005BB27A  F8DD 0000		ldr r0, [sp]
005BB27E  B002     		add sp, sp, #8
005BB280  B082     		sub sp, sp, #8
005BB282  F8CD 1000		str r1, [sp]
005BB286  4639     		mov r1, r7
005BB288  F8DF 409C		ldr r4, [pc, #+156] ; 0x4B25B5
005BB28C  F044 0401		orr r4, r4, #1
005BB290  47A0     		blx r4
005BB292  F8DD 1000		ldr r1, [sp]
005BB296  B002     		add sp, sp, #8

#460					AND		Delay.Q	{LNXT:119|-1|-1}
(*) BOOL
005BB298  F8DF 70B4		ldr r7, [pc, #+180] ; 0x20414A5C
005BB29C  783F     		ldrb r7, [r7]
005BB29E  4038     		and r0, r0, r7

#461					JMPCN	$label30	{LNXT:119|120|124}
(-) BOOL
005BB2A0  2800     		cmp r0, #0
005BB2A2  D015     		beq #42 ; 0x005BB2D0


#462		
#463					(* THEN *)
#464		
#465						(* Comando_caldaia := FALSE; *)
#466						MOVE		FALSE,Comando_caldaia	{LNXT:120|121|-1}
(*) BOOL
005BB2A6  2000     		mov r0, #0 ; 0
005BB2A8  F8DF 70C0		ldr r7, [pc, #+192] ; 0x2041A198
005BB2AC  7038     		strb r0, [r7]

#467		
#468						(* Delay.IN := NOT Delay.Q; *)
#469						LD		Delay.Q	{LNXT:121|122|-1}
(*) UNDEF
005BB2AE  F8DF 70A0		ldr r7, [pc, #+160] ; 0x20414A5C
005BB2B2  7838     		ldrb r0, [r7]

#470						NOT	{LNXT:121|122|-1}
(*) BOOL
005BB2B4  2800     		cmp r0, #0
005BB2B6  BF08 2001		eqmov r0, #1
005BB2BA  BF18 2000		nemov r0, #0

#471						ST		Delay.IN	{LNXT:121|122|-1}
(*) BOOL
005BB2BE  F8DF 7088		ldr r7, [pc, #+136] ; 0x20414A54
005BB2C2  7038     		strb r0, [r7]

#472		
#473						(* Fase := 5; *)
#474						MOVE		5,Fase	{LNXT:122|1|-1}
(*) BOOL
005BB2C4  2005     		mov r0, #5 ; 5
005BB2C6  F8DF 7074		ldr r7, [pc, #+116] ; 0x20414A16
005BB2CA  8038     		strh r0, [r7]

#475						JMP		$label31	{LNXT:119|120|124}
(-) INT
005BB2CC  E008     		b #16 ; 0x005BB2E0


#476		$label30:
#477		
#478					(* ELSE *)
#479		
#480						(* Fase := 5; *)
#481						MOVE		5,Fase	{LNXT:124|125|-1}
(*) INT
005BB2D0  2005     		mov r0, #5 ; 5
005BB2D2  F8DF 7068		ldr r7, [pc, #+104] ; 0x20414A16
005BB2D6  8038     		strh r0, [r7]

#482		
#483						(* Delay.IN := FALSE; *)
#484						MOVE		FALSE,Delay.IN	{LNXT:125|1|-1}
(*) INT
005BB2D8  2000     		mov r0, #0 ; 0
005BB2DA  F8DF 706C		ldr r7, [pc, #+108] ; 0x20414A54
005BB2DE  7038     		strb r0, [r7]

#485		
#486		$label31:
#487					(* END_IF *)
#488					JMP		$label2	{LNXT:109|124|-1}
(-) BOOL
005BB2E0  E128     		b #592 ; 0x005BB534


#489		
#490		$label9:
#491					(* Delay.IN := TRUE; *)
#492					MOVE		TRUE,Delay.IN	{LNXT:129|130|-1}
(*) BOOL
005BB2E4  2001     		mov r0, #1 ; 1
005BB2E6  F8DF 7060		ldr r7, [pc, #+96] ; 0x20414A54
005BB2EA  7038     		strb r0, [r7]

#493		
#494		
#495					(* IF Delay.Q AND Temp_accumulo < Temp_setpoint_inverno - T_tolleranza_inverno *)
#496					LD		Temp_accumulo	{LNXT:130|-1|-1}
(*) UNDEF
005BB2EC  F8DF 7050		ldr r7, [pc, #+80] ; 0x20414A30
005BB2F0  6838     		ldr r0, [r7]

#497					LT(		Temp_setpoint_inverno	{LNXT:130|-1|-1}
(*) REAL
005BB2F2  B082     		sub sp, sp, #8
005BB2F4  F8CD 0000		str r0, [sp]
005BB2F8  F8DF 7064		ldr r7, [pc, #+100] ; 0x20418E48
005BB2FC  6838     		ldr r0, [r7]

#498					SUB		T_tolleranza_inverno	{LNXT:130|-1|-1}
(*) REAL
005BB2FE  F8DF 705C		ldr r7, [pc, #+92] ; 0x20418E44
005BB302  683F     		ldr r7, [r7]
005BB304  B082     		sub sp, sp, #8
005BB306  F8CD 1000		str r1, [sp]
005BB30A  4639     		mov r1, r7
005BB30C  F8DF 4014		ldr r4, [pc, #+20] ; 0x4B257F
005BB310  F044 0401		orr r4, r4, #1
005BB314  47A0     		blx r4
005BB316  F8DD 1000		ldr r1, [sp]
005BB31A  B002     		add sp, sp, #8

005BB31C  E02E     		b #92

005BB320  004B2505		; 0x004B2505
005BB324  004B257F		; 0x004B257F
005BB328  004B25B5		; 0x004B25B5
005BB32C  004B25FD		; 0x004B25FD
005BB330  005BA0D0		; 0x005BA0D0
005BB334  005BA178		; 0x005BA178
005BB338  20414A15		; 0x20414A15
005BB33C  20414A16		; 0x20414A16
005BB340  20414A30		; 0x20414A30
005BB344  20414A50		; 0x20414A50
005BB348  20414A54		; 0x20414A54
005BB34C  20414A58		; 0x20414A58
005BB350  20414A5C		; 0x20414A5C
005BB354  20418D78		; 0x20418D78
005BB358  20418D79		; 0x20418D79
005BB35C  20418E44		; 0x20418E44
005BB360  20418E48		; 0x20418E48
005BB364  20419F79		; 0x20419F79
005BB368  20419F7B		; 0x20419F7B
005BB36C  2041A198		; 0x2041A198
005BB370  2041A199		; 0x2041A199
005BB374  2041A19A		; 0x2041A19A
005BB378  2041A19B		; 0x2041A19B

#499					)	{LNXT:130|-1|-1}
(*) REAL
005BB37C  4607     		mov r7, r0
005BB37E  F8DD 0000		ldr r0, [sp]
005BB382  B002     		add sp, sp, #8
005BB384  B082     		sub sp, sp, #8
005BB386  F8CD 1000		str r1, [sp]
005BB38A  4639     		mov r1, r7
005BB38C  F85F 4064		ldr r4, [pc, #-100] ; 0x4B25FD
005BB390  F044 0401		orr r4, r4, #1
005BB394  47A0     		blx r4
005BB396  F8DD 1000		ldr r1, [sp]
005BB39A  B002     		add sp, sp, #8

#500					AND		Delay.Q	{LNXT:130|-1|-1}
(*) BOOL
005BB39C  F85F 7050		ldr r7, [pc, #-80] ; 0x20414A5C
005BB3A0  783F     		ldrb r7, [r7]
005BB3A2  4038     		and r0, r0, r7

#501					JMPCN	$label32	{LNXT:130|131|134}
(-) BOOL
005BB3A4  2800     		cmp r0, #0
005BB3A6  D015     		beq #42 ; 0x005BB3D4


#502		
#503					(* THEN *)
#504		
#505						(* Comando_caldaia := TRUE; *)
#506						MOVE		TRUE,Comando_caldaia	{LNXT:131|132|-1}
(*) BOOL
005BB3AA  2001     		mov r0, #1 ; 1
005BB3AC  F85F 7044		ldr r7, [pc, #-68] ; 0x2041A198
005BB3B0  7038     		strb r0, [r7]

#507		
#508						(* Delay.IN := NOT Delay.Q; *)
#509						LD		Delay.Q	{LNXT:132|133|-1}
(*) UNDEF
005BB3B2  F85F 7064		ldr r7, [pc, #-100] ; 0x20414A5C
005BB3B6  7838     		ldrb r0, [r7]

#510						NOT	{LNXT:132|133|-1}
(*) BOOL
005BB3B8  2800     		cmp r0, #0
005BB3BA  BF08 2001		eqmov r0, #1
005BB3BE  BF18 2000		nemov r0, #0

#511						ST		Delay.IN	{LNXT:132|133|-1}
(*) BOOL
005BB3C2  F85F 707C		ldr r7, [pc, #-124] ; 0x20414A54
005BB3C6  7038     		strb r0, [r7]

#512		
#513						(* Fase := 6; *)
#514						MOVE		6,Fase	{LNXT:133|1|-1}
(*) BOOL
005BB3C8  2006     		mov r0, #6 ; 6
005BB3CA  F85F 7090		ldr r7, [pc, #-144] ; 0x20414A16
005BB3CE  8038     		strh r0, [r7]

#515						JMP		$label33	{LNXT:130|131|134}
(-) INT
005BB3D0  E033     		b #102 ; 0x005BB43A


#516		$label32:
#517		
#518					(* ELSIF Temp_accumulo >= Temp_setpoint_inverno - T_tolleranza_inverno *)
#519					LD		Temp_accumulo	{LNXT:134|-1|-1}
(*) UNDEF
005BB3D4  F85F 7098		ldr r7, [pc, #-152] ; 0x20414A30
005BB3D8  6838     		ldr r0, [r7]

#520					GE(		Temp_setpoint_inverno	{LNXT:134|-1|-1}
(*) REAL
005BB3DA  B082     		sub sp, sp, #8
005BB3DC  F8CD 0000		str r0, [sp]
005BB3E0  F85F 7084		ldr r7, [pc, #-132] ; 0x20418E48
005BB3E4  6838     		ldr r0, [r7]

#521					SUB		T_tolleranza_inverno	{LNXT:134|-1|-1}
(*) REAL
005BB3E6  F85F 708C		ldr r7, [pc, #-140] ; 0x20418E44
005BB3EA  683F     		ldr r7, [r7]
005BB3EC  B082     		sub sp, sp, #8
005BB3EE  F8CD 1000		str r1, [sp]
005BB3F2  4639     		mov r1, r7
005BB3F4  F85F 40D4		ldr r4, [pc, #-212] ; 0x4B257F
005BB3F8  F044 0401		orr r4, r4, #1
005BB3FC  47A0     		blx r4
005BB3FE  F8DD 1000		ldr r1, [sp]
005BB402  B002     		add sp, sp, #8

#522					)	{LNXT:134|-1|-1}
(*) REAL
005BB404  4607     		mov r7, r0
005BB406  F8DD 0000		ldr r0, [sp]
005BB40A  B002     		add sp, sp, #8
005BB40C  B082     		sub sp, sp, #8
005BB40E  F8CD 1000		str r1, [sp]
005BB412  4639     		mov r1, r7
005BB414  F8DF 4188		ldr r4, [pc, #+392] ; 0x4B25CD
005BB418  F044 0401		orr r4, r4, #1
005BB41C  47A0     		blx r4
005BB41E  F8DD 1000		ldr r1, [sp]
005BB422  B002     		add sp, sp, #8

#523					JMPCN	$label33	{LNXT:134|135|1}
(-) BOOL
005BB424  2800     		cmp r0, #0
005BB426  D008     		beq #16 ; 0x005BB43A


#524		
#525					(* THEN *)
#526		
#527						(* Comando_caldaia := FALSE; *)
#528						MOVE		FALSE,Comando_caldaia	{LNXT:135|136|-1}
(*) BOOL
005BB42A  2000     		mov r0, #0 ; 0
005BB42C  F85F 70C4		ldr r7, [pc, #-196] ; 0x2041A198
005BB430  7038     		strb r0, [r7]

#529		
#530						(* Fase := 5; *)
#531						MOVE		5,Fase	{LNXT:136|1|-1}
(*) BOOL
005BB432  2005     		mov r0, #5 ; 5
005BB434  F85F 70FC		ldr r7, [pc, #-252] ; 0x20414A16
005BB438  8038     		strh r0, [r7]

#532		
#533		$label33:
#534					(* END_IF *)
#535					JMP		$label2	{LNXT:129|1|-1}
(-) INT
005BB43A  E07B     		b #246 ; 0x005BB534


#536		
#537		$label10:
#538					(* Delay.IN := TRUE; *)
#539					MOVE		TRUE,Delay.IN	{LNXT:140|141|-1}
(*) INT
005BB43E  2001     		mov r0, #1 ; 1
005BB440  F85F 70FC		ldr r7, [pc, #-252] ; 0x20414A54
005BB444  7038     		strb r0, [r7]

#540		
#541		
#542					(* IF Delay.Q AND Temp_accumulo < Temp_setpoint_inverno - T_tolleranza_inverno *)
#543					LD		Temp_accumulo	{LNXT:141|-1|-1}
(*) UNDEF
005BB446  F85F 7108		ldr r7, [pc, #-264] ; 0x20414A30
005BB44A  6838     		ldr r0, [r7]

#544					LT(		Temp_setpoint_inverno	{LNXT:141|-1|-1}
(*) REAL
005BB44C  B082     		sub sp, sp, #8
005BB44E  F8CD 0000		str r0, [sp]
005BB452  F85F 70F4		ldr r7, [pc, #-244] ; 0x20418E48
005BB456  6838     		ldr r0, [r7]

#545					SUB		T_tolleranza_inverno	{LNXT:141|-1|-1}
(*) REAL
005BB458  F85F 7100		ldr r7, [pc, #-256] ; 0x20418E44
005BB45C  683F     		ldr r7, [r7]
005BB45E  B082     		sub sp, sp, #8
005BB460  F8CD 1000		str r1, [sp]
005BB464  4639     		mov r1, r7
005BB466  F85F 4144		ldr r4, [pc, #-324] ; 0x4B257F
005BB46A  F044 0401		orr r4, r4, #1
005BB46E  47A0     		blx r4
005BB470  F8DD 1000		ldr r1, [sp]
005BB474  B002     		add sp, sp, #8

#546					)	{LNXT:141|-1|-1}
(*) REAL
005BB476  4607     		mov r7, r0
005BB478  F8DD 0000		ldr r0, [sp]
005BB47C  B002     		add sp, sp, #8
005BB47E  B082     		sub sp, sp, #8
005BB480  F8CD 1000		str r1, [sp]
005BB484  4639     		mov r1, r7
005BB486  F85F 415C		ldr r4, [pc, #-348] ; 0x4B25FD
005BB48A  F044 0401		orr r4, r4, #1
005BB48E  47A0     		blx r4
005BB490  F8DD 1000		ldr r1, [sp]
005BB494  B002     		add sp, sp, #8

#547					AND		Delay.Q	{LNXT:141|-1|-1}
(*) BOOL
005BB496  F85F 7148		ldr r7, [pc, #-328] ; 0x20414A5C
005BB49A  783F     		ldrb r7, [r7]
005BB49C  4038     		and r0, r0, r7

#548					JMPCN	$label34	{LNXT:141|142|145}
(-) BOOL
005BB49E  2800     		cmp r0, #0
005BB4A0  D015     		beq #42 ; 0x005BB4CE


#549		
#550					(* THEN *)
#551		
#552						(* Comando_caldaia := TRUE; *)
#553						MOVE		TRUE,Comando_caldaia	{LNXT:142|143|-1}
(*) BOOL
005BB4A4  2001     		mov r0, #1 ; 1
005BB4A6  F85F 713C		ldr r7, [pc, #-316] ; 0x2041A198
005BB4AA  7038     		strb r0, [r7]

#554		
#555						(* Delay.IN := NOT Delay.Q; *)
#556						LD		Delay.Q	{LNXT:143|144|-1}
(*) UNDEF
005BB4AC  F85F 7160		ldr r7, [pc, #-352] ; 0x20414A5C
005BB4B0  7838     		ldrb r0, [r7]

#557						NOT	{LNXT:143|144|-1}
(*) BOOL
005BB4B2  2800     		cmp r0, #0
005BB4B4  BF08 2001		eqmov r0, #1
005BB4B8  BF18 2000		nemov r0, #0

#558						ST		Delay.IN	{LNXT:143|144|-1}
(*) BOOL
005BB4BC  F85F 7178		ldr r7, [pc, #-376] ; 0x20414A54
005BB4C0  7038     		strb r0, [r7]

#559		
#560						(* Fase := 6; *)
#561						MOVE		6,Fase	{LNXT:144|1|-1}
(*) BOOL
005BB4C2  2006     		mov r0, #6 ; 6
005BB4C4  F85F 718C		ldr r7, [pc, #-396] ; 0x20414A16
005BB4C8  8038     		strh r0, [r7]

#562						JMP		$label35	{LNXT:141|142|145}
(-) INT
005BB4CA  E033     		b #102 ; 0x005BB534


#563		$label34:
#564		
#565					(* ELSIF Temp_accumulo >= Temp_setpoint_inverno - T_tolleranza_inverno *)
#566					LD		Temp_accumulo	{LNXT:145|-1|-1}
(*) UNDEF
005BB4CE  F85F 7190		ldr r7, [pc, #-400] ; 0x20414A30
005BB4D2  6838     		ldr r0, [r7]

#567					GE(		Temp_setpoint_inverno	{LNXT:145|-1|-1}
(*) REAL
005BB4D4  B082     		sub sp, sp, #8
005BB4D6  F8CD 0000		str r0, [sp]
005BB4DA  F85F 717C		ldr r7, [pc, #-380] ; 0x20418E48
005BB4DE  6838     		ldr r0, [r7]

#568					SUB		T_tolleranza_inverno	{LNXT:145|-1|-1}
(*) REAL
005BB4E0  F85F 7188		ldr r7, [pc, #-392] ; 0x20418E44
005BB4E4  683F     		ldr r7, [r7]
005BB4E6  B082     		sub sp, sp, #8
005BB4E8  F8CD 1000		str r1, [sp]
005BB4EC  4639     		mov r1, r7
005BB4EE  F85F 41CC		ldr r4, [pc, #-460] ; 0x4B257F
005BB4F2  F044 0401		orr r4, r4, #1
005BB4F6  47A0     		blx r4
005BB4F8  F8DD 1000		ldr r1, [sp]
005BB4FC  B002     		add sp, sp, #8

#569					)	{LNXT:145|-1|-1}
(*) REAL
005BB4FE  4607     		mov r7, r0
005BB500  F8DD 0000		ldr r0, [sp]
005BB504  B002     		add sp, sp, #8
005BB506  B082     		sub sp, sp, #8
005BB508  F8CD 1000		str r1, [sp]
005BB50C  4639     		mov r1, r7
005BB50E  F8DF 4090		ldr r4, [pc, #+144] ; 0x4B25CD
005BB512  F044 0401		orr r4, r4, #1
005BB516  47A0     		blx r4
005BB518  F8DD 1000		ldr r1, [sp]
005BB51C  B002     		add sp, sp, #8

#570					JMPCN	$label35	{LNXT:145|146|1}
(-) BOOL
005BB51E  2800     		cmp r0, #0
005BB520  D008     		beq #16 ; 0x005BB534


#571		
#572					(* THEN *)
#573		
#574						(* Comando_caldaia := TRUE; *)
#575						MOVE		TRUE,Comando_caldaia	{LNXT:146|147|-1}
(*) BOOL
005BB524  2001     		mov r0, #1 ; 1
005BB526  F85F 71BC		ldr r7, [pc, #-444] ; 0x2041A198
005BB52A  7038     		strb r0, [r7]

#576		
#577						(* Fase := 5; *)
#578						MOVE		5,Fase	{LNXT:147|1|-1}
(*) BOOL
005BB52C  2005     		mov r0, #5 ; 5
005BB52E  F85F 71F4		ldr r7, [pc, #-500] ; 0x20414A16
005BB532  8038     		strh r0, [r7]

#579		
#580		$label35:
#581					(* END_IF *)
#582		
#583		$label2:
#584		
#585				(* END_CASE *)
#586				JMP		$label1	{LNXT:1|3|152}
(-) INT
005BB534  E033     		b #102 ; 0x005BB59E


#587		$label0:
#588		
#589			(* ELSIF CalendarOnOff XOR NOT Estate_Inverno *)
#590			LD		Estate_Inverno	{LNXT:152|-1|-1}
(*) UNDEF
005BB538  F85F 71E8		ldr r7, [pc, #-488] ; 0x20418D78
005BB53C  7838     		ldrb r0, [r7]

#591			NOT	{LNXT:152|-1|-1}
(*) BOOL
005BB53E  2800     		cmp r0, #0
005BB540  BF08 2001		eqmov r0, #1
005BB544  BF18 2000		nemov r0, #0

#592			XOR(		CalendarOnOff	{LNXT:152|-1|-1}
(*) BOOL
005BB548  B082     		sub sp, sp, #8
005BB54A  F8CD 0000		str r0, [sp]
005BB54E  F85F 7218		ldr r7, [pc, #-536] ; 0x20414A15
005BB552  7838     		ldrb r0, [r7]

#593			NOT	{LNXT:152|-1|-1}
(*) BOOL
005BB554  2800     		cmp r0, #0
005BB556  BF08 2001		eqmov r0, #1
005BB55A  BF18 2000		nemov r0, #0

#594			)	{LNXT:152|-1|-1}
(*) BOOL
005BB55E  4607     		mov r7, r0
005BB560  F8DD 0000		ldr r0, [sp]
005BB564  B002     		add sp, sp, #8
005BB566  4078     		eor r0, r0, r7

#595			JMPCN	$label1	{LNXT:152|153|1}
(-) BOOL
005BB568  2800     		cmp r0, #0
005BB56A  D018     		beq #48 ; 0x005BB59E


#596		
#597			(* THEN *)
#598		
#599				(* Fase :=0; *)
#600				MOVE		0,Fase	{LNXT:153|154|-1}
(*) BOOL
005BB56E  2000     		mov r0, #0 ; 0
005BB570  F85F 7238		ldr r7, [pc, #-568] ; 0x20414A16
005BB574  8038     		strh r0, [r7]

#601		
#602				(* Delay.IN:=FALSE; *)
#603				MOVE		FALSE,Delay.IN	{LNXT:154|155|-1}
(*) INT
005BB576  2000     		mov r0, #0 ; 0
005BB578  F85F 7234		ldr r7, [pc, #-564] ; 0x20414A54
005BB57C  7038     		strb r0, [r7]

#604		
#605				(* Comando_caldaia := FALSE; *)
#606				MOVE		FALSE,Comando_caldaia	{LNXT:155|156|-1}
(*) BOOL
005BB57E  2000     		mov r0, #0 ; 0
005BB580  F85F 7218		ldr r7, [pc, #-536] ; 0x2041A198
005BB584  7038     		strb r0, [r7]

#607		
#608				(* Comando_pompa_UTA := FALSE; *)
#609				MOVE		FALSE,Comando_pompa_UTA	{LNXT:156|157|-1}
(*) BOOL
005BB586  2000     		mov r0, #0 ; 0
005BB588  F85F 7218		ldr r7, [pc, #-536] ; 0x2041A19A
005BB58C  7038     		strb r0, [r7]

#610		
#611				(* Comando_PdC := FALSE; *)
#612				MOVE		FALSE,Comando_PdC	{LNXT:157|158|-1}
(*) BOOL
005BB58E  2000     		mov r0, #0 ; 0
005BB590  F85F 7224		ldr r7, [pc, #-548] ; 0x2041A199
005BB594  7038     		strb r0, [r7]

#613		
#614				(* Comando_pompa_fancoil := FALSE; *)
#615				MOVE		FALSE,Comando_pompa_fancoil	{LNXT:158|1|-1}
(*) BOOL
005BB596  2000     		mov r0, #0 ; 0
005BB598  F85F 7224		ldr r7, [pc, #-548] ; 0x2041A19B
005BB59C  7038     		strb r0, [r7]

005BB59E  E001     		b #2

005BB5A0  004B25CD		; 0x004B25CD

END_PROGRAM
**************************************************
	List program: Controllo_HVAC_estate
**************************************************

PROGRAM Controllo_HVAC_estate

        VAR
Fase : INT := 0;
Delay : eTON;
Delay1 : eTON;
Delay2 : eTON;
Delay3 : eTON;
	END_VAR

END_PROGRAM

#0		{SRC:Controllo_HVAC_estate}
#1		(*$WAITSWITCH$*)
#2		
#3		
#4			(* IF Estate_Inverno AND (CalendarOnOff OR Automatico_Manuale *)
#5			LD		CalendarOnOff	{LNXT:1|-1|-1}
(*) UNDEF
005BB5A4  F8DF 75BC		ldr r7, [pc, #+1468] ; 0x20414A15
005BB5A8  7838     		ldrb r0, [r7]

#6			OR		Automatico_Manuale	{LNXT:1|-1|-1}
(*) BOOL
005BB5AA  F8DF 75D8		ldr r7, [pc, #+1496] ; 0x20418D79
005BB5AE  783F     		ldrb r7, [r7]
005BB5B0  4338     		orr r0, r0, r7

#7			AND(		Estate_Inverno	{LNXT:1|-1|-1}
(*) BOOL
005BB5B2  B082     		sub sp, sp, #8
005BB5B4  F8CD 0000		str r0, [sp]
005BB5B8  F8DF 75C4		ldr r7, [pc, #+1476] ; 0x20418D78
005BB5BC  7838     		ldrb r0, [r7]

#8			NOT	{LNXT:1|-1|-1}
(*) BOOL
005BB5BE  2800     		cmp r0, #0
005BB5C0  BF08 2001		eqmov r0, #1
005BB5C4  BF18 2000		nemov r0, #0

#9			)	{LNXT:1|-1|-1}
(*) BOOL
005BB5C8  4607     		mov r7, r0
005BB5CA  F8DD 0000		ldr r0, [sp]
005BB5CE  B002     		add sp, sp, #8
005BB5D0  4038     		and r0, r0, r7

#10			JMPCN	$label0	{LNXT:1|3|84}
(-) BOOL
005BB5D2  2800     		cmp r0, #0
005BB5D4  F000 8297		beq #1326 ; 0x005BBB06


#11		
#12			(* THEN *)
#13		
#14				(* Delay.PT := 20000; *)
#15				MOVE		20000,Delay.PT	{LNXT:3|4|-1}
(*) BOOL
005BB5D8  F8DF 7580		ldr r7, [pc, #+1408] ; 0x5BA0D0
005BB5DC  8838     		ldrh r0, [r7]
005BB5DE  F8DF 7594		ldr r7, [pc, #+1428] ; 0x20414A6C
005BB5E2  6038     		str r0, [r7]

#16		
#17				(* Delay *)
#18				CAL		Delay	{LNXT:4|8|-1}
(*) UINT
005BB5E4  E92D 0021		stmdb sp!, { r0, r5 }
005BB5E8  F8DF 7580		ldr r7, [pc, #+1408] ; 0x20414A64
005BB5EC  463D     		mov r5, r7
005BB5EE  F8DF 4570		ldr r4, [pc, #+1392] ; 0x5BA178
005BB5F2  F044 0401		orr r4, r4, #1
005BB5F6  47A0     		blx r4
005BB5F8  E8BD 0021		ldmia sp!, { r0, r5 }

#19		
#20		
#21				(* CASE Fase OF *)
#22		
#23				(* 0: *)
#24				LD		Fase	{LNXT:10|-1|-1}
(*) UNDEF
005BB5FC  F8DF 757C		ldr r7, [pc, #+1404] ; 0x20414A78
005BB600  F9B7 0000		ldrsh r0, [r7]

#25				EQ		0	{LNXT:10|-1|-1}
(*) INT
005BB604  2800     		cmp r0, #0
005BB606  BF18 2000		nemov r0, #0
005BB60A  BF08 2001		eqmov r0, #1

#26				JMPC		$label3	{LNXT:10|11|25}
(-) BOOL
005BB60E  2800     		cmp r0, #0
005BB610  D126     		bne #76 ; 0x005BB660


#27		
#28				(* 1: *)
#29				LD		Fase	{LNXT:25|-1|-1}
(*) UNDEF
005BB614  F8DF 7564		ldr r7, [pc, #+1380] ; 0x20414A78
005BB618  F9B7 0000		ldrsh r0, [r7]

#30				EQ		1	{LNXT:25|-1|-1}
(*) INT
005BB61C  2801     		cmp r0, #1
005BB61E  BF18 2000		nemov r0, #0
005BB622  BF08 2001		eqmov r0, #1

#31				JMPC		$label4	{LNXT:25|26|46}
(-) BOOL
005BB626  2800     		cmp r0, #0
005BB628  D143     		bne #134 ; 0x005BB6B2


#32		
#33				(* 2: *)
#34				LD		Fase	{LNXT:46|-1|-1}
(*) UNDEF
005BB62C  F8DF 754C		ldr r7, [pc, #+1356] ; 0x20414A78
005BB630  F9B7 0000		ldrsh r0, [r7]

#35				EQ		2	{LNXT:46|-1|-1}
(*) INT
005BB634  2802     		cmp r0, #2
005BB636  BF18 2000		nemov r0, #0
005BB63A  BF08 2001		eqmov r0, #1

#36				JMPC		$label5	{LNXT:46|47|62}
(-) BOOL
005BB63E  2800     		cmp r0, #0
005BB640  F040 812D		bne #602 ; 0x005BB89E


#37		
#38				(* 3: *)
#39				LD		Fase	{LNXT:62|-1|-1}
(*) UNDEF
005BB644  F8DF 7534		ldr r7, [pc, #+1332] ; 0x20414A78
005BB648  F9B7 0000		ldrsh r0, [r7]

#40				EQ		3	{LNXT:62|-1|-1}
(*) INT
005BB64C  2803     		cmp r0, #3
005BB64E  BF18 2000		nemov r0, #0
005BB652  BF08 2001		eqmov r0, #1

#41				JMPC		$label6	{LNXT:62|63|1}
(-) BOOL
005BB656  2800     		cmp r0, #0
005BB658  F040 8197		bne #814 ; 0x005BB98A


#42				JMP		$label2	{LNXT:62|63|1}
(-) BOOL
005BB65C  E251     		b #1186 ; 0x005BBB02


#43		
#44				(* Istruzioni di ciascun CASE: *)
#45		
#46		$label3:
#47		
#48					(* IF Blocco_PdC *)
#49					LD		Blocco_PdC	{LNXT:11|-1|-1}
(*) UNDEF
005BB660  F8DF 752C		ldr r7, [pc, #+1324] ; 0x20419F7B
005BB664  7838     		ldrb r0, [r7]

#50					JMPCN	$label7	{LNXT:11|13|19}
(-) BOOL
005BB666  2800     		cmp r0, #0
005BB668  D012     		beq #36 ; 0x005BB690


#51		
#52					(* THEN *)
#53		
#54						(* Comando_pompa_fancoil := FALSE; *)
#55						MOVE		FALSE,Comando_pompa_fancoil	{LNXT:13|14|-1}
(*) BOOL
005BB66C  2000     		mov r0, #0 ; 0
005BB66E  F8DF 752C		ldr r7, [pc, #+1324] ; 0x2041A19B
005BB672  7038     		strb r0, [r7]

#56		
#57						(* Comando_PdC := FALSE; *)
#58						MOVE		FALSE,Comando_PdC	{LNXT:14|15|-1}
(*) BOOL
005BB674  2000     		mov r0, #0 ; 0
005BB676  F8DF 751C		ldr r7, [pc, #+1308] ; 0x2041A199
005BB67A  7038     		strb r0, [r7]

#59		
#60						(* Comando_pompa_UTA := FALSE; *)
#61						MOVE		FALSE,Comando_pompa_UTA	{LNXT:15|17|-1}
(*) BOOL
005BB67C  2000     		mov r0, #0 ; 0
005BB67E  F8DF 7518		ldr r7, [pc, #+1304] ; 0x2041A19A
005BB682  7038     		strb r0, [r7]

#62		
#63						(* Fase := 0; *)
#64						MOVE		0,Fase	{LNXT:17|1|-1}
(*) BOOL
005BB684  2000     		mov r0, #0 ; 0
005BB686  F8DF 74F4		ldr r7, [pc, #+1268] ; 0x20414A78
005BB68A  8038     		strh r0, [r7]

#65						JMP		$label8	{LNXT:11|13|19}
(-) INT
005BB68C  E00F     		b #30 ; 0x005BB6AE


#66		$label7:
#67		
#68					(* ELSIF Blocco_PdC *)
#69					LD		Blocco_PdC	{LNXT:19|-1|-1}
(*) UNDEF
005BB690  F8DF 74FC		ldr r7, [pc, #+1276] ; 0x20419F7B
005BB694  7838     		ldrb r0, [r7]

#70					NOT	{LNXT:19|-1|-1}
(*) BOOL
005BB696  2800     		cmp r0, #0
005BB698  BF08 2001		eqmov r0, #1
005BB69C  BF18 2000		nemov r0, #0

#71					JMPCN	$label8	{LNXT:19|21|1}
(-) BOOL
005BB6A0  2800     		cmp r0, #0
005BB6A2  D004     		beq #8 ; 0x005BB6AE


#72		
#73					(* THEN *)
#74		
#75						(* Fase := 1; *)
#76						MOVE		1,Fase	{LNXT:21|1|-1}
(*) BOOL
005BB6A6  2001     		mov r0, #1 ; 1
005BB6A8  F8DF 74D0		ldr r7, [pc, #+1232] ; 0x20414A78
005BB6AC  8038     		strh r0, [r7]

#77		
#78		$label8:
#79					(* END_IF *)
#80					JMP		$label2	{LNXT:1|1|-1}
(-) INT
005BB6AE  E228     		b #1104 ; 0x005BBB02


#81		
#82		$label4:
#83					(* Comando_pompa_fancoil := FALSE; *)
#84					MOVE		FALSE,Comando_pompa_fancoil	{LNXT:26|27|-1}
(*) INT
005BB6B2  2000     		mov r0, #0 ; 0
005BB6B4  F8DF 74E4		ldr r7, [pc, #+1252] ; 0x2041A19B
005BB6B8  7038     		strb r0, [r7]

#85		
#86					(* Comando_PdC := TRUE; *)
#87					MOVE		TRUE,Comando_PdC	{LNXT:27|28|-1}
(*) BOOL
005BB6BA  2001     		mov r0, #1 ; 1
005BB6BC  F8DF 74D4		ldr r7, [pc, #+1236] ; 0x2041A199
005BB6C0  7038     		strb r0, [r7]

#88		
#89					(* Comando_pompa_UTA := FALSE; *)
#90					MOVE		FALSE,Comando_pompa_UTA	{LNXT:28|30|-1}
(*) BOOL
005BB6C2  2000     		mov r0, #0 ; 0
005BB6C4  F8DF 74D0		ldr r7, [pc, #+1232] ; 0x2041A19A
005BB6C8  7038     		strb r0, [r7]

#91		
#92		
#93					(* IF Temp_accumulo > Temp_setpoint_estate + T_tolleranza_estate AND NOT Blocco_PdC *)
#94					LD		Blocco_PdC	{LNXT:30|-1|-1}
(*) UNDEF
005BB6CA  F8DF 74C4		ldr r7, [pc, #+1220] ; 0x20419F7B
005BB6CE  7838     		ldrb r0, [r7]

#95					NOT	{LNXT:30|-1|-1}
(*) BOOL
005BB6D0  2800     		cmp r0, #0
005BB6D2  BF08 2001		eqmov r0, #1
005BB6D6  BF18 2000		nemov r0, #0

#96					AND(		Temp_accumulo	{LNXT:30|-1|-1}
(*) BOOL
005BB6DA  B082     		sub sp, sp, #8
005BB6DC  F8CD 0000		str r0, [sp]
005BB6E0  F8DF 7484		ldr r7, [pc, #+1156] ; 0x20414A30
005BB6E4  6838     		ldr r0, [r7]

#97					GT(		Temp_setpoint_estate	{LNXT:30|-1|-1}
(*) REAL
005BB6E6  B082     		sub sp, sp, #8
005BB6E8  F8CD 0000		str r0, [sp]
005BB6EC  F8DF 7498		ldr r7, [pc, #+1176] ; 0x20418E40
005BB6F0  6838     		ldr r0, [r7]

#98					ADD		T_tolleranza_estate	{LNXT:30|-1|-1}
(*) REAL
005BB6F2  F8DF 7498		ldr r7, [pc, #+1176] ; 0x20418E4C
005BB6F6  683F     		ldr r7, [r7]
005BB6F8  B082     		sub sp, sp, #8
005BB6FA  F8CD 1000		str r1, [sp]
005BB6FE  4639     		mov r1, r7
005BB700  F8DF 444C		ldr r4, [pc, #+1100] ; 0x4B256D
005BB704  F044 0401		orr r4, r4, #1
005BB708  47A0     		blx r4
005BB70A  F8DD 1000		ldr r1, [sp]
005BB70E  B002     		add sp, sp, #8

#99					)	{LNXT:30|-1|-1}
(*) REAL
005BB710  4607     		mov r7, r0
005BB712  F8DD 0000		ldr r0, [sp]
005BB716  B002     		add sp, sp, #8
005BB718  B082     		sub sp, sp, #8
005BB71A  F8CD 1000		str r1, [sp]
005BB71E  4639     		mov r1, r7
005BB720  F8DF 4430		ldr r4, [pc, #+1072] ; 0x4B25B5
005BB724  F044 0401		orr r4, r4, #1
005BB728  47A0     		blx r4
005BB72A  F8DD 1000		ldr r1, [sp]
005BB72E  B002     		add sp, sp, #8

#100					)	{LNXT:30|-1|-1}
(*) BOOL
005BB730  4607     		mov r7, r0
005BB732  F8DD 0000		ldr r0, [sp]
005BB736  B002     		add sp, sp, #8
005BB738  4038     		and r0, r0, r7

#101					JMPCN	$label9	{LNXT:30|31|39}
(-) BOOL
005BB73A  2800     		cmp r0, #0
005BB73C  D05E     		beq #188 ; 0x005BB7FC


#102		
#103					(* THEN *)
#104		
#105						(* Delay.IN:=TRUE; *)
#106						MOVE		TRUE,Delay.IN	{LNXT:31|32|-1}
(*) BOOL
005BB740  2001     		mov r0, #1 ; 1
005BB742  F8DF 742C		ldr r7, [pc, #+1068] ; 0x20414A68
005BB746  7038     		strb r0, [r7]

#107		
#108		
#109						(* IF Delay.Q AND Temp_accumulo < Temp_setpoint_estate + T_tolleranza_estate AND NOT Blocco_PdC *)
#110						LD		Blocco_PdC	{LNXT:32|-1|-1}
(*) UNDEF
005BB748  F8DF 7444		ldr r7, [pc, #+1092] ; 0x20419F7B
005BB74C  7838     		ldrb r0, [r7]

#111						NOT	{LNXT:32|-1|-1}
(*) BOOL
005BB74E  2800     		cmp r0, #0
005BB750  BF08 2001		eqmov r0, #1
005BB754  BF18 2000		nemov r0, #0

#112						AND(		Temp_accumulo	{LNXT:32|-1|-1}
(*) BOOL
005BB758  B082     		sub sp, sp, #8
005BB75A  F8CD 0000		str r0, [sp]
005BB75E  F8DF 7408		ldr r7, [pc, #+1032] ; 0x20414A30
005BB762  6838     		ldr r0, [r7]

#113						LT(		Temp_setpoint_estate	{LNXT:32|-1|-1}
(*) REAL
005BB764  B082     		sub sp, sp, #8
005BB766  F8CD 0000		str r0, [sp]
005BB76A  F8DF 741C		ldr r7, [pc, #+1052] ; 0x20418E40
005BB76E  6838     		ldr r0, [r7]

#114						ADD		T_tolleranza_estate	{LNXT:32|-1|-1}
(*) REAL
005BB770  F8DF 7418		ldr r7, [pc, #+1048] ; 0x20418E4C
005BB774  683F     		ldr r7, [r7]
005BB776  B082     		sub sp, sp, #8
005BB778  F8CD 1000		str r1, [sp]
005BB77C  4639     		mov r1, r7
005BB77E  F8DF 43D0		ldr r4, [pc, #+976] ; 0x4B256D
005BB782  F044 0401		orr r4, r4, #1
005BB786  47A0     		blx r4
005BB788  F8DD 1000		ldr r1, [sp]
005BB78C  B002     		add sp, sp, #8

#115						)	{LNXT:32|-1|-1}
(*) REAL
005BB78E  4607     		mov r7, r0
005BB790  F8DD 0000		ldr r0, [sp]
005BB794  B002     		add sp, sp, #8
005BB796  B082     		sub sp, sp, #8
005BB798  F8CD 1000		str r1, [sp]
005BB79C  4639     		mov r1, r7
005BB79E  F8DF 43B8		ldr r4, [pc, #+952] ; 0x4B25FD
005BB7A2  F044 0401		orr r4, r4, #1
005BB7A6  47A0     		blx r4
005BB7A8  F8DD 1000		ldr r1, [sp]
005BB7AC  B002     		add sp, sp, #8

#116						AND		Delay.Q	{LNXT:32|-1|-1}
(*) BOOL
005BB7AE  F8DF 73C8		ldr r7, [pc, #+968] ; 0x20414A70
005BB7B2  783F     		ldrb r7, [r7]
005BB7B4  4038     		and r0, r0, r7

#117						)	{LNXT:32|-1|-1}
(*) BOOL
005BB7B6  4607     		mov r7, r0
005BB7B8  F8DD 0000		ldr r0, [sp]
005BB7BC  B002     		add sp, sp, #8
005BB7BE  4038     		and r0, r0, r7

#118						JMPCN	$label12	{LNXT:32|33|36}
(-) BOOL
005BB7C0  2800     		cmp r0, #0
005BB7C2  D00A     		beq #20 ; 0x005BB7DA


#119		
#120						(* THEN *)
#121		
#122							(* Delay.IN:=FALSE; *)
#123							MOVE		FALSE,Delay.IN	{LNXT:33|34|-1}
(*) BOOL
005BB7C6  2000     		mov r0, #0 ; 0
005BB7C8  F8DF 73A4		ldr r7, [pc, #+932] ; 0x20414A68
005BB7CC  7038     		strb r0, [r7]

#124		
#125							(* Fase := 3; *)
#126							MOVE		3,Fase	{LNXT:34|1|-1}
(*) BOOL
005BB7CE  2003     		mov r0, #3 ; 3
005BB7D0  F8DF 73A8		ldr r7, [pc, #+936] ; 0x20414A78
005BB7D4  8038     		strh r0, [r7]

#127							JMP		$label13	{LNXT:32|33|36}
(-) INT
005BB7D6  E00F     		b #30 ; 0x005BB7F8


#128		$label12:
#129		
#130						(* ELSE *)
#131		
#132							(* Delay.IN:=NOT Delay.Q; *)
#133							LD		Delay.Q	{LNXT:36|37|-1}
(*) UNDEF
005BB7DA  F8DF 739C		ldr r7, [pc, #+924] ; 0x20414A70
005BB7DE  7838     		ldrb r0, [r7]

#134							NOT	{LNXT:36|37|-1}
(*) BOOL
005BB7E0  2800     		cmp r0, #0
005BB7E2  BF08 2001		eqmov r0, #1
005BB7E6  BF18 2000		nemov r0, #0

#135							ST		Delay.IN	{LNXT:36|37|-1}
(*) BOOL
005BB7EA  F8DF 7384		ldr r7, [pc, #+900] ; 0x20414A68
005BB7EE  7038     		strb r0, [r7]

#136		
#137							(* Fase := 1; *)
#138							MOVE		1,Fase	{LNXT:37|1|-1}
(*) BOOL
005BB7F0  2001     		mov r0, #1 ; 1
005BB7F2  F8DF 7388		ldr r7, [pc, #+904] ; 0x20414A78
005BB7F6  8038     		strh r0, [r7]

#139		
#140		$label13:
#141						(* END_IF *)
#142						JMP		$label11	{LNXT:30|31|39}
(-) INT
005BB7F8  E04F     		b #158 ; 0x005BB89A


#143		$label9:
#144		
#145					(* ELSIF Temp_accumulo < Temp_setpoint_estate + T_tolleranza_estate AND NOT Blocco_PdC *)
#146					LD		Blocco_PdC	{LNXT:39|-1|-1}
(*) UNDEF
005BB7FC  F8DF 7390		ldr r7, [pc, #+912] ; 0x20419F7B
005BB800  7838     		ldrb r0, [r7]

#147					NOT	{LNXT:39|-1|-1}
(*) BOOL
005BB802  2800     		cmp r0, #0
005BB804  BF08 2001		eqmov r0, #1
005BB808  BF18 2000		nemov r0, #0

#148					AND(		Temp_accumulo	{LNXT:39|-1|-1}
(*) BOOL
005BB80C  B082     		sub sp, sp, #8
005BB80E  F8CD 0000		str r0, [sp]
005BB812  F8DF 7354		ldr r7, [pc, #+852] ; 0x20414A30
005BB816  6838     		ldr r0, [r7]

#149					LT(		Temp_setpoint_estate	{LNXT:39|-1|-1}
(*) REAL
005BB818  B082     		sub sp, sp, #8
005BB81A  F8CD 0000		str r0, [sp]
005BB81E  F8DF 7368		ldr r7, [pc, #+872] ; 0x20418E40
005BB822  6838     		ldr r0, [r7]

#150					ADD		T_tolleranza_estate	{LNXT:39|-1|-1}
(*) REAL
005BB824  F8DF 7364		ldr r7, [pc, #+868] ; 0x20418E4C
005BB828  683F     		ldr r7, [r7]
005BB82A  B082     		sub sp, sp, #8
005BB82C  F8CD 1000		str r1, [sp]
005BB830  4639     		mov r1, r7
005BB832  F8DF 431C		ldr r4, [pc, #+796] ; 0x4B256D
005BB836  F044 0401		orr r4, r4, #1
005BB83A  47A0     		blx r4
005BB83C  F8DD 1000		ldr r1, [sp]
005BB840  B002     		add sp, sp, #8

#151					)	{LNXT:39|-1|-1}
(*) REAL
005BB842  4607     		mov r7, r0
005BB844  F8DD 0000		ldr r0, [sp]
005BB848  B002     		add sp, sp, #8
005BB84A  B082     		sub sp, sp, #8
005BB84C  F8CD 1000		str r1, [sp]
005BB850  4639     		mov r1, r7
005BB852  F8DF 4304		ldr r4, [pc, #+772] ; 0x4B25FD
005BB856  F044 0401		orr r4, r4, #1
005BB85A  47A0     		blx r4
005BB85C  F8DD 1000		ldr r1, [sp]
005BB860  B002     		add sp, sp, #8

#152					)	{LNXT:39|-1|-1}
(*) BOOL
005BB862  4607     		mov r7, r0
005BB864  F8DD 0000		ldr r0, [sp]
005BB868  B002     		add sp, sp, #8
005BB86A  4038     		and r0, r0, r7

#153					JMPCN	$label10	{LNXT:39|40|42}
(-) BOOL
005BB86C  2800     		cmp r0, #0
005BB86E  D00A     		beq #20 ; 0x005BB886


#154		
#155					(* THEN *)
#156		
#157						(* Delay.IN:=FALSE; *)
#158						MOVE		FALSE,Delay.IN	{LNXT:40|41|-1}
(*) BOOL
005BB872  2000     		mov r0, #0 ; 0
005BB874  F8DF 72F8		ldr r7, [pc, #+760] ; 0x20414A68
005BB878  7038     		strb r0, [r7]

#159		
#160						(* Fase := 2; *)
#161						MOVE		2,Fase	{LNXT:41|1|-1}
(*) BOOL
005BB87A  2002     		mov r0, #2 ; 2
005BB87C  F8DF 72FC		ldr r7, [pc, #+764] ; 0x20414A78
005BB880  8038     		strh r0, [r7]

#162						JMP		$label11	{LNXT:39|40|42}
(-) INT
005BB882  E00A     		b #20 ; 0x005BB89A


#163		$label10:
#164		
#165					(* ELSIF Blocco_PdC *)
#166					LD		Blocco_PdC	{LNXT:42|-1|-1}
(*) UNDEF
005BB886  F8DF 7308		ldr r7, [pc, #+776] ; 0x20419F7B
005BB88A  7838     		ldrb r0, [r7]

#167					JMPCN	$label11	{LNXT:42|43|1}
(-) BOOL
005BB88C  2800     		cmp r0, #0
005BB88E  D004     		beq #8 ; 0x005BB89A


#168		
#169					(* THEN *)
#170		
#171						(* Fase := 0; *)
#172						MOVE		0,Fase	{LNXT:43|1|-1}
(*) BOOL
005BB892  2000     		mov r0, #0 ; 0
005BB894  F8DF 72E4		ldr r7, [pc, #+740] ; 0x20414A78
005BB898  8038     		strh r0, [r7]

#173		
#174		$label11:
#175					(* END_IF *)
#176					JMP		$label2	{LNXT:26|1|-1}
(-) INT
005BB89A  E132     		b #612 ; 0x005BBB02


#177		
#178		$label5:
#179					(* Comando_pompa_fancoil := TRUE; *)
#180					MOVE		TRUE,Comando_pompa_fancoil	{LNXT:47|48|-1}
(*) INT
005BB89E  2001     		mov r0, #1 ; 1
005BB8A0  F8DF 72F8		ldr r7, [pc, #+760] ; 0x2041A19B
005BB8A4  7038     		strb r0, [r7]

#181		
#182					(* Comando_PdC := TRUE; *)
#183					MOVE		TRUE,Comando_PdC	{LNXT:48|49|-1}
(*) BOOL
005BB8A6  2001     		mov r0, #1 ; 1
005BB8A8  F8DF 72E8		ldr r7, [pc, #+744] ; 0x2041A199
005BB8AC  7038     		strb r0, [r7]

#184		
#185					(* Comando_pompa_UTA := FALSE; *)
#186					MOVE		FALSE,Comando_pompa_UTA	{LNXT:49|51|-1}
(*) BOOL
005BB8AE  2000     		mov r0, #0 ; 0
005BB8B0  F8DF 72E4		ldr r7, [pc, #+740] ; 0x2041A19A
005BB8B4  7038     		strb r0, [r7]

#187		
#188					(* Delay.IN:=TRUE; *)
#189					MOVE		TRUE,Delay.IN	{LNXT:51|52|-1}
(*) BOOL
005BB8B6  2001     		mov r0, #1 ; 1
005BB8B8  F8DF 72B4		ldr r7, [pc, #+692] ; 0x20414A68
005BB8BC  7038     		strb r0, [r7]

#190		
#191		
#192					(* IF Delay.Q AND Temp_accumulo < Temp_setpoint_estate + T_tolleranza_estate AND NOT Blocco_PdC *)
#193					LD		Blocco_PdC	{LNXT:52|-1|-1}
(*) UNDEF
005BB8BE  F8DF 72D0		ldr r7, [pc, #+720] ; 0x20419F7B
005BB8C2  7838     		ldrb r0, [r7]

#194					NOT	{LNXT:52|-1|-1}
(*) BOOL
005BB8C4  2800     		cmp r0, #0
005BB8C6  BF08 2001		eqmov r0, #1
005BB8CA  BF18 2000		nemov r0, #0

#195					AND(		Temp_accumulo	{LNXT:52|-1|-1}
(*) BOOL
005BB8CE  B082     		sub sp, sp, #8
005BB8D0  F8CD 0000		str r0, [sp]
005BB8D4  F8DF 7290		ldr r7, [pc, #+656] ; 0x20414A30
005BB8D8  6838     		ldr r0, [r7]

#196					LT(		Temp_setpoint_estate	{LNXT:52|-1|-1}
(*) REAL
005BB8DA  B082     		sub sp, sp, #8
005BB8DC  F8CD 0000		str r0, [sp]
005BB8E0  F8DF 72A4		ldr r7, [pc, #+676] ; 0x20418E40
005BB8E4  6838     		ldr r0, [r7]

#197					ADD		T_tolleranza_estate	{LNXT:52|-1|-1}
(*) REAL
005BB8E6  F8DF 72A4		ldr r7, [pc, #+676] ; 0x20418E4C
005BB8EA  683F     		ldr r7, [r7]
005BB8EC  B082     		sub sp, sp, #8
005BB8EE  F8CD 1000		str r1, [sp]
005BB8F2  4639     		mov r1, r7
005BB8F4  F8DF 4258		ldr r4, [pc, #+600] ; 0x4B256D
005BB8F8  F044 0401		orr r4, r4, #1
005BB8FC  47A0     		blx r4
005BB8FE  F8DD 1000		ldr r1, [sp]
005BB902  B002     		add sp, sp, #8

#198					)	{LNXT:52|-1|-1}
(*) REAL
005BB904  4607     		mov r7, r0
005BB906  F8DD 0000		ldr r0, [sp]
005BB90A  B002     		add sp, sp, #8
005BB90C  B082     		sub sp, sp, #8
005BB90E  F8CD 1000		str r1, [sp]
005BB912  4639     		mov r1, r7
005BB914  F8DF 4240		ldr r4, [pc, #+576] ; 0x4B25FD
005BB918  F044 0401		orr r4, r4, #1
005BB91C  47A0     		blx r4
005BB91E  F8DD 1000		ldr r1, [sp]
005BB922  B002     		add sp, sp, #8

#199					AND		Delay.Q	{LNXT:52|-1|-1}
(*) BOOL
005BB924  F8DF 7250		ldr r7, [pc, #+592] ; 0x20414A70
005BB928  783F     		ldrb r7, [r7]
005BB92A  4038     		and r0, r0, r7

#200					)	{LNXT:52|-1|-1}
(*) BOOL
005BB92C  4607     		mov r7, r0
005BB92E  F8DD 0000		ldr r0, [sp]
005BB932  B002     		add sp, sp, #8
005BB934  4038     		and r0, r0, r7

#201					JMPCN	$label14	{LNXT:52|53|55}
(-) BOOL
005BB936  2800     		cmp r0, #0
005BB938  D00A     		beq #20 ; 0x005BB950


#202		
#203					(* THEN *)
#204		
#205						(* Delay.IN:=FALSE; *)
#206						MOVE		FALSE,Delay.IN	{LNXT:53|54|-1}
(*) BOOL
005BB93C  2000     		mov r0, #0 ; 0
005BB93E  F8DF 7230		ldr r7, [pc, #+560] ; 0x20414A68
005BB942  7038     		strb r0, [r7]

#207		
#208						(* Fase := 3; *)
#209						MOVE		3,Fase	{LNXT:54|1|-1}
(*) BOOL
005BB944  2003     		mov r0, #3 ; 3
005BB946  F8DF 7234		ldr r7, [pc, #+564] ; 0x20414A78
005BB94A  8038     		strh r0, [r7]

#210						JMP		$label16	{LNXT:52|53|55}
(-) INT
005BB94C  E01B     		b #54 ; 0x005BB986


#211		$label14:
#212		
#213					(* ELSIF Blocco_PdC *)
#214					LD		Blocco_PdC	{LNXT:55|-1|-1}
(*) UNDEF
005BB950  F8DF 723C		ldr r7, [pc, #+572] ; 0x20419F7B
005BB954  7838     		ldrb r0, [r7]

#215					JMPCN	$label15	{LNXT:55|56|58}
(-) BOOL
005BB956  2800     		cmp r0, #0
005BB958  D006     		beq #12 ; 0x005BB968


#216		
#217					(* THEN *)
#218		
#219						(* Fase := 0; *)
#220						MOVE		0,Fase	{LNXT:56|1|-1}
(*) BOOL
005BB95C  2000     		mov r0, #0 ; 0
005BB95E  F8DF 721C		ldr r7, [pc, #+540] ; 0x20414A78
005BB962  8038     		strh r0, [r7]

#221						JMP		$label16	{LNXT:55|56|58}
(-) INT
005BB964  E00F     		b #30 ; 0x005BB986


#222		$label15:
#223		
#224					(* ELSE *)
#225		
#226						(* Delay.IN:=NOT Delay.Q; *)
#227						LD		Delay.Q	{LNXT:58|59|-1}
(*) UNDEF
005BB968  F8DF 720C		ldr r7, [pc, #+524] ; 0x20414A70
005BB96C  7838     		ldrb r0, [r7]

#228						NOT	{LNXT:58|59|-1}
(*) BOOL
005BB96E  2800     		cmp r0, #0
005BB970  BF08 2001		eqmov r0, #1
005BB974  BF18 2000		nemov r0, #0

#229						ST		Delay.IN	{LNXT:58|59|-1}
(*) BOOL
005BB978  F8DF 71F4		ldr r7, [pc, #+500] ; 0x20414A68
005BB97C  7038     		strb r0, [r7]

#230		
#231						(* Fase :=2; *)
#232						MOVE		2,Fase	{LNXT:59|1|-1}
(*) BOOL
005BB97E  2002     		mov r0, #2 ; 2
005BB980  F8DF 71F8		ldr r7, [pc, #+504] ; 0x20414A78
005BB984  8038     		strh r0, [r7]

#233		
#234		$label16:
#235					(* END_IF *)
#236					JMP		$label2	{LNXT:47|58|-1}
(-) INT
005BB986  E0BC     		b #376 ; 0x005BBB02


#237		
#238		$label6:
#239					(* Comando_pompa_fancoil := TRUE; *)
#240					MOVE		TRUE,Comando_pompa_fancoil	{LNXT:63|64|-1}
(*) INT
005BB98A  2001     		mov r0, #1 ; 1
005BB98C  F8DF 720C		ldr r7, [pc, #+524] ; 0x2041A19B
005BB990  7038     		strb r0, [r7]

#241		
#242					(* Comando_PdC := TRUE; *)
#243					MOVE		TRUE,Comando_PdC	{LNXT:64|65|-1}
(*) BOOL
005BB992  2001     		mov r0, #1 ; 1
005BB994  F8DF 71FC		ldr r7, [pc, #+508] ; 0x2041A199
005BB998  7038     		strb r0, [r7]

#244		
#245					(* Comando_pompa_UTA := TRUE; *)
#246					MOVE		TRUE,Comando_pompa_UTA	{LNXT:65|67|-1}
(*) BOOL
005BB99A  2001     		mov r0, #1 ; 1
005BB99C  F8DF 71F8		ldr r7, [pc, #+504] ; 0x2041A19A
005BB9A0  7038     		strb r0, [r7]

#247		
#248					(* Delay.IN := TRUE; *)
#249					MOVE		TRUE,Delay.IN	{LNXT:67|68|-1}
(*) BOOL
005BB9A2  2001     		mov r0, #1 ; 1
005BB9A4  F8DF 71C8		ldr r7, [pc, #+456] ; 0x20414A68
005BB9A8  7038     		strb r0, [r7]

#250		
#251		
#252					(* IF Temp_accumulo < Temp_setpoint_estate + T_tolleranza_estate AND NOT Blocco_PdC *)
#253					LD		Blocco_PdC	{LNXT:68|-1|-1}
(*) UNDEF
005BB9AA  F8DF 71E4		ldr r7, [pc, #+484] ; 0x20419F7B
005BB9AE  7838     		ldrb r0, [r7]

#254					NOT	{LNXT:68|-1|-1}
(*) BOOL
005BB9B0  2800     		cmp r0, #0
005BB9B2  BF08 2001		eqmov r0, #1
005BB9B6  BF18 2000		nemov r0, #0

#255					AND(		Temp_accumulo	{LNXT:68|-1|-1}
(*) BOOL
005BB9BA  B082     		sub sp, sp, #8
005BB9BC  F8CD 0000		str r0, [sp]
005BB9C0  F8DF 71A4		ldr r7, [pc, #+420] ; 0x20414A30
005BB9C4  6838     		ldr r0, [r7]

#256					LT(		Temp_setpoint_estate	{LNXT:68|-1|-1}
(*) REAL
005BB9C6  B082     		sub sp, sp, #8
005BB9C8  F8CD 0000		str r0, [sp]
005BB9CC  F8DF 71B8		ldr r7, [pc, #+440] ; 0x20418E40
005BB9D0  6838     		ldr r0, [r7]

#257					ADD		T_tolleranza_estate	{LNXT:68|-1|-1}
(*) REAL
005BB9D2  F8DF 71B8		ldr r7, [pc, #+440] ; 0x20418E4C
005BB9D6  683F     		ldr r7, [r7]
005BB9D8  B082     		sub sp, sp, #8
005BB9DA  F8CD 1000		str r1, [sp]
005BB9DE  4639     		mov r1, r7
005BB9E0  F8DF 416C		ldr r4, [pc, #+364] ; 0x4B256D
005BB9E4  F044 0401		orr r4, r4, #1
005BB9E8  47A0     		blx r4
005BB9EA  F8DD 1000		ldr r1, [sp]
005BB9EE  B002     		add sp, sp, #8

#258					)	{LNXT:68|-1|-1}
(*) REAL
005BB9F0  4607     		mov r7, r0
005BB9F2  F8DD 0000		ldr r0, [sp]
005BB9F6  B002     		add sp, sp, #8
005BB9F8  B082     		sub sp, sp, #8
005BB9FA  F8CD 1000		str r1, [sp]
005BB9FE  4639     		mov r1, r7
005BBA00  F8DF 4154		ldr r4, [pc, #+340] ; 0x4B25FD
005BBA04  F044 0401		orr r4, r4, #1
005BBA08  47A0     		blx r4
005BBA0A  F8DD 1000		ldr r1, [sp]
005BBA0E  B002     		add sp, sp, #8

#259					)	{LNXT:68|-1|-1}
(*) BOOL
005BBA10  4607     		mov r7, r0
005BBA12  F8DD 0000		ldr r0, [sp]
005BBA16  B002     		add sp, sp, #8
005BBA18  4038     		and r0, r0, r7

#260					JMPCN	$label17	{LNXT:68|69|71}
(-) BOOL
005BBA1A  2800     		cmp r0, #0
005BBA1C  D011     		beq #34 ; 0x005BBA42


#261		
#262					(* THEN *)
#263		
#264						(* Delay.IN := NOT Delay.Q; *)
#265						LD		Delay.Q	{LNXT:69|70|-1}
(*) UNDEF
005BBA20  F8DF 7154		ldr r7, [pc, #+340] ; 0x20414A70
005BBA24  7838     		ldrb r0, [r7]

#266						NOT	{LNXT:69|70|-1}
(*) BOOL
005BBA26  2800     		cmp r0, #0
005BBA28  BF08 2001		eqmov r0, #1
005BBA2C  BF18 2000		nemov r0, #0

#267						ST		Delay.IN	{LNXT:69|70|-1}
(*) BOOL
005BBA30  F8DF 713C		ldr r7, [pc, #+316] ; 0x20414A68
005BBA34  7038     		strb r0, [r7]

#268		
#269						(* Fase := 3; *)
#270						MOVE		3,Fase	{LNXT:70|1|-1}
(*) BOOL
005BBA36  2003     		mov r0, #3 ; 3
005BBA38  F8DF 7140		ldr r7, [pc, #+320] ; 0x20414A78
005BBA3C  8038     		strh r0, [r7]

#271						JMP		$label20	{LNXT:68|69|71}
(-) INT
005BBA3E  E060     		b #192 ; 0x005BBB02


#272		$label17:
#273		
#274					(* ELSIF Temp_accumulo > Temp_setpoint_estate + T_tolleranza_estate AND NOT Blocco_PdC *)
#275					LD		Blocco_PdC	{LNXT:71|-1|-1}
(*) UNDEF
005BBA42  F8DF 714C		ldr r7, [pc, #+332] ; 0x20419F7B
005BBA46  7838     		ldrb r0, [r7]

#276					NOT	{LNXT:71|-1|-1}
(*) BOOL
005BBA48  2800     		cmp r0, #0
005BBA4A  BF08 2001		eqmov r0, #1
005BBA4E  BF18 2000		nemov r0, #0

#277					AND(		Temp_accumulo	{LNXT:71|-1|-1}
(*) BOOL
005BBA52  B082     		sub sp, sp, #8
005BBA54  F8CD 0000		str r0, [sp]
005BBA58  F8DF 710C		ldr r7, [pc, #+268] ; 0x20414A30
005BBA5C  6838     		ldr r0, [r7]

#278					GT(		Temp_setpoint_estate	{LNXT:71|-1|-1}
(*) REAL
005BBA5E  B082     		sub sp, sp, #8
005BBA60  F8CD 0000		str r0, [sp]
005BBA64  F8DF 7120		ldr r7, [pc, #+288] ; 0x20418E40
005BBA68  6838     		ldr r0, [r7]

#279					ADD		T_tolleranza_estate	{LNXT:71|-1|-1}
(*) REAL
005BBA6A  F8DF 7120		ldr r7, [pc, #+288] ; 0x20418E4C
005BBA6E  683F     		ldr r7, [r7]
005BBA70  B082     		sub sp, sp, #8
005BBA72  F8CD 1000		str r1, [sp]
005BBA76  4639     		mov r1, r7
005BBA78  F8DF 40D4		ldr r4, [pc, #+212] ; 0x4B256D
005BBA7C  F044 0401		orr r4, r4, #1
005BBA80  47A0     		blx r4
005BBA82  F8DD 1000		ldr r1, [sp]
005BBA86  B002     		add sp, sp, #8

#280					)	{LNXT:71|-1|-1}
(*) REAL
005BBA88  4607     		mov r7, r0
005BBA8A  F8DD 0000		ldr r0, [sp]
005BBA8E  B002     		add sp, sp, #8
005BBA90  B082     		sub sp, sp, #8
005BBA92  F8CD 1000		str r1, [sp]
005BBA96  4639     		mov r1, r7
005BBA98  F8DF 40B8		ldr r4, [pc, #+184] ; 0x4B25B5
005BBA9C  F044 0401		orr r4, r4, #1
005BBAA0  47A0     		blx r4
005BBAA2  F8DD 1000		ldr r1, [sp]
005BBAA6  B002     		add sp, sp, #8

#281					)	{LNXT:71|-1|-1}
(*) BOOL
005BBAA8  4607     		mov r7, r0
005BBAAA  F8DD 0000		ldr r0, [sp]
005BBAAE  B002     		add sp, sp, #8
005BBAB0  4038     		and r0, r0, r7

#282					JMPCN	$label18	{LNXT:71|72|74}
(-) BOOL
005BBAB2  2800     		cmp r0, #0
005BBAB4  D011     		beq #34 ; 0x005BBADA


#283		
#284					(* THEN *)
#285		
#286						(* Delay.IN := NOT Delay.Q; *)
#287						LD		Delay.Q	{LNXT:72|73|-1}
(*) UNDEF
005BBAB8  F8DF 70BC		ldr r7, [pc, #+188] ; 0x20414A70
005BBABC  7838     		ldrb r0, [r7]

#288						NOT	{LNXT:72|73|-1}
(*) BOOL
005BBABE  2800     		cmp r0, #0
005BBAC0  BF08 2001		eqmov r0, #1
005BBAC4  BF18 2000		nemov r0, #0

#289						ST		Delay.IN	{LNXT:72|73|-1}
(*) BOOL
005BBAC8  F8DF 70A4		ldr r7, [pc, #+164] ; 0x20414A68
005BBACC  7038     		strb r0, [r7]

#290		
#291						(* Fase := 3; *)
#292						MOVE		3,Fase	{LNXT:73|1|-1}
(*) BOOL
005BBACE  2003     		mov r0, #3 ; 3
005BBAD0  F8DF 70A8		ldr r7, [pc, #+168] ; 0x20414A78
005BBAD4  8038     		strh r0, [r7]

#293						JMP		$label20	{LNXT:71|72|74}
(-) INT
005BBAD6  E014     		b #40 ; 0x005BBB02


#294		$label18:
#295		
#296					(* ELSIF Blocco_PdC *)
#297					LD		Blocco_PdC	{LNXT:74|-1|-1}
(*) UNDEF
005BBADA  F8DF 70B4		ldr r7, [pc, #+180] ; 0x20419F7B
005BBADE  7838     		ldrb r0, [r7]

#298					JMPCN	$label19	{LNXT:74|75|77}
(-) BOOL
005BBAE0  2800     		cmp r0, #0
005BBAE2  D006     		beq #12 ; 0x005BBAF2


#299		
#300					(* THEN *)
#301		
#302						(* Fase := 0; *)
#303						MOVE		0,Fase	{LNXT:75|1|-1}
(*) BOOL
005BBAE6  2000     		mov r0, #0 ; 0
005BBAE8  F8DF 7090		ldr r7, [pc, #+144] ; 0x20414A78
005BBAEC  8038     		strh r0, [r7]

#304						JMP		$label20	{LNXT:74|75|77}
(-) INT
005BBAEE  E008     		b #16 ; 0x005BBB02


#305		$label19:
#306		
#307					(* ELSE *)
#308		
#309						(* Fase := 3; *)
#310						MOVE		3,Fase	{LNXT:77|78|-1}
(*) INT
005BBAF2  2003     		mov r0, #3 ; 3
005BBAF4  F8DF 7084		ldr r7, [pc, #+132] ; 0x20414A78
005BBAF8  8038     		strh r0, [r7]

#311		
#312						(* Delay.IN := FALSE; *)
#313						MOVE		FALSE,Delay.IN	{LNXT:78|1|-1}
(*) INT
005BBAFA  2000     		mov r0, #0 ; 0
005BBAFC  F8DF 7070		ldr r7, [pc, #+112] ; 0x20414A68
005BBB00  7038     		strb r0, [r7]

#314		
#315		$label20:
#316					(* END_IF *)
#317		
#318		$label2:
#319		
#320				(* END_CASE *)
#321				JMP		$label1	{LNXT:1|3|84}
(-) BOOL
005BBB02  E023     		b #70 ; 0x005BBB4C


#322		$label0:
#323		
#324			(* ELSIF CalendarOnOff XOR Estate_Inverno *)
#325			LD		CalendarOnOff	{LNXT:84|-1|-1}
(*) UNDEF
005BBB06  F8DF 705C		ldr r7, [pc, #+92] ; 0x20414A15
005BBB0A  7838     		ldrb r0, [r7]

#326			NOT	{LNXT:84|-1|-1}
(*) BOOL
005BBB0C  2800     		cmp r0, #0
005BBB0E  BF08 2001		eqmov r0, #1
005BBB12  BF18 2000		nemov r0, #0

#327			XOR		Estate_Inverno	{LNXT:84|-1|-1}
(*) BOOL
005BBB16  F8DF 7068		ldr r7, [pc, #+104] ; 0x20418D78
005BBB1A  783F     		ldrb r7, [r7]
005BBB1C  4078     		eor r0, r0, r7

#328			JMPCN	$label1	{LNXT:84|85|1}
(-) BOOL
005BBB1E  2800     		cmp r0, #0
005BBB20  D014     		beq #40 ; 0x005BBB4C


#329		
#330			(* THEN *)
#331		
#332				(* Fase :=0; *)
#333				MOVE		0,Fase	{LNXT:85|86|-1}
(*) BOOL
005BBB24  2000     		mov r0, #0 ; 0
005BBB26  F8DF 7054		ldr r7, [pc, #+84] ; 0x20414A78
005BBB2A  8038     		strh r0, [r7]

#334		
#335				(* Delay.IN:=FALSE; *)
#336				MOVE		FALSE,Delay.IN	{LNXT:86|87|-1}
(*) INT
005BBB2C  2000     		mov r0, #0 ; 0
005BBB2E  F8DF 7040		ldr r7, [pc, #+64] ; 0x20414A68
005BBB32  7038     		strb r0, [r7]

#337		
#338				(* Comando_pompa_UTA := FALSE; *)
#339				MOVE		FALSE,Comando_pompa_UTA	{LNXT:87|88|-1}
(*) BOOL
005BBB34  2000     		mov r0, #0 ; 0
005BBB36  F8DF 7060		ldr r7, [pc, #+96] ; 0x2041A19A
005BBB3A  7038     		strb r0, [r7]

#340		
#341				(* Comando_PdC := FALSE; *)
#342				MOVE		FALSE,Comando_PdC	{LNXT:88|89|-1}
(*) BOOL
005BBB3C  2000     		mov r0, #0 ; 0
005BBB3E  F8DF 7054		ldr r7, [pc, #+84] ; 0x2041A199
005BBB42  7038     		strb r0, [r7]

#343		
#344				(* Comando_pompa_fancoil := FALSE; *)
#345				MOVE		FALSE,Comando_pompa_fancoil	{LNXT:89|1|-1}
(*) BOOL
005BBB44  2000     		mov r0, #0 ; 0
005BBB46  F8DF 7054		ldr r7, [pc, #+84] ; 0x2041A19B
005BBB4A  7038     		strb r0, [r7]

005BBB4C  E028     		b #80

005BBB50  004B256D		; 0x004B256D
005BBB54  004B25B5		; 0x004B25B5
005BBB58  004B25FD		; 0x004B25FD
005BBB5C  005BA0D0		; 0x005BA0D0
005BBB60  005BA178		; 0x005BA178
005BBB64  20414A15		; 0x20414A15
005BBB68  20414A30		; 0x20414A30
005BBB6C  20414A64		; 0x20414A64
005BBB70  20414A68		; 0x20414A68
005BBB74  20414A6C		; 0x20414A6C
005BBB78  20414A70		; 0x20414A70
005BBB7C  20414A78		; 0x20414A78
005BBB80  20418D78		; 0x20418D78
005BBB84  20418D79		; 0x20418D79
005BBB88  20418E40		; 0x20418E40
005BBB8C  20418E4C		; 0x20418E4C
005BBB90  20419F7B		; 0x20419F7B
005BBB94  2041A199		; 0x2041A199
005BBB98  2041A19A		; 0x2041A19A
005BBB9C  2041A19B		; 0x2041A19B

END_PROGRAM
**************************************************
	List program: Preaccensione
**************************************************

PROGRAM Preaccensione

        VAR
Set : R_TRIG;
signal_on : BOOL;
signal_off : BOOL;
inizio : UDINT := 0;
Stop : F_TRIG;
fine : UDINT;
	END_VAR

END_PROGRAM

#0		{SRC:Preaccensione}
#1		(*$WAITSWITCH$*)
#2		
#3			(* Set *)
#4			MOVE		signal_on,Set.CLK	{LNXT:1|-1|-1}
(*) UDINT
005BBBA0  F8DF 70AC		ldr r7, [pc, #+172] ; 0x20414A7A
005BBBA4  7838     		ldrb r0, [r7]
005BBBA6  F8DF 70B4		ldr r7, [pc, #+180] ; 0x20414A7D
005BBBAA  7038     		strb r0, [r7]

#5			CAL		Set	{LNXT:1|3|-1}
(*) BOOL
005BBBAC  E92D 0021		stmdb sp!, { r0, r5 }
005BBBB0  F8DF 70A4		ldr r7, [pc, #+164] ; 0x20414A7C
005BBBB4  463D     		mov r5, r7
005BBBB6  F8DF 4094		ldr r4, [pc, #+148] ; 0x5BA140
005BBBBA  F044 0401		orr r4, r4, #1
005BBBBE  47A0     		blx r4
005BBBC0  E8BD 0021		ldmia sp!, { r0, r5 }

#6		
#7		
#8			(* IF Set.Q) AND Abilita_preaccensione *)
#9			LD		Set.Q	{LNXT:3|-1|-1}
(*) UNDEF
005BBBC4  F8DF 7098		ldr r7, [pc, #+152] ; 0x20414A7E
005BBBC8  7838     		ldrb r0, [r7]

#10			AND		Abilita_preaccensione	{LNXT:3|-1|-1}
(*) BOOL
005BBBCA  F8DF 7088		ldr r7, [pc, #+136] ; 0x20414A7B
005BBBCE  783F     		ldrb r7, [r7]
005BBBD0  4038     		and r0, r0, r7

#11			JMPCN	$label0	{LNXT:3|5|9}
(-) BOOL
005BBBD2  2800     		cmp r0, #0
005BBBD4  D006     		beq #12 ; 0x005BBBE4


#12		
#13			(* THEN *)
#14		
#15				(* inizio := SysTime; *)
#16				MOVE		SysTime,inizio	{LNXT:5|9|-1}
(*) BOOL
005BBBD8  F8DF 70A0		ldr r7, [pc, #+160] ; 0x20418B74
005BBBDC  6838     		ldr r0, [r7]
005BBBDE  F8DF 7084		ldr r7, [pc, #+132] ; 0x20414A80
005BBBE2  6038     		str r0, [r7]

#17		
#18		$label0:
#19			(* END_IF *)
#20		
#21			(* Stop *)
#22			MOVE		signal_on,Stop.CLK	{LNXT:9|-1|-1}
(*) UDINT
005BBBE4  F8DF 7068		ldr r7, [pc, #+104] ; 0x20414A7A
005BBBE8  7838     		ldrb r0, [r7]
005BBBEA  F8DF 7080		ldr r7, [pc, #+128] ; 0x20414A85
005BBBEE  7038     		strb r0, [r7]

#23			CAL		Stop	{LNXT:9|11|-1}
(*) BOOL
005BBBF0  E92D 0021		stmdb sp!, { r0, r5 }
005BBBF4  F8DF 7070		ldr r7, [pc, #+112] ; 0x20414A84
005BBBF8  463D     		mov r5, r7
005BBBFA  F8DF 404C		ldr r4, [pc, #+76] ; 0x5BA108
005BBBFE  F044 0401		orr r4, r4, #1
005BBC02  47A0     		blx r4
005BBC04  E8BD 0021		ldmia sp!, { r0, r5 }

#24		
#25		
#26			(* IF Abilita_preaccensione AND (Stop.Q *)
#27			LD		Abilita_preaccensione	{LNXT:11|-1|-1}
(*) UNDEF
005BBC08  F8DF 7048		ldr r7, [pc, #+72] ; 0x20414A7B
005BBC0C  7838     		ldrb r0, [r7]

#28			AND		Stop.Q	{LNXT:11|-1|-1}
(*) BOOL
005BBC0E  F8DF 7060		ldr r7, [pc, #+96] ; 0x20414A86
005BBC12  783F     		ldrb r7, [r7]
005BBC14  4038     		and r0, r0, r7

#29			JMPCN	$label1	{LNXT:11|13|17}
(-) BOOL
005BBC16  2800     		cmp r0, #0
005BBC18  D006     		beq #12 ; 0x005BBC28


#30		
#31			(* THEN *)
#32		
#33				(* fine := SysTime; *)
#34				MOVE		SysTime,fine	{LNXT:13|17|-1}
(*) BOOL
005BBC1C  F8DF 705C		ldr r7, [pc, #+92] ; 0x20418B74
005BBC20  6838     		ldr r0, [r7]
005BBC22  F8DF 7050		ldr r7, [pc, #+80] ; 0x20414A88
005BBC26  6038     		str r0, [r7]

#35		
#36		$label1:
#37			(* END_IF *)
#38		
#39			(* ms_preaccensione := (fine-inizio); *)
#40			LD		fine	{LNXT:17|1|-1}
(*) UNDEF
005BBC28  F8DF 7048		ldr r7, [pc, #+72] ; 0x20414A88
005BBC2C  6838     		ldr r0, [r7]

#41			SUB		inizio	{LNXT:17|1|-1}
(*) UDINT
005BBC2E  F8DF 7034		ldr r7, [pc, #+52] ; 0x20414A80
005BBC32  683F     		ldr r7, [r7]
005BBC34  1BC0     		sub r0, r0, r7

#42			ST		ms_preaccensione	{LNXT:17|1|-1}
(*) UDINT
005BBC36  F8DF 7040		ldr r7, [pc, #+64] ; 0x20414A8C
005BBC3A  6038     		str r0, [r7]

005BBC3C  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
005BBC40  F8DD E000		ldr lr, [sp]
005BBC44  B002     		add sp, sp, #8

005BBC46  4770     		bx lr

005BBC48  005BA108		; 0x005BA108
005BBC4C  005BA140		; 0x005BA140
005BBC50  20414A7A		; 0x20414A7A
005BBC54  20414A7B		; 0x20414A7B
005BBC58  20414A7C		; 0x20414A7C
005BBC5C  20414A7D		; 0x20414A7D
005BBC60  20414A7E		; 0x20414A7E
005BBC64  20414A80		; 0x20414A80
005BBC68  20414A84		; 0x20414A84
005BBC6C  20414A85		; 0x20414A85
005BBC70  20414A86		; 0x20414A86
005BBC74  20414A88		; 0x20414A88
005BBC78  20414A8C		; 0x20414A8C
005BBC7C  20418B74		; 0x20418B74

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
005BBC80  4770     		bx lr


*** OUTPUT:
005BBC82  4770     		bx lr



**************************************************
	Task Slow init code
**************************************************

005BBC84  B082     		sub sp, sp, #8
005BBC86  F8CD E000		str lr, [sp]
005BBC8A  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

005BBC8E  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
005BBC92  F8DD E000		ldr lr, [sp]
005BBC96  B002     		add sp, sp, #8

005BBC98  4770     		bx lr

**************************************************
	List program: UpdateOrologio
**************************************************

PROGRAM UpdateOrologio

        VAR
Datetime : LINT;
tset : LINT;
time : LINT;
Default : SysETimeToDate;
Done : BOOL;
Error : BOOL;
YY : UINT;
MM : INT;
DD : INT;
dd : INT;
hh : INT;
mm : INT;
ss : INT;
A : OnOffCalendar;
OnOffCalendar : OnOffCalendar;
onoff : OnOffCalendar;
Lunedi : HHMM_to_MM;
Martedi : HHMM_to_MM;
Mercoledi : HHMM_to_MM;
Giovedi : HHMM_to_MM;
Venerdi : HHMM_to_MM;
Sabato : HHMM_to_MM;
Domenica : HHMM_to_MM;
	END_VAR

END_PROGRAM

005BBCB0  B082     		sub sp, sp, #8
005BBCB2  F8CD E000		str lr, [sp]
005BBCB6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:UpdateOrologio}
#1		
#2		
#3		
#4		(*** Network 1 ***)
#5		
#6		(* Call for FB SysETimeToDate instance Default *)
#7		MOVE	SysDateTime,Default.EpochTime	{R:"1$FB:Default"}
(*) UDINT
005BBCBA  F8DF 7BC0		ldr r7, [pc, #+3008] ; 0x2041A2BC
005BBCBE  6838     		ldr r0, [r7]
005BBCC0  F8DF 7810		ldr r7, [pc, #+2064] ; 0x20414A98
005BBCC4  6038     		str r0, [r7]

#8		CAL	Default	{R:"1$FB:Default"}
(*) UDINT
005BBCC6  E92D 0021		stmdb sp!, { r0, r5 }
005BBCCA  F8DF 7804		ldr r7, [pc, #+2052] ; 0x20414A90
005BBCCE  4638     		mov r0, r7
005BBCD0  F8DF 47EC		ldr r4, [pc, #+2028] ; 0x498A5D
005BBCD4  F044 0401		orr r4, r4, #1
005BBCD8  47A0     		blx r4
005BBCDA  E8BD 0021		ldmia sp!, { r0, r5 }

#9		MOVE	Default.Done,Done	{R:"1$FB:Default"}
(*) UDINT
005BBCDE  F8DF 77F8		ldr r7, [pc, #+2040] ; 0x20414A9C
005BBCE2  7838     		ldrb r0, [r7]
005BBCE4  F8DF 7814		ldr r7, [pc, #+2068] ; 0x20414AA8
005BBCE8  7038     		strb r0, [r7]

#10		MOVE	Default.Fault,Error	{R:"1$FB:Default"}
(*) BOOL
005BBCEA  F8DF 77F0		ldr r7, [pc, #+2032] ; 0x20414A9D
005BBCEE  7838     		ldrb r0, [r7]
005BBCF0  F8DF 780C		ldr r7, [pc, #+2060] ; 0x20414AA9
005BBCF4  7038     		strb r0, [r7]

#11		MOVE	Default.Year,YY	{R:"1$FB:Default"}
(*) BOOL
005BBCF6  F8DF 77E8		ldr r7, [pc, #+2024] ; 0x20414A9E
005BBCFA  8838     		ldrh r0, [r7]
005BBCFC  F8DF 7804		ldr r7, [pc, #+2052] ; 0x20414AAA
005BBD00  8038     		strh r0, [r7]

#12		MOVE	Default.Month,MM	{R:"1$FB:Default"}
(*) UINT
005BBD02  F8DF 77E0		ldr r7, [pc, #+2016] ; 0x20414AA0
005BBD06  7838     		ldrb r0, [r7]
005BBD08  F8DF 77FC		ldr r7, [pc, #+2044] ; 0x20414AAC
005BBD0C  8038     		strh r0, [r7]

#13		MOVE	Default.Second,ss	{R:"1$FB:Default"}
(*) USINT
005BBD0E  F8DF 77E8		ldr r7, [pc, #+2024] ; 0x20414AA5
005BBD12  7838     		ldrb r0, [r7]
005BBD14  F8DF 77F4		ldr r7, [pc, #+2036] ; 0x20414AAE
005BBD18  8038     		strh r0, [r7]

#14		
#15		(* Call for function TO_INT *)
#16		LD	Default.Day	{R:"1$F:7"}
(*) UNDEF
005BBD1A  F8DF 77CC		ldr r7, [pc, #+1996] ; 0x20414AA1
005BBD1E  7838     		ldrb r0, [r7]

#17		TO_INT	{R:"1$F:7"}
(-) USINT
#18		ST	Giorno	{R:"1$F:7"}
(*) INT
005BBD20  F8DF 77EC		ldr r7, [pc, #+2028] ; 0x20414AB0
005BBD24  8038     		strh r0, [r7]

#19		
#20		(* Call for function TO_INT *)
#21		LD	Default.WeekDay	{R:"1$F:9"}
(*) UNDEF
005BBD26  F8DF 77C4		ldr r7, [pc, #+1988] ; 0x20414AA2
005BBD2A  7838     		ldrb r0, [r7]

#22		TO_INT	{R:"1$F:9"}
(-) USINT
#23		ST	DayWeek	{R:"1$F:9"}
(*) INT
005BBD2C  F8DF 77E4		ldr r7, [pc, #+2020] ; 0x20414AB2
005BBD30  8038     		strh r0, [r7]

#24		
#25		(* Call for function TO_INT *)
#26		LD	Default.Hour	{R:"1$F:11"}
(*) UNDEF
005BBD32  F8DF 77BC		ldr r7, [pc, #+1980] ; 0x20414AA3
005BBD36  7838     		ldrb r0, [r7]

#27		TO_INT	{R:"1$F:11"}
(-) USINT
#28		ST	Ora	{R:"1$F:11"}
(*) INT
005BBD38  F8DF 77DC		ldr r7, [pc, #+2012] ; 0x20414AB4
005BBD3C  8038     		strh r0, [r7]

#29		
#30		(* Call for function TO_INT *)
#31		LD	Default.Minute	{R:"1$F:13"}
(*) UNDEF
005BBD3E  F8DF 77B4		ldr r7, [pc, #+1972] ; 0x20414AA4
005BBD42  7838     		ldrb r0, [r7]

#32		TO_INT	{R:"1$F:13"}
(-) USINT
#33		ST	Minuto	{R:"1$F:13"}
(*) INT
005BBD44  F8DF 77D4		ldr r7, [pc, #+2004] ; 0x20414AB6
005BBD48  8038     		strh r0, [r7]

#34		
#35		
#36		
#37		
#38		(*** Network 2 ***)
#39		
#40		(* Call for FB HHMM_to_MM instance Lunedi *)
#41		MOVE	Ora_on1_lun,Lunedi.HH_on1	{R:"2$FB:Lunedi"}
(*) INT
005BBD4A  F8DF 7A50		ldr r7, [pc, #+2640] ; 0x20418D78
005BBD4E  F9B7 0000		ldrsh r0, [r7]
005BBD52  F8DF 77CC		ldr r7, [pc, #+1996] ; 0x20414AB8
005BBD56  8038     		strh r0, [r7]

#42		MOVE	Min_on1_lun,Lunedi.MM_on1	{R:"2$FB:Lunedi"}
(*) INT
005BBD58  F8DF 7A44		ldr r7, [pc, #+2628] ; 0x20418D7A
005BBD5C  F9B7 0000		ldrsh r0, [r7]
005BBD60  F8DF 77C0		ldr r7, [pc, #+1984] ; 0x20414ABA
005BBD64  8038     		strh r0, [r7]

#43		MOVE	Ora_off1_lun,Lunedi.HH_off1	{R:"2$FB:Lunedi"}
(*) INT
005BBD66  F8DF 7A3C		ldr r7, [pc, #+2620] ; 0x20418D7C
005BBD6A  F9B7 0000		ldrsh r0, [r7]
005BBD6E  F8DF 77B8		ldr r7, [pc, #+1976] ; 0x20414ABC
005BBD72  8038     		strh r0, [r7]

#44		MOVE	Min_off1_lun,Lunedi.MM_off1	{R:"2$FB:Lunedi"}
(*) INT
005BBD74  F8DF 7A30		ldr r7, [pc, #+2608] ; 0x20418D7E
005BBD78  F9B7 0000		ldrsh r0, [r7]
005BBD7C  F8DF 77AC		ldr r7, [pc, #+1964] ; 0x20414ABE
005BBD80  8038     		strh r0, [r7]

#45		MOVE	Ora_on2_lun,Lunedi.HH_on2	{R:"2$FB:Lunedi"}
(*) INT
005BBD82  F8DF 7A28		ldr r7, [pc, #+2600] ; 0x20418D80
005BBD86  F9B7 0000		ldrsh r0, [r7]
005BBD8A  F8DF 77A4		ldr r7, [pc, #+1956] ; 0x20414AC0
005BBD8E  8038     		strh r0, [r7]

#46		MOVE	Min_on2_lun,Lunedi.MM_on2	{R:"2$FB:Lunedi"}
(*) INT
005BBD90  F8DF 7A1C		ldr r7, [pc, #+2588] ; 0x20418D82
005BBD94  F9B7 0000		ldrsh r0, [r7]
005BBD98  F8DF 7798		ldr r7, [pc, #+1944] ; 0x20414AC2
005BBD9C  8038     		strh r0, [r7]

#47		MOVE	Ora_off2_lun,Lunedi.HH_off2	{R:"2$FB:Lunedi"}
(*) INT
005BBD9E  F8DF 7A14		ldr r7, [pc, #+2580] ; 0x20418D84
005BBDA2  F9B7 0000		ldrsh r0, [r7]
005BBDA6  F8DF 7790		ldr r7, [pc, #+1936] ; 0x20414AC4
005BBDAA  8038     		strh r0, [r7]

#48		MOVE	Min_off2_lun,Lunedi.MM_off2	{R:"2$FB:Lunedi"}
(*) INT
005BBDAC  F8DF 7A08		ldr r7, [pc, #+2568] ; 0x20418D86
005BBDB0  F9B7 0000		ldrsh r0, [r7]
005BBDB4  F8DF 7784		ldr r7, [pc, #+1924] ; 0x20414AC6
005BBDB8  8038     		strh r0, [r7]

#49		CAL	Lunedi	{R:"2$FB:Lunedi"}
(*) INT
005BBDBA  E92D 0021		stmdb sp!, { r0, r5 }
005BBDBE  F8DF 7760		ldr r7, [pc, #+1888] ; 0x20414AB8
005BBDC2  463D     		mov r5, r7
005BBDC4  F8DF 46FC		ldr r4, [pc, #+1788] ; 0x5BA240
005BBDC8  F044 0401		orr r4, r4, #1
005BBDCC  47A0     		blx r4
005BBDCE  E8BD 0021		ldmia sp!, { r0, r5 }

#50		MOVE	Lunedi.MMs_on1,P11On	{R:"2$FB:Lunedi"}
(*) INT
005BBDD2  F8DF 776C		ldr r7, [pc, #+1900] ; 0x20414AC8
005BBDD6  F9B7 0000		ldrsh r0, [r7]
005BBDDA  F8DF 7774		ldr r7, [pc, #+1908] ; 0x20414AD0
005BBDDE  8038     		strh r0, [r7]

#51		MOVE	Lunedi.MMs_off1,P12Off	{R:"2$FB:Lunedi"}
(*) INT
005BBDE0  F8DF 7760		ldr r7, [pc, #+1888] ; 0x20414ACA
005BBDE4  F9B7 0000		ldrsh r0, [r7]
005BBDE8  F8DF 7768		ldr r7, [pc, #+1896] ; 0x20414AD2
005BBDEC  8038     		strh r0, [r7]

#52		MOVE	Lunedi.MMs_on2,P13On	{R:"2$FB:Lunedi"}
(*) INT
005BBDEE  F8DF 7758		ldr r7, [pc, #+1880] ; 0x20414ACC
005BBDF2  F9B7 0000		ldrsh r0, [r7]
005BBDF6  F8DF 7760		ldr r7, [pc, #+1888] ; 0x20414AD4
005BBDFA  8038     		strh r0, [r7]

#53		MOVE	Lunedi.MMs_off2,P14Off	{R:"2$FB:Lunedi"}
(*) INT
005BBDFC  F8DF 774C		ldr r7, [pc, #+1868] ; 0x20414ACE
005BBE00  F9B7 0000		ldrsh r0, [r7]
005BBE04  F8DF 7754		ldr r7, [pc, #+1876] ; 0x20414AD6
005BBE08  8038     		strh r0, [r7]

#54		
#55		
#56		
#57		
#58		(*** Network 3 ***)
#59		
#60		(* Call for FB HHMM_to_MM instance Martedi *)
#61		MOVE	Ora_on1_mar,Martedi.HH_on1	{R:"3$FB:Martedi"}
(*) INT
005BBE0A  F8DF 79B0		ldr r7, [pc, #+2480] ; 0x20418D88
005BBE0E  F9B7 0000		ldrsh r0, [r7]
005BBE12  F8DF 774C		ldr r7, [pc, #+1868] ; 0x20414AD8
005BBE16  8038     		strh r0, [r7]

#62		MOVE	Min_on1_mar,Martedi.MM_on1	{R:"3$FB:Martedi"}
(*) INT
005BBE18  F8DF 79A4		ldr r7, [pc, #+2468] ; 0x20418D8A
005BBE1C  F9B7 0000		ldrsh r0, [r7]
005BBE20  F8DF 7740		ldr r7, [pc, #+1856] ; 0x20414ADA
005BBE24  8038     		strh r0, [r7]

#63		MOVE	Ora_off1_mar,Martedi.HH_off1	{R:"3$FB:Martedi"}
(*) INT
005BBE26  F8DF 799C		ldr r7, [pc, #+2460] ; 0x20418D8C
005BBE2A  F9B7 0000		ldrsh r0, [r7]
005BBE2E  F8DF 7738		ldr r7, [pc, #+1848] ; 0x20414ADC
005BBE32  8038     		strh r0, [r7]

#64		MOVE	Min_off1_mar,Martedi.MM_off1	{R:"3$FB:Martedi"}
(*) INT
005BBE34  F8DF 7990		ldr r7, [pc, #+2448] ; 0x20418D8E
005BBE38  F9B7 0000		ldrsh r0, [r7]
005BBE3C  F8DF 772C		ldr r7, [pc, #+1836] ; 0x20414ADE
005BBE40  8038     		strh r0, [r7]

#65		MOVE	Ora_on2_mar,Martedi.HH_on2	{R:"3$FB:Martedi"}
(*) INT
005BBE42  F8DF 7988		ldr r7, [pc, #+2440] ; 0x20418D90
005BBE46  F9B7 0000		ldrsh r0, [r7]
005BBE4A  F8DF 7724		ldr r7, [pc, #+1828] ; 0x20414AE0
005BBE4E  8038     		strh r0, [r7]

#66		MOVE	Min_on2_mar,Martedi.MM_on2	{R:"3$FB:Martedi"}
(*) INT
005BBE50  F8DF 797C		ldr r7, [pc, #+2428] ; 0x20418D92
005BBE54  F9B7 0000		ldrsh r0, [r7]
005BBE58  F8DF 7718		ldr r7, [pc, #+1816] ; 0x20414AE2
005BBE5C  8038     		strh r0, [r7]

#67		MOVE	Ora_off2_mar,Martedi.HH_off2	{R:"3$FB:Martedi"}
(*) INT
005BBE5E  F8DF 7974		ldr r7, [pc, #+2420] ; 0x20418D94
005BBE62  F9B7 0000		ldrsh r0, [r7]
005BBE66  F8DF 7710		ldr r7, [pc, #+1808] ; 0x20414AE4
005BBE6A  8038     		strh r0, [r7]

#68		MOVE	Min_off2_mar,Martedi.MM_off2	{R:"3$FB:Martedi"}
(*) INT
005BBE6C  F8DF 7968		ldr r7, [pc, #+2408] ; 0x20418D96
005BBE70  F9B7 0000		ldrsh r0, [r7]
005BBE74  F8DF 7704		ldr r7, [pc, #+1796] ; 0x20414AE6
005BBE78  8038     		strh r0, [r7]

#69		CAL	Martedi	{R:"3$FB:Martedi"}
(*) INT
005BBE7A  E92D 0021		stmdb sp!, { r0, r5 }
005BBE7E  F8DF 76E0		ldr r7, [pc, #+1760] ; 0x20414AD8
005BBE82  463D     		mov r5, r7
005BBE84  F8DF 463C		ldr r4, [pc, #+1596] ; 0x5BA240
005BBE88  F044 0401		orr r4, r4, #1
005BBE8C  47A0     		blx r4
005BBE8E  E8BD 0021		ldmia sp!, { r0, r5 }

#70		MOVE	Martedi.MMs_on1,P21On	{R:"3$FB:Martedi"}
(*) INT
005BBE92  F8DF 76EC		ldr r7, [pc, #+1772] ; 0x20414AE8
005BBE96  F9B7 0000		ldrsh r0, [r7]
005BBE9A  F8DF 76F4		ldr r7, [pc, #+1780] ; 0x20414AF0
005BBE9E  8038     		strh r0, [r7]

#71		MOVE	Martedi.MMs_off1,P22Off	{R:"3$FB:Martedi"}
(*) INT
005BBEA0  F8DF 76E0		ldr r7, [pc, #+1760] ; 0x20414AEA
005BBEA4  F9B7 0000		ldrsh r0, [r7]
005BBEA8  F8DF 76E8		ldr r7, [pc, #+1768] ; 0x20414AF2
005BBEAC  8038     		strh r0, [r7]

#72		MOVE	Martedi.MMs_on2,P23On	{R:"3$FB:Martedi"}
(*) INT
005BBEAE  F8DF 76D8		ldr r7, [pc, #+1752] ; 0x20414AEC
005BBEB2  F9B7 0000		ldrsh r0, [r7]
005BBEB6  F8DF 76E0		ldr r7, [pc, #+1760] ; 0x20414AF4
005BBEBA  8038     		strh r0, [r7]

#73		MOVE	Martedi.MMs_off2,P24Off	{R:"3$FB:Martedi"}
(*) INT
005BBEBC  F8DF 76CC		ldr r7, [pc, #+1740] ; 0x20414AEE
005BBEC0  F9B7 0000		ldrsh r0, [r7]
005BBEC4  F8DF 76D4		ldr r7, [pc, #+1748] ; 0x20414AF6
005BBEC8  8038     		strh r0, [r7]

#74		
#75		
#76		
#77		
#78		(*** Network 4 ***)
#79		
#80		(* Call for FB HHMM_to_MM instance Mercoledi *)
#81		MOVE	Ora_on1_mer,Mercoledi.HH_on1	{R:"4$FB:Mercoledi"}
(*) INT
005BBECA  F8DF 7910		ldr r7, [pc, #+2320] ; 0x20418D98
005BBECE  F9B7 0000		ldrsh r0, [r7]
005BBED2  F8DF 76CC		ldr r7, [pc, #+1740] ; 0x20414AF8
005BBED6  8038     		strh r0, [r7]

#82		MOVE	Min_on1_mer,Mercoledi.MM_on1	{R:"4$FB:Mercoledi"}
(*) INT
005BBED8  F8DF 7904		ldr r7, [pc, #+2308] ; 0x20418D9A
005BBEDC  F9B7 0000		ldrsh r0, [r7]
005BBEE0  F8DF 76C0		ldr r7, [pc, #+1728] ; 0x20414AFA
005BBEE4  8038     		strh r0, [r7]

#83		MOVE	Ora_off1_mer,Mercoledi.HH_off1	{R:"4$FB:Mercoledi"}
(*) INT
005BBEE6  F8DF 78FC		ldr r7, [pc, #+2300] ; 0x20418D9C
005BBEEA  F9B7 0000		ldrsh r0, [r7]
005BBEEE  F8DF 76B8		ldr r7, [pc, #+1720] ; 0x20414AFC
005BBEF2  8038     		strh r0, [r7]

#84		MOVE	Min_off1_mer,Mercoledi.MM_off1	{R:"4$FB:Mercoledi"}
(*) INT
005BBEF4  F8DF 78F0		ldr r7, [pc, #+2288] ; 0x20418D9E
005BBEF8  F9B7 0000		ldrsh r0, [r7]
005BBEFC  F8DF 76AC		ldr r7, [pc, #+1708] ; 0x20414AFE
005BBF00  8038     		strh r0, [r7]

#85		MOVE	Ora_on2_mer,Mercoledi.HH_on2	{R:"4$FB:Mercoledi"}
(*) INT
005BBF02  F8DF 78E8		ldr r7, [pc, #+2280] ; 0x20418DA0
005BBF06  F9B7 0000		ldrsh r0, [r7]
005BBF0A  F8DF 76A4		ldr r7, [pc, #+1700] ; 0x20414B00
005BBF0E  8038     		strh r0, [r7]

#86		MOVE	Min_on2_mer,Mercoledi.MM_on2	{R:"4$FB:Mercoledi"}
(*) INT
005BBF10  F8DF 78DC		ldr r7, [pc, #+2268] ; 0x20418DA2
005BBF14  F9B7 0000		ldrsh r0, [r7]
005BBF18  F8DF 7698		ldr r7, [pc, #+1688] ; 0x20414B02
005BBF1C  8038     		strh r0, [r7]

#87		MOVE	Ora_off2_mer,Mercoledi.HH_off2	{R:"4$FB:Mercoledi"}
(*) INT
005BBF1E  F8DF 78D4		ldr r7, [pc, #+2260] ; 0x20418DA4
005BBF22  F9B7 0000		ldrsh r0, [r7]
005BBF26  F8DF 7690		ldr r7, [pc, #+1680] ; 0x20414B04
005BBF2A  8038     		strh r0, [r7]

#88		MOVE	Min_off2_mer,Mercoledi.MM_off2	{R:"4$FB:Mercoledi"}
(*) INT
005BBF2C  F8DF 78C8		ldr r7, [pc, #+2248] ; 0x20418DA6
005BBF30  F9B7 0000		ldrsh r0, [r7]
005BBF34  F8DF 7684		ldr r7, [pc, #+1668] ; 0x20414B06
005BBF38  8038     		strh r0, [r7]

#89		CAL	Mercoledi	{R:"4$FB:Mercoledi"}
(*) INT
005BBF3A  E92D 0021		stmdb sp!, { r0, r5 }
005BBF3E  F8DF 7660		ldr r7, [pc, #+1632] ; 0x20414AF8
005BBF42  463D     		mov r5, r7
005BBF44  F8DF 457C		ldr r4, [pc, #+1404] ; 0x5BA240
005BBF48  F044 0401		orr r4, r4, #1
005BBF4C  47A0     		blx r4
005BBF4E  E8BD 0021		ldmia sp!, { r0, r5 }

#90		MOVE	Mercoledi.MMs_on1,P31On	{R:"4$FB:Mercoledi"}
(*) INT
005BBF52  F8DF 766C		ldr r7, [pc, #+1644] ; 0x20414B08
005BBF56  F9B7 0000		ldrsh r0, [r7]
005BBF5A  F8DF 7674		ldr r7, [pc, #+1652] ; 0x20414B10
005BBF5E  8038     		strh r0, [r7]

#91		MOVE	Mercoledi.MMs_off1,P32Off	{R:"4$FB:Mercoledi"}
(*) INT
005BBF60  F8DF 7660		ldr r7, [pc, #+1632] ; 0x20414B0A
005BBF64  F9B7 0000		ldrsh r0, [r7]
005BBF68  F8DF 7668		ldr r7, [pc, #+1640] ; 0x20414B12
005BBF6C  8038     		strh r0, [r7]

#92		MOVE	Mercoledi.MMs_on2,P33On	{R:"4$FB:Mercoledi"}
(*) INT
005BBF6E  F8DF 7658		ldr r7, [pc, #+1624] ; 0x20414B0C
005BBF72  F9B7 0000		ldrsh r0, [r7]
005BBF76  F8DF 7660		ldr r7, [pc, #+1632] ; 0x20414B14
005BBF7A  8038     		strh r0, [r7]

#93		MOVE	Mercoledi.MMs_off2,P34Off	{R:"4$FB:Mercoledi"}
(*) INT
005BBF7C  F8DF 764C		ldr r7, [pc, #+1612] ; 0x20414B0E
005BBF80  F9B7 0000		ldrsh r0, [r7]
005BBF84  F8DF 7654		ldr r7, [pc, #+1620] ; 0x20414B16
005BBF88  8038     		strh r0, [r7]

#94		
#95		
#96		
#97		
#98		(*** Network 5 ***)
#99		
#100		(* Call for FB HHMM_to_MM instance Giovedi *)
#101		MOVE	Ora_on1_gio,Giovedi.HH_on1	{R:"5$FB:Giovedi"}
(*) INT
005BBF8A  F8DF 7870		ldr r7, [pc, #+2160] ; 0x20418DA8
005BBF8E  F9B7 0000		ldrsh r0, [r7]
005BBF92  F8DF 764C		ldr r7, [pc, #+1612] ; 0x20414B18
005BBF96  8038     		strh r0, [r7]

#102		MOVE	Min_on1_gio,Giovedi.MM_on1	{R:"5$FB:Giovedi"}
(*) INT
005BBF98  F8DF 7864		ldr r7, [pc, #+2148] ; 0x20418DAA
005BBF9C  F9B7 0000		ldrsh r0, [r7]
005BBFA0  F8DF 7640		ldr r7, [pc, #+1600] ; 0x20414B1A
005BBFA4  8038     		strh r0, [r7]

#103		MOVE	Ora_off1_gio,Giovedi.HH_off1	{R:"5$FB:Giovedi"}
(*) INT
005BBFA6  F8DF 785C		ldr r7, [pc, #+2140] ; 0x20418DAC
005BBFAA  F9B7 0000		ldrsh r0, [r7]
005BBFAE  F8DF 7638		ldr r7, [pc, #+1592] ; 0x20414B1C
005BBFB2  8038     		strh r0, [r7]

#104		MOVE	Min_off1_gio,Giovedi.MM_off1	{R:"5$FB:Giovedi"}
(*) INT
005BBFB4  F8DF 7850		ldr r7, [pc, #+2128] ; 0x20418DAE
005BBFB8  F9B7 0000		ldrsh r0, [r7]
005BBFBC  F8DF 762C		ldr r7, [pc, #+1580] ; 0x20414B1E
005BBFC0  8038     		strh r0, [r7]

#105		MOVE	Ora_on2_gio,Giovedi.HH_on2	{R:"5$FB:Giovedi"}
(*) INT
005BBFC2  F8DF 7848		ldr r7, [pc, #+2120] ; 0x20418DB0
005BBFC6  F9B7 0000		ldrsh r0, [r7]
005BBFCA  F8DF 7624		ldr r7, [pc, #+1572] ; 0x20414B20
005BBFCE  8038     		strh r0, [r7]

#106		MOVE	Min_on2_gio,Giovedi.MM_on2	{R:"5$FB:Giovedi"}
(*) INT
005BBFD0  F8DF 783C		ldr r7, [pc, #+2108] ; 0x20418DB2
005BBFD4  F9B7 0000		ldrsh r0, [r7]
005BBFD8  F8DF 7618		ldr r7, [pc, #+1560] ; 0x20414B22
005BBFDC  8038     		strh r0, [r7]

#107		MOVE	Ora_off2_gio,Giovedi.HH_off2	{R:"5$FB:Giovedi"}
(*) INT
005BBFDE  F8DF 7834		ldr r7, [pc, #+2100] ; 0x20418DB4
005BBFE2  F9B7 0000		ldrsh r0, [r7]
005BBFE6  F8DF 7610		ldr r7, [pc, #+1552] ; 0x20414B24
005BBFEA  8038     		strh r0, [r7]

#108		MOVE	Min_off2_gio,Giovedi.MM_off2	{R:"5$FB:Giovedi"}
(*) INT
005BBFEC  F8DF 7828		ldr r7, [pc, #+2088] ; 0x20418DB6
005BBFF0  F9B7 0000		ldrsh r0, [r7]
005BBFF4  F8DF 7604		ldr r7, [pc, #+1540] ; 0x20414B26
005BBFF8  8038     		strh r0, [r7]

#109		CAL	Giovedi	{R:"5$FB:Giovedi"}
(*) INT
005BBFFA  E92D 0021		stmdb sp!, { r0, r5 }
005BBFFE  F8DF 75E0		ldr r7, [pc, #+1504] ; 0x20414B18
005BC002  463D     		mov r5, r7
005BC004  F8DF 44BC		ldr r4, [pc, #+1212] ; 0x5BA240
005BC008  F044 0401		orr r4, r4, #1
005BC00C  47A0     		blx r4
005BC00E  E8BD 0021		ldmia sp!, { r0, r5 }

#110		MOVE	Giovedi.MMs_on1,P41On	{R:"5$FB:Giovedi"}
(*) INT
005BC012  F8DF 75EC		ldr r7, [pc, #+1516] ; 0x20414B28
005BC016  F9B7 0000		ldrsh r0, [r7]
005BC01A  F8DF 75F4		ldr r7, [pc, #+1524] ; 0x20414B30
005BC01E  8038     		strh r0, [r7]

#111		MOVE	Giovedi.MMs_off1,P42Off	{R:"5$FB:Giovedi"}
(*) INT
005BC020  F8DF 75E0		ldr r7, [pc, #+1504] ; 0x20414B2A
005BC024  F9B7 0000		ldrsh r0, [r7]
005BC028  F8DF 75E8		ldr r7, [pc, #+1512] ; 0x20414B32
005BC02C  8038     		strh r0, [r7]

#112		MOVE	Giovedi.MMs_on2,P43On	{R:"5$FB:Giovedi"}
(*) INT
005BC02E  F8DF 75D8		ldr r7, [pc, #+1496] ; 0x20414B2C
005BC032  F9B7 0000		ldrsh r0, [r7]
005BC036  F8DF 75E0		ldr r7, [pc, #+1504] ; 0x20414B34
005BC03A  8038     		strh r0, [r7]

#113		MOVE	Giovedi.MMs_off2,P44Off	{R:"5$FB:Giovedi"}
(*) INT
005BC03C  F8DF 75CC		ldr r7, [pc, #+1484] ; 0x20414B2E
005BC040  F9B7 0000		ldrsh r0, [r7]
005BC044  F8DF 75D4		ldr r7, [pc, #+1492] ; 0x20414B36
005BC048  8038     		strh r0, [r7]

#114		
#115		
#116		
#117		
#118		(*** Network 6 ***)
#119		
#120		(* Call for FB HHMM_to_MM instance Venerdi *)
#121		MOVE	Ora_on1_ven,Venerdi.HH_on1	{R:"6$FB:Venerdi"}
(*) INT
005BC04A  F8DF 77D0		ldr r7, [pc, #+2000] ; 0x20418DB8
005BC04E  F9B7 0000		ldrsh r0, [r7]
005BC052  F8DF 75CC		ldr r7, [pc, #+1484] ; 0x20414B38
005BC056  8038     		strh r0, [r7]

#122		MOVE	Min_on1_ven,Venerdi.MM_on1	{R:"6$FB:Venerdi"}
(*) INT
005BC058  F8DF 77C4		ldr r7, [pc, #+1988] ; 0x20418DBA
005BC05C  F9B7 0000		ldrsh r0, [r7]
005BC060  F8DF 75C0		ldr r7, [pc, #+1472] ; 0x20414B3A
005BC064  8038     		strh r0, [r7]

#123		MOVE	Ora_off1_ven,Venerdi.HH_off1	{R:"6$FB:Venerdi"}
(*) INT
005BC066  F8DF 77BC		ldr r7, [pc, #+1980] ; 0x20418DBC
005BC06A  F9B7 0000		ldrsh r0, [r7]
005BC06E  F8DF 75B8		ldr r7, [pc, #+1464] ; 0x20414B3C
005BC072  8038     		strh r0, [r7]

#124		MOVE	Min_off1_ven,Venerdi.MM_off1	{R:"6$FB:Venerdi"}
(*) INT
005BC074  F8DF 77B0		ldr r7, [pc, #+1968] ; 0x20418DBE
005BC078  F9B7 0000		ldrsh r0, [r7]
005BC07C  F8DF 75AC		ldr r7, [pc, #+1452] ; 0x20414B3E
005BC080  8038     		strh r0, [r7]

#125		MOVE	Ora_on2_ven,Venerdi.HH_on2	{R:"6$FB:Venerdi"}
(*) INT
005BC082  F8DF 77A8		ldr r7, [pc, #+1960] ; 0x20418DC0
005BC086  F9B7 0000		ldrsh r0, [r7]
005BC08A  F8DF 75A4		ldr r7, [pc, #+1444] ; 0x20414B40
005BC08E  8038     		strh r0, [r7]

#126		MOVE	Min_on2_ven,Venerdi.MM_on2	{R:"6$FB:Venerdi"}
(*) INT
005BC090  F8DF 779C		ldr r7, [pc, #+1948] ; 0x20418DC2
005BC094  F9B7 0000		ldrsh r0, [r7]
005BC098  F8DF 7598		ldr r7, [pc, #+1432] ; 0x20414B42
005BC09C  8038     		strh r0, [r7]

#127		MOVE	Ora_off2_ven,Venerdi.HH_off2	{R:"6$FB:Venerdi"}
(*) INT
005BC09E  F8DF 7794		ldr r7, [pc, #+1940] ; 0x20418DC4
005BC0A2  F9B7 0000		ldrsh r0, [r7]
005BC0A6  F8DF 7590		ldr r7, [pc, #+1424] ; 0x20414B44
005BC0AA  8038     		strh r0, [r7]

#128		MOVE	Min_off2_ven,Venerdi.MM_off2	{R:"6$FB:Venerdi"}
(*) INT
005BC0AC  F8DF 7788		ldr r7, [pc, #+1928] ; 0x20418DC6
005BC0B0  F9B7 0000		ldrsh r0, [r7]
005BC0B4  F8DF 7584		ldr r7, [pc, #+1412] ; 0x20414B46
005BC0B8  8038     		strh r0, [r7]

#129		CAL	Venerdi	{R:"6$FB:Venerdi"}
(*) INT
005BC0BA  E92D 0021		stmdb sp!, { r0, r5 }
005BC0BE  F8DF 7560		ldr r7, [pc, #+1376] ; 0x20414B38
005BC0C2  463D     		mov r5, r7
005BC0C4  F8DF 43FC		ldr r4, [pc, #+1020] ; 0x5BA240
005BC0C8  F044 0401		orr r4, r4, #1
005BC0CC  47A0     		blx r4
005BC0CE  E8BD 0021		ldmia sp!, { r0, r5 }

#130		MOVE	Venerdi.MMs_on1,P51On	{R:"6$FB:Venerdi"}
(*) INT
005BC0D2  F8DF 756C		ldr r7, [pc, #+1388] ; 0x20414B48
005BC0D6  F9B7 0000		ldrsh r0, [r7]
005BC0DA  F8DF 7574		ldr r7, [pc, #+1396] ; 0x20414B50
005BC0DE  8038     		strh r0, [r7]

#131		MOVE	Venerdi.MMs_off1,P52Off	{R:"6$FB:Venerdi"}
(*) INT
005BC0E0  F8DF 7560		ldr r7, [pc, #+1376] ; 0x20414B4A
005BC0E4  F9B7 0000		ldrsh r0, [r7]
005BC0E8  F8DF 7568		ldr r7, [pc, #+1384] ; 0x20414B52
005BC0EC  8038     		strh r0, [r7]

#132		MOVE	Venerdi.MMs_on2,P53On	{R:"6$FB:Venerdi"}
(*) INT
005BC0EE  F8DF 7558		ldr r7, [pc, #+1368] ; 0x20414B4C
005BC0F2  F9B7 0000		ldrsh r0, [r7]
005BC0F6  F8DF 7560		ldr r7, [pc, #+1376] ; 0x20414B54
005BC0FA  8038     		strh r0, [r7]

#133		MOVE	Venerdi.MMs_off2,P54Off	{R:"6$FB:Venerdi"}
(*) INT
005BC0FC  F8DF 754C		ldr r7, [pc, #+1356] ; 0x20414B4E
005BC100  F9B7 0000		ldrsh r0, [r7]
005BC104  F8DF 7554		ldr r7, [pc, #+1364] ; 0x20414B56
005BC108  8038     		strh r0, [r7]

#134		
#135		
#136		
#137		
#138		(*** Network 7 ***)
#139		
#140		(* Call for FB HHMM_to_MM instance Sabato *)
#141		MOVE	Ora_on1_sab,Sabato.HH_on1	{R:"7$FB:Sabato"}
(*) INT
005BC10A  F8DF 7730		ldr r7, [pc, #+1840] ; 0x20418DC8
005BC10E  F9B7 0000		ldrsh r0, [r7]
005BC112  F8DF 754C		ldr r7, [pc, #+1356] ; 0x20414B58
005BC116  8038     		strh r0, [r7]

#142		MOVE	Min_on1_sab,Sabato.MM_on1	{R:"7$FB:Sabato"}
(*) INT
005BC118  F8DF 7724		ldr r7, [pc, #+1828] ; 0x20418DCA
005BC11C  F9B7 0000		ldrsh r0, [r7]
005BC120  F8DF 7540		ldr r7, [pc, #+1344] ; 0x20414B5A
005BC124  8038     		strh r0, [r7]

#143		MOVE	Ora_off1_sab,Sabato.HH_off1	{R:"7$FB:Sabato"}
(*) INT
005BC126  F8DF 771C		ldr r7, [pc, #+1820] ; 0x20418DCC
005BC12A  F9B7 0000		ldrsh r0, [r7]
005BC12E  F8DF 7538		ldr r7, [pc, #+1336] ; 0x20414B5C
005BC132  8038     		strh r0, [r7]

#144		MOVE	Min_off1_sab,Sabato.MM_off1	{R:"7$FB:Sabato"}
(*) INT
005BC134  F8DF 7710		ldr r7, [pc, #+1808] ; 0x20418DCE
005BC138  F9B7 0000		ldrsh r0, [r7]
005BC13C  F8DF 752C		ldr r7, [pc, #+1324] ; 0x20414B5E
005BC140  8038     		strh r0, [r7]

#145		MOVE	Ora_on2_sab,Sabato.HH_on2	{R:"7$FB:Sabato"}
(*) INT
005BC142  F8DF 7708		ldr r7, [pc, #+1800] ; 0x20418DD0
005BC146  F9B7 0000		ldrsh r0, [r7]
005BC14A  F8DF 7524		ldr r7, [pc, #+1316] ; 0x20414B60
005BC14E  8038     		strh r0, [r7]

#146		MOVE	Min_on2_sab,Sabato.MM_on2	{R:"7$FB:Sabato"}
(*) INT
005BC150  F8DF 76FC		ldr r7, [pc, #+1788] ; 0x20418DD2
005BC154  F9B7 0000		ldrsh r0, [r7]
005BC158  F8DF 7518		ldr r7, [pc, #+1304] ; 0x20414B62
005BC15C  8038     		strh r0, [r7]

#147		MOVE	Ora_off2_sab,Sabato.HH_off2	{R:"7$FB:Sabato"}
(*) INT
005BC15E  F8DF 76F4		ldr r7, [pc, #+1780] ; 0x20418DD4
005BC162  F9B7 0000		ldrsh r0, [r7]
005BC166  F8DF 7510		ldr r7, [pc, #+1296] ; 0x20414B64
005BC16A  8038     		strh r0, [r7]

#148		MOVE	Min_off2_sab,Sabato.MM_off2	{R:"7$FB:Sabato"}
(*) INT
005BC16C  F8DF 76E8		ldr r7, [pc, #+1768] ; 0x20418DD6
005BC170  F9B7 0000		ldrsh r0, [r7]
005BC174  F8DF 7504		ldr r7, [pc, #+1284] ; 0x20414B66
005BC178  8038     		strh r0, [r7]

#149		CAL	Sabato	{R:"7$FB:Sabato"}
(*) INT
005BC17A  E92D 0021		stmdb sp!, { r0, r5 }
005BC17E  F8DF 74E0		ldr r7, [pc, #+1248] ; 0x20414B58
005BC182  463D     		mov r5, r7
005BC184  F8DF 433C		ldr r4, [pc, #+828] ; 0x5BA240
005BC188  F044 0401		orr r4, r4, #1
005BC18C  47A0     		blx r4
005BC18E  E8BD 0021		ldmia sp!, { r0, r5 }

#150		MOVE	Sabato.MMs_on1,P61On	{R:"7$FB:Sabato"}
(*) INT
005BC192  F8DF 74EC		ldr r7, [pc, #+1260] ; 0x20414B68
005BC196  F9B7 0000		ldrsh r0, [r7]
005BC19A  F8DF 74F4		ldr r7, [pc, #+1268] ; 0x20414B70
005BC19E  8038     		strh r0, [r7]

#151		MOVE	Sabato.MMs_off1,P62Off	{R:"7$FB:Sabato"}
(*) INT
005BC1A0  F8DF 74E0		ldr r7, [pc, #+1248] ; 0x20414B6A
005BC1A4  F9B7 0000		ldrsh r0, [r7]
005BC1A8  F8DF 74E8		ldr r7, [pc, #+1256] ; 0x20414B72
005BC1AC  8038     		strh r0, [r7]

#152		MOVE	Sabato.MMs_on2,P63On	{R:"7$FB:Sabato"}
(*) INT
005BC1AE  F8DF 74D8		ldr r7, [pc, #+1240] ; 0x20414B6C
005BC1B2  F9B7 0000		ldrsh r0, [r7]
005BC1B6  F8DF 74E0		ldr r7, [pc, #+1248] ; 0x20414B74
005BC1BA  8038     		strh r0, [r7]

#153		MOVE	Sabato.MMs_off2,P64Off	{R:"7$FB:Sabato"}
(*) INT
005BC1BC  F8DF 74CC		ldr r7, [pc, #+1228] ; 0x20414B6E
005BC1C0  F9B7 0000		ldrsh r0, [r7]
005BC1C4  F8DF 74D4		ldr r7, [pc, #+1236] ; 0x20414B76
005BC1C8  8038     		strh r0, [r7]

#154		
#155		
#156		
#157		
#158		(*** Network 8 ***)
#159		
#160		(* Call for FB HHMM_to_MM instance Domenica *)
#161		MOVE	Ora_on1_dom,Domenica.HH_on1	{R:"8$FB:Domenica"}
(*) INT
005BC1CA  F8DF 7690		ldr r7, [pc, #+1680] ; 0x20418DD8
005BC1CE  F9B7 0000		ldrsh r0, [r7]
005BC1D2  F8DF 74CC		ldr r7, [pc, #+1228] ; 0x20414B78
005BC1D6  8038     		strh r0, [r7]

#162		MOVE	Min_on1_dom,Domenica.MM_on1	{R:"8$FB:Domenica"}
(*) INT
005BC1D8  F8DF 7684		ldr r7, [pc, #+1668] ; 0x20418DDA
005BC1DC  F9B7 0000		ldrsh r0, [r7]
005BC1E0  F8DF 74C0		ldr r7, [pc, #+1216] ; 0x20414B7A
005BC1E4  8038     		strh r0, [r7]

#163		MOVE	Ora_off1_dom,Domenica.HH_off1	{R:"8$FB:Domenica"}
(*) INT
005BC1E6  F8DF 767C		ldr r7, [pc, #+1660] ; 0x20418DDC
005BC1EA  F9B7 0000		ldrsh r0, [r7]
005BC1EE  F8DF 74B8		ldr r7, [pc, #+1208] ; 0x20414B7C
005BC1F2  8038     		strh r0, [r7]

#164		MOVE	Min_off1_dom,Domenica.MM_off1	{R:"8$FB:Domenica"}
(*) INT
005BC1F4  F8DF 7670		ldr r7, [pc, #+1648] ; 0x20418DDE
005BC1F8  F9B7 0000		ldrsh r0, [r7]
005BC1FC  F8DF 74AC		ldr r7, [pc, #+1196] ; 0x20414B7E
005BC200  8038     		strh r0, [r7]

#165		MOVE	Ora_on2_dom,Domenica.HH_on2	{R:"8$FB:Domenica"}
(*) INT
005BC202  F8DF 7668		ldr r7, [pc, #+1640] ; 0x20418DE0
005BC206  F9B7 0000		ldrsh r0, [r7]
005BC20A  F8DF 74A4		ldr r7, [pc, #+1188] ; 0x20414B80
005BC20E  8038     		strh r0, [r7]

#166		MOVE	Min_on2_dom,Domenica.MM_on2	{R:"8$FB:Domenica"}
(*) INT
005BC210  F8DF 765C		ldr r7, [pc, #+1628] ; 0x20418DE2
005BC214  F9B7 0000		ldrsh r0, [r7]
005BC218  F8DF 7498		ldr r7, [pc, #+1176] ; 0x20414B82
005BC21C  8038     		strh r0, [r7]

#167		MOVE	Ora_off2_dom,Domenica.HH_off2	{R:"8$FB:Domenica"}
(*) INT
005BC21E  F8DF 7654		ldr r7, [pc, #+1620] ; 0x20418DE4
005BC222  F9B7 0000		ldrsh r0, [r7]
005BC226  F8DF 7490		ldr r7, [pc, #+1168] ; 0x20414B84
005BC22A  8038     		strh r0, [r7]

#168		MOVE	Min_off2_dom,Domenica.MM_off2	{R:"8$FB:Domenica"}
(*) INT
005BC22C  F8DF 7648		ldr r7, [pc, #+1608] ; 0x20418DE6
005BC230  F9B7 0000		ldrsh r0, [r7]
005BC234  F8DF 7484		ldr r7, [pc, #+1156] ; 0x20414B86
005BC238  8038     		strh r0, [r7]

#169		CAL	Domenica	{R:"8$FB:Domenica"}
(*) INT
005BC23A  E92D 0021		stmdb sp!, { r0, r5 }
005BC23E  F8DF 7460		ldr r7, [pc, #+1120] ; 0x20414B78
005BC242  463D     		mov r5, r7
005BC244  F8DF 427C		ldr r4, [pc, #+636] ; 0x5BA240
005BC248  F044 0401		orr r4, r4, #1
005BC24C  47A0     		blx r4
005BC24E  E8BD 0021		ldmia sp!, { r0, r5 }

#170		MOVE	Domenica.MMs_on1,P71On	{R:"8$FB:Domenica"}
(*) INT
005BC252  F8DF 746C		ldr r7, [pc, #+1132] ; 0x20414B88
005BC256  F9B7 0000		ldrsh r0, [r7]
005BC25A  F8DF 7474		ldr r7, [pc, #+1140] ; 0x20414B90
005BC25E  8038     		strh r0, [r7]

#171		MOVE	Domenica.MMs_off1,P72Off	{R:"8$FB:Domenica"}
(*) INT
005BC260  F8DF 7460		ldr r7, [pc, #+1120] ; 0x20414B8A
005BC264  F9B7 0000		ldrsh r0, [r7]
005BC268  F8DF 7468		ldr r7, [pc, #+1128] ; 0x20414B92
005BC26C  8038     		strh r0, [r7]

#172		MOVE	Domenica.MMs_on2,P73On	{R:"8$FB:Domenica"}
(*) INT
005BC26E  F8DF 7458		ldr r7, [pc, #+1112] ; 0x20414B8C
005BC272  F9B7 0000		ldrsh r0, [r7]
005BC276  F8DF 7460		ldr r7, [pc, #+1120] ; 0x20414B94
005BC27A  8038     		strh r0, [r7]

#173		MOVE	Domenica.MMs_off2,P74Off	{R:"8$FB:Domenica"}
(*) INT
005BC27C  F8DF 744C		ldr r7, [pc, #+1100] ; 0x20414B8E
005BC280  F9B7 0000		ldrsh r0, [r7]
005BC284  F8DF 7454		ldr r7, [pc, #+1108] ; 0x20414B96
005BC288  8038     		strh r0, [r7]

#174		
#175		
#176		
#177		
#178		(*** Network 9 ***)
#179		
#180		(* Call for FB OnOffCalendar instance onoff *)
#181		MOVE	DayWeek,onoff.Giorno_settimana	{R:"9$FB:onoff"}
(*) INT
005BC28A  F8DF 7288		ldr r7, [pc, #+648] ; 0x20414AB2
005BC28E  F9B7 0000		ldrsh r0, [r7]
005BC292  F8DF 7450		ldr r7, [pc, #+1104] ; 0x20414B9A
005BC296  8038     		strh r0, [r7]

#182		MOVE	Ora,onoff.Ora	{R:"9$FB:onoff"}
(*) INT
005BC298  F8DF 727C		ldr r7, [pc, #+636] ; 0x20414AB4
005BC29C  F9B7 0000		ldrsh r0, [r7]
005BC2A0  F8DF 7444		ldr r7, [pc, #+1092] ; 0x20414B9C
005BC2A4  8038     		strh r0, [r7]

#183		MOVE	Minuto,onoff.Minuto	{R:"9$FB:onoff"}
(*) INT
005BC2A6  F8DF 7274		ldr r7, [pc, #+628] ; 0x20414AB6
005BC2AA  F9B7 0000		ldrsh r0, [r7]
005BC2AE  F8DF 743C		ldr r7, [pc, #+1084] ; 0x20414B9E
005BC2B2  8038     		strh r0, [r7]

#184		MOVE	P11On,onoff.P11On	{R:"9$FB:onoff"}
(*) INT
005BC2B4  F8DF 7298		ldr r7, [pc, #+664] ; 0x20414AD0
005BC2B8  F9B7 0000		ldrsh r0, [r7]
005BC2BC  F8DF 7430		ldr r7, [pc, #+1072] ; 0x20414BA0
005BC2C0  8038     		strh r0, [r7]

#185		MOVE	P12Off,onoff.P12Off	{R:"9$FB:onoff"}
(*) INT
005BC2C2  F8DF 7290		ldr r7, [pc, #+656] ; 0x20414AD2
005BC2C6  F9B7 0000		ldrsh r0, [r7]
005BC2CA  F8DF 7428		ldr r7, [pc, #+1064] ; 0x20414BA2
005BC2CE  8038     		strh r0, [r7]

#186		MOVE	P13On,onoff.P13On	{R:"9$FB:onoff"}
(*) INT
005BC2D0  F8DF 7284		ldr r7, [pc, #+644] ; 0x20414AD4
005BC2D4  F9B7 0000		ldrsh r0, [r7]
005BC2D8  F8DF 741C		ldr r7, [pc, #+1052] ; 0x20414BA4
005BC2DC  8038     		strh r0, [r7]

#187		MOVE	P14Off,onoff.P14Off	{R:"9$FB:onoff"}
(*) INT
005BC2DE  F8DF 727C		ldr r7, [pc, #+636] ; 0x20414AD6
005BC2E2  F9B7 0000		ldrsh r0, [r7]
005BC2E6  F8DF 7414		ldr r7, [pc, #+1044] ; 0x20414BA6
005BC2EA  8038     		strh r0, [r7]

#188		MOVE	P21On,onoff.P21On	{R:"9$FB:onoff"}
(*) INT
005BC2EC  F8DF 72A0		ldr r7, [pc, #+672] ; 0x20414AF0
005BC2F0  F9B7 0000		ldrsh r0, [r7]
005BC2F4  F8DF 7408		ldr r7, [pc, #+1032] ; 0x20414BA8
005BC2F8  8038     		strh r0, [r7]

#189		MOVE	P22Off,onoff.P22Off	{R:"9$FB:onoff"}
(*) INT
005BC2FA  F8DF 7298		ldr r7, [pc, #+664] ; 0x20414AF2
005BC2FE  F9B7 0000		ldrsh r0, [r7]
005BC302  F8DF 7400		ldr r7, [pc, #+1024] ; 0x20414BAA
005BC306  8038     		strh r0, [r7]

#190		MOVE	P23On,onoff.P23On	{R:"9$FB:onoff"}
(*) INT
005BC308  F8DF 728C		ldr r7, [pc, #+652] ; 0x20414AF4
005BC30C  F9B7 0000		ldrsh r0, [r7]
005BC310  F8DF 73F4		ldr r7, [pc, #+1012] ; 0x20414BAC
005BC314  8038     		strh r0, [r7]

#191		MOVE	P24Off,onoff.P24Off	{R:"9$FB:onoff"}
(*) INT
005BC316  F8DF 7284		ldr r7, [pc, #+644] ; 0x20414AF6
005BC31A  F9B7 0000		ldrsh r0, [r7]
005BC31E  F8DF 73EC		ldr r7, [pc, #+1004] ; 0x20414BAE
005BC322  8038     		strh r0, [r7]

#192		MOVE	P31On,onoff.P31On	{R:"9$FB:onoff"}
(*) INT
005BC324  F8DF 72A8		ldr r7, [pc, #+680] ; 0x20414B10
005BC328  F9B7 0000		ldrsh r0, [r7]
005BC32C  F8DF 73E0		ldr r7, [pc, #+992] ; 0x20414BB0
005BC330  8038     		strh r0, [r7]

#193		MOVE	P32Off,onoff.P32Off	{R:"9$FB:onoff"}
(*) INT
005BC332  F8DF 72A0		ldr r7, [pc, #+672] ; 0x20414B12
005BC336  F9B7 0000		ldrsh r0, [r7]
005BC33A  F8DF 73D8		ldr r7, [pc, #+984] ; 0x20414BB2
005BC33E  8038     		strh r0, [r7]

#194		MOVE	P33On,onoff.P33On	{R:"9$FB:onoff"}
(*) INT
005BC340  F8DF 7294		ldr r7, [pc, #+660] ; 0x20414B14
005BC344  F9B7 0000		ldrsh r0, [r7]
005BC348  F8DF 73CC		ldr r7, [pc, #+972] ; 0x20414BB4
005BC34C  8038     		strh r0, [r7]

#195		MOVE	P34Off,onoff.P34Off	{R:"9$FB:onoff"}
(*) INT
005BC34E  F8DF 728C		ldr r7, [pc, #+652] ; 0x20414B16
005BC352  F9B7 0000		ldrsh r0, [r7]
005BC356  F8DF 73C4		ldr r7, [pc, #+964] ; 0x20414BB6
005BC35A  8038     		strh r0, [r7]

#196		MOVE	P41On,onoff.P41On	{R:"9$FB:onoff"}
(*) INT
005BC35C  F8DF 72B0		ldr r7, [pc, #+688] ; 0x20414B30
005BC360  F9B7 0000		ldrsh r0, [r7]
005BC364  F8DF 73B8		ldr r7, [pc, #+952] ; 0x20414BB8
005BC368  8038     		strh r0, [r7]

#197		MOVE	P42Off,onoff.P42Off	{R:"9$FB:onoff"}
(*) INT
005BC36A  F8DF 72A8		ldr r7, [pc, #+680] ; 0x20414B32
005BC36E  F9B7 0000		ldrsh r0, [r7]
005BC372  F8DF 73B0		ldr r7, [pc, #+944] ; 0x20414BBA
005BC376  8038     		strh r0, [r7]

#198		MOVE	P43On,onoff.P43On	{R:"9$FB:onoff"}
(*) INT
005BC378  F8DF 729C		ldr r7, [pc, #+668] ; 0x20414B34
005BC37C  F9B7 0000		ldrsh r0, [r7]
005BC380  F8DF 73A4		ldr r7, [pc, #+932] ; 0x20414BBC
005BC384  8038     		strh r0, [r7]

#199		MOVE	P44Off,onoff.P44Off	{R:"9$FB:onoff"}
(*) INT
005BC386  F8DF 7294		ldr r7, [pc, #+660] ; 0x20414B36
005BC38A  F9B7 0000		ldrsh r0, [r7]
005BC38E  F8DF 739C		ldr r7, [pc, #+924] ; 0x20414BBE
005BC392  8038     		strh r0, [r7]

#200		MOVE	P51On,onoff.P51On	{R:"9$FB:onoff"}
(*) INT
005BC394  F8DF 72B8		ldr r7, [pc, #+696] ; 0x20414B50
005BC398  F9B7 0000		ldrsh r0, [r7]
005BC39C  F8DF 7390		ldr r7, [pc, #+912] ; 0x20414BC0
005BC3A0  8038     		strh r0, [r7]

#201		MOVE	P52Off,onoff.P52Off	{R:"9$FB:onoff"}
(*) INT
005BC3A2  F8DF 72B0		ldr r7, [pc, #+688] ; 0x20414B52
005BC3A6  F9B7 0000		ldrsh r0, [r7]
005BC3AA  F8DF 7388		ldr r7, [pc, #+904] ; 0x20414BC2
005BC3AE  8038     		strh r0, [r7]

#202		MOVE	P53On,onoff.P53On	{R:"9$FB:onoff"}
(*) INT
005BC3B0  F8DF 72A4		ldr r7, [pc, #+676] ; 0x20414B54
005BC3B4  F9B7 0000		ldrsh r0, [r7]
005BC3B8  F8DF 737C		ldr r7, [pc, #+892] ; 0x20414BC4
005BC3BC  8038     		strh r0, [r7]

#203		MOVE	P54Off,onoff.P54Off	{R:"9$FB:onoff"}
(*) INT
005BC3BE  F8DF 729C		ldr r7, [pc, #+668] ; 0x20414B56
005BC3C2  F9B7 0000		ldrsh r0, [r7]
005BC3C6  F8DF 7374		ldr r7, [pc, #+884] ; 0x20414BC6
005BC3CA  8038     		strh r0, [r7]

#204		MOVE	P61On,onoff.P61On	{R:"9$FB:onoff"}
(*) INT
005BC3CC  F8DF 72C0		ldr r7, [pc, #+704] ; 0x20414B70
005BC3D0  F9B7 0000		ldrsh r0, [r7]
005BC3D4  F8DF 7368		ldr r7, [pc, #+872] ; 0x20414BC8
005BC3D8  8038     		strh r0, [r7]

#205		MOVE	P62Off,onoff.P62Off	{R:"9$FB:onoff"}
(*) INT
005BC3DA  F8DF 72B8		ldr r7, [pc, #+696] ; 0x20414B72
005BC3DE  F9B7 0000		ldrsh r0, [r7]
005BC3E2  F8DF 7360		ldr r7, [pc, #+864] ; 0x20414BCA
005BC3E6  8038     		strh r0, [r7]

#206		MOVE	P63On,onoff.P63On	{R:"9$FB:onoff"}
(*) INT
005BC3E8  F8DF 72AC		ldr r7, [pc, #+684] ; 0x20414B74
005BC3EC  F9B7 0000		ldrsh r0, [r7]
005BC3F0  F8DF 7354		ldr r7, [pc, #+852] ; 0x20414BCC
005BC3F4  8038     		strh r0, [r7]

#207		MOVE	P64Off,onoff.P64Off	{R:"9$FB:onoff"}
(*) INT
005BC3F6  F8DF 72A4		ldr r7, [pc, #+676] ; 0x20414B76
005BC3FA  F9B7 0000		ldrsh r0, [r7]
005BC3FE  F8DF 734C		ldr r7, [pc, #+844] ; 0x20414BCE
005BC402  8038     		strh r0, [r7]

#208		MOVE	P71On,onoff.P71On	{R:"9$FB:onoff"}
(*) INT
005BC404  F8DF 72C8		ldr r7, [pc, #+712] ; 0x20414B90
005BC408  F9B7 0000		ldrsh r0, [r7]
005BC40C  F8DF 7340		ldr r7, [pc, #+832] ; 0x20414BD0
005BC410  8038     		strh r0, [r7]

#209		MOVE	P72Off,onoff.P72Off	{R:"9$FB:onoff"}
(*) INT
005BC412  F8DF 72C0		ldr r7, [pc, #+704] ; 0x20414B92
005BC416  F9B7 0000		ldrsh r0, [r7]
005BC41A  F8DF 7338		ldr r7, [pc, #+824] ; 0x20414BD2
005BC41E  8038     		strh r0, [r7]

#210		MOVE	P73On,onoff.P73On	{R:"9$FB:onoff"}
(*) INT
005BC420  F8DF 72B4		ldr r7, [pc, #+692] ; 0x20414B94
005BC424  F9B7 0000		ldrsh r0, [r7]
005BC428  F8DF 732C		ldr r7, [pc, #+812] ; 0x20414BD4
005BC42C  8038     		strh r0, [r7]

#211		MOVE	P74Off,onoff.P74Off	{R:"9$FB:onoff"}
(*) INT
005BC42E  F8DF 72AC		ldr r7, [pc, #+684] ; 0x20414B96
005BC432  F9B7 0000		ldrsh r0, [r7]
005BC436  F8DF 7324		ldr r7, [pc, #+804] ; 0x20414BD6
005BC43A  8038     		strh r0, [r7]

#212		MOVE	Lun_enabled,onoff.Lun_enabled	{R:"9$FB:onoff"}
(*) INT
005BC43C  F8DF 7340		ldr r7, [pc, #+832] ; 0x20414BE0
005BC440  7838     		ldrb r0, [r7]
005BC442  F8DF 731C		ldr r7, [pc, #+796] ; 0x20414BD8
005BC446  7038     		strb r0, [r7]

#213		MOVE	Mar_enabled,onoff.Mar_enabled	{R:"9$FB:onoff"}
(*) BOOL
005BC448  F8DF 7338		ldr r7, [pc, #+824] ; 0x20414BE1
005BC44C  7838     		ldrb r0, [r7]
005BC44E  F8DF 7314		ldr r7, [pc, #+788] ; 0x20414BD9
005BC452  7038     		strb r0, [r7]

#214		MOVE	Mer_enabled,onoff.Mer_enabled	{R:"9$FB:onoff"}
(*) BOOL
005BC454  F8DF 7330		ldr r7, [pc, #+816] ; 0x20414BE2
005BC458  7838     		ldrb r0, [r7]
005BC45A  F8DF 730C		ldr r7, [pc, #+780] ; 0x20414BDA
005BC45E  7038     		strb r0, [r7]

#215		MOVE	Gio_enabled,onoff.Gio_enabled	{R:"9$FB:onoff"}
(*) BOOL
005BC460  F8DF 7328		ldr r7, [pc, #+808] ; 0x20414BE3
005BC464  7838     		ldrb r0, [r7]
005BC466  F8DF 7304		ldr r7, [pc, #+772] ; 0x20414BDB
005BC46A  7038     		strb r0, [r7]

#216		MOVE	Ven_enabled,onoff.Ven_enabled	{R:"9$FB:onoff"}
(*) BOOL
005BC46C  F8DF 7320		ldr r7, [pc, #+800] ; 0x20414BE4
005BC470  7838     		ldrb r0, [r7]
005BC472  F8DF 72FC		ldr r7, [pc, #+764] ; 0x20414BDC
005BC476  7038     		strb r0, [r7]

#217		MOVE	Sab_enabled,onoff.Sab_enabled	{R:"9$FB:onoff"}
(*) BOOL
005BC478  F8DF 7318		ldr r7, [pc, #+792] ; 0x20414BE5
005BC47C  7838     		ldrb r0, [r7]
005BC47E  F8DF 72F4		ldr r7, [pc, #+756] ; 0x20414BDD
005BC482  7038     		strb r0, [r7]

#218		MOVE	Dom_enabled,onoff.Dom_enabled	{R:"9$FB:onoff"}
(*) BOOL
005BC484  F8DF 7310		ldr r7, [pc, #+784] ; 0x20414BE6
005BC488  7838     		ldrb r0, [r7]
005BC48A  F8DF 72EC		ldr r7, [pc, #+748] ; 0x20414BDE
005BC48E  7038     		strb r0, [r7]

#219		CAL	onoff	{R:"9$FB:onoff"}
(*) BOOL
005BC490  E92D 0021		stmdb sp!, { r0, r5 }
005BC494  F8DF 7248		ldr r7, [pc, #+584] ; 0x20414B98
005BC498  463D     		mov r5, r7
005BC49A  F8DF 402C		ldr r4, [pc, #+44] ; 0x5BA310
005BC49E  F044 0401		orr r4, r4, #1
005BC4A2  47A0     		blx r4
005BC4A4  E8BD 0021		ldmia sp!, { r0, r5 }

#220		MOVE	onoff.OnByCalendar,CalendarOnOff	{R:"9$FB:onoff"}
(*) BOOL
005BC4A8  F8DF 72D0		ldr r7, [pc, #+720] ; 0x20414BDF
005BC4AC  7838     		ldrb r0, [r7]
005BC4AE  F8DF 701C		ldr r7, [pc, #+28] ; 0x20414A15
005BC4B2  7038     		strb r0, [r7]

005BC4B4  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
005BC4B8  F8DD E000		ldr lr, [sp]
005BC4BC  B002     		add sp, sp, #8

005BC4BE  4770     		bx lr

005BC4C0  00498A5D		; 0x00498A5D
005BC4C4  005BA240		; 0x005BA240
005BC4C8  005BA310		; 0x005BA310
005BC4CC  20414A15		; 0x20414A15
005BC4D0  20414A90		; 0x20414A90
005BC4D4  20414A98		; 0x20414A98
005BC4D8  20414A9C		; 0x20414A9C
005BC4DC  20414A9D		; 0x20414A9D
005BC4E0  20414A9E		; 0x20414A9E
005BC4E4  20414AA0		; 0x20414AA0
005BC4E8  20414AA1		; 0x20414AA1
005BC4EC  20414AA2		; 0x20414AA2
005BC4F0  20414AA3		; 0x20414AA3
005BC4F4  20414AA4		; 0x20414AA4
005BC4F8  20414AA5		; 0x20414AA5
005BC4FC  20414AA8		; 0x20414AA8
005BC500  20414AA9		; 0x20414AA9
005BC504  20414AAA		; 0x20414AAA
005BC508  20414AAC		; 0x20414AAC
005BC50C  20414AAE		; 0x20414AAE
005BC510  20414AB0		; 0x20414AB0
005BC514  20414AB2		; 0x20414AB2
005BC518  20414AB4		; 0x20414AB4
005BC51C  20414AB6		; 0x20414AB6
005BC520  20414AB8		; 0x20414AB8
005BC524  20414ABA		; 0x20414ABA
005BC528  20414ABC		; 0x20414ABC
005BC52C  20414ABE		; 0x20414ABE
005BC530  20414AC0		; 0x20414AC0
005BC534  20414AC2		; 0x20414AC2
005BC538  20414AC4		; 0x20414AC4
005BC53C  20414AC6		; 0x20414AC6
005BC540  20414AC8		; 0x20414AC8
005BC544  20414ACA		; 0x20414ACA
005BC548  20414ACC		; 0x20414ACC
005BC54C  20414ACE		; 0x20414ACE
005BC550  20414AD0		; 0x20414AD0
005BC554  20414AD2		; 0x20414AD2
005BC558  20414AD4		; 0x20414AD4
005BC55C  20414AD6		; 0x20414AD6
005BC560  20414AD8		; 0x20414AD8
005BC564  20414ADA		; 0x20414ADA
005BC568  20414ADC		; 0x20414ADC
005BC56C  20414ADE		; 0x20414ADE
005BC570  20414AE0		; 0x20414AE0
005BC574  20414AE2		; 0x20414AE2
005BC578  20414AE4		; 0x20414AE4
005BC57C  20414AE6		; 0x20414AE6
005BC580  20414AE8		; 0x20414AE8
005BC584  20414AEA		; 0x20414AEA
005BC588  20414AEC		; 0x20414AEC
005BC58C  20414AEE		; 0x20414AEE
005BC590  20414AF0		; 0x20414AF0
005BC594  20414AF2		; 0x20414AF2
005BC598  20414AF4		; 0x20414AF4
005BC59C  20414AF6		; 0x20414AF6
005BC5A0  20414AF8		; 0x20414AF8
005BC5A4  20414AFA		; 0x20414AFA
005BC5A8  20414AFC		; 0x20414AFC
005BC5AC  20414AFE		; 0x20414AFE
005BC5B0  20414B00		; 0x20414B00
005BC5B4  20414B02		; 0x20414B02
005BC5B8  20414B04		; 0x20414B04
005BC5BC  20414B06		; 0x20414B06
005BC5C0  20414B08		; 0x20414B08
005BC5C4  20414B0A		; 0x20414B0A
005BC5C8  20414B0C		; 0x20414B0C
005BC5CC  20414B0E		; 0x20414B0E
005BC5D0  20414B10		; 0x20414B10
005BC5D4  20414B12		; 0x20414B12
005BC5D8  20414B14		; 0x20414B14
005BC5DC  20414B16		; 0x20414B16
005BC5E0  20414B18		; 0x20414B18
005BC5E4  20414B1A		; 0x20414B1A
005BC5E8  20414B1C		; 0x20414B1C
005BC5EC  20414B1E		; 0x20414B1E
005BC5F0  20414B20		; 0x20414B20
005BC5F4  20414B22		; 0x20414B22
005BC5F8  20414B24		; 0x20414B24
005BC5FC  20414B26		; 0x20414B26
005BC600  20414B28		; 0x20414B28
005BC604  20414B2A		; 0x20414B2A
005BC608  20414B2C		; 0x20414B2C
005BC60C  20414B2E		; 0x20414B2E
005BC610  20414B30		; 0x20414B30
005BC614  20414B32		; 0x20414B32
005BC618  20414B34		; 0x20414B34
005BC61C  20414B36		; 0x20414B36
005BC620  20414B38		; 0x20414B38
005BC624  20414B3A		; 0x20414B3A
005BC628  20414B3C		; 0x20414B3C
005BC62C  20414B3E		; 0x20414B3E
005BC630  20414B40		; 0x20414B40
005BC634  20414B42		; 0x20414B42
005BC638  20414B44		; 0x20414B44
005BC63C  20414B46		; 0x20414B46
005BC640  20414B48		; 0x20414B48
005BC644  20414B4A		; 0x20414B4A
005BC648  20414B4C		; 0x20414B4C
005BC64C  20414B4E		; 0x20414B4E
005BC650  20414B50		; 0x20414B50
005BC654  20414B52		; 0x20414B52
005BC658  20414B54		; 0x20414B54
005BC65C  20414B56		; 0x20414B56
005BC660  20414B58		; 0x20414B58
005BC664  20414B5A		; 0x20414B5A
005BC668  20414B5C		; 0x20414B5C
005BC66C  20414B5E		; 0x20414B5E
005BC670  20414B60		; 0x20414B60
005BC674  20414B62		; 0x20414B62
005BC678  20414B64		; 0x20414B64
005BC67C  20414B66		; 0x20414B66
005BC680  20414B68		; 0x20414B68
005BC684  20414B6A		; 0x20414B6A
005BC688  20414B6C		; 0x20414B6C
005BC68C  20414B6E		; 0x20414B6E
005BC690  20414B70		; 0x20414B70
005BC694  20414B72		; 0x20414B72
005BC698  20414B74		; 0x20414B74
005BC69C  20414B76		; 0x20414B76
005BC6A0  20414B78		; 0x20414B78
005BC6A4  20414B7A		; 0x20414B7A
005BC6A8  20414B7C		; 0x20414B7C
005BC6AC  20414B7E		; 0x20414B7E
005BC6B0  20414B80		; 0x20414B80
005BC6B4  20414B82		; 0x20414B82
005BC6B8  20414B84		; 0x20414B84
005BC6BC  20414B86		; 0x20414B86
005BC6C0  20414B88		; 0x20414B88
005BC6C4  20414B8A		; 0x20414B8A
005BC6C8  20414B8C		; 0x20414B8C
005BC6CC  20414B8E		; 0x20414B8E
005BC6D0  20414B90		; 0x20414B90
005BC6D4  20414B92		; 0x20414B92
005BC6D8  20414B94		; 0x20414B94
005BC6DC  20414B96		; 0x20414B96
005BC6E0  20414B98		; 0x20414B98
005BC6E4  20414B9A		; 0x20414B9A
005BC6E8  20414B9C		; 0x20414B9C
005BC6EC  20414B9E		; 0x20414B9E
005BC6F0  20414BA0		; 0x20414BA0
005BC6F4  20414BA2		; 0x20414BA2
005BC6F8  20414BA4		; 0x20414BA4
005BC6FC  20414BA6		; 0x20414BA6
005BC700  20414BA8		; 0x20414BA8
005BC704  20414BAA		; 0x20414BAA
005BC708  20414BAC		; 0x20414BAC
005BC70C  20414BAE		; 0x20414BAE
005BC710  20414BB0		; 0x20414BB0
005BC714  20414BB2		; 0x20414BB2
005BC718  20414BB4		; 0x20414BB4
005BC71C  20414BB6		; 0x20414BB6
005BC720  20414BB8		; 0x20414BB8
005BC724  20414BBA		; 0x20414BBA
005BC728  20414BBC		; 0x20414BBC
005BC72C  20414BBE		; 0x20414BBE
005BC730  20414BC0		; 0x20414BC0
005BC734  20414BC2		; 0x20414BC2
005BC738  20414BC4		; 0x20414BC4
005BC73C  20414BC6		; 0x20414BC6
005BC740  20414BC8		; 0x20414BC8
005BC744  20414BCA		; 0x20414BCA
005BC748  20414BCC		; 0x20414BCC
005BC74C  20414BCE		; 0x20414BCE
005BC750  20414BD0		; 0x20414BD0
005BC754  20414BD2		; 0x20414BD2
005BC758  20414BD4		; 0x20414BD4
005BC75C  20414BD6		; 0x20414BD6
005BC760  20414BD8		; 0x20414BD8
005BC764  20414BD9		; 0x20414BD9
005BC768  20414BDA		; 0x20414BDA
005BC76C  20414BDB		; 0x20414BDB
005BC770  20414BDC		; 0x20414BDC
005BC774  20414BDD		; 0x20414BDD
005BC778  20414BDE		; 0x20414BDE
005BC77C  20414BDF		; 0x20414BDF
005BC780  20414BE0		; 0x20414BE0
005BC784  20414BE1		; 0x20414BE1
005BC788  20414BE2		; 0x20414BE2
005BC78C  20414BE3		; 0x20414BE3
005BC790  20414BE4		; 0x20414BE4
005BC794  20414BE5		; 0x20414BE5
005BC798  20414BE6		; 0x20414BE6
005BC79C  20418D78		; 0x20418D78
005BC7A0  20418D7A		; 0x20418D7A
005BC7A4  20418D7C		; 0x20418D7C
005BC7A8  20418D7E		; 0x20418D7E
005BC7AC  20418D80		; 0x20418D80
005BC7B0  20418D82		; 0x20418D82
005BC7B4  20418D84		; 0x20418D84
005BC7B8  20418D86		; 0x20418D86
005BC7BC  20418D88		; 0x20418D88
005BC7C0  20418D8A		; 0x20418D8A
005BC7C4  20418D8C		; 0x20418D8C
005BC7C8  20418D8E		; 0x20418D8E
005BC7CC  20418D90		; 0x20418D90
005BC7D0  20418D92		; 0x20418D92
005BC7D4  20418D94		; 0x20418D94
005BC7D8  20418D96		; 0x20418D96
005BC7DC  20418D98		; 0x20418D98
005BC7E0  20418D9A		; 0x20418D9A
005BC7E4  20418D9C		; 0x20418D9C
005BC7E8  20418D9E		; 0x20418D9E
005BC7EC  20418DA0		; 0x20418DA0
005BC7F0  20418DA2		; 0x20418DA2
005BC7F4  20418DA4		; 0x20418DA4
005BC7F8  20418DA6		; 0x20418DA6
005BC7FC  20418DA8		; 0x20418DA8
005BC800  20418DAA		; 0x20418DAA
005BC804  20418DAC		; 0x20418DAC
005BC808  20418DAE		; 0x20418DAE
005BC80C  20418DB0		; 0x20418DB0
005BC810  20418DB2		; 0x20418DB2
005BC814  20418DB4		; 0x20418DB4
005BC818  20418DB6		; 0x20418DB6
005BC81C  20418DB8		; 0x20418DB8
005BC820  20418DBA		; 0x20418DBA
005BC824  20418DBC		; 0x20418DBC
005BC828  20418DBE		; 0x20418DBE
005BC82C  20418DC0		; 0x20418DC0
005BC830  20418DC2		; 0x20418DC2
005BC834  20418DC4		; 0x20418DC4
005BC838  20418DC6		; 0x20418DC6
005BC83C  20418DC8		; 0x20418DC8
005BC840  20418DCA		; 0x20418DCA
005BC844  20418DCC		; 0x20418DCC
005BC848  20418DCE		; 0x20418DCE
005BC84C  20418DD0		; 0x20418DD0
005BC850  20418DD2		; 0x20418DD2
005BC854  20418DD4		; 0x20418DD4
005BC858  20418DD6		; 0x20418DD6
005BC85C  20418DD8		; 0x20418DD8
005BC860  20418DDA		; 0x20418DDA
005BC864  20418DDC		; 0x20418DDC
005BC868  20418DDE		; 0x20418DDE
005BC86C  20418DE0		; 0x20418DE0
005BC870  20418DE2		; 0x20418DE2
005BC874  20418DE4		; 0x20418DE4
005BC878  20418DE6		; 0x20418DE6
005BC87C  2041A2BC		; 0x2041A2BC

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
005BC880  4770     		bx lr


*** OUTPUT:
005BC882  4770     		bx lr



**************************************************
	Task Back init code
**************************************************

005BC884  B082     		sub sp, sp, #8
005BC886  F8CD E000		str lr, [sp]
005BC88A  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: P11On = 480
005BC88E  F8DF 714C		ldr r7, [pc, #+332] ; 0x20414BA0
005BC892  F240 10E0		movw r0, #0x01E0
005BC896  8038     		strh r0, [r7]

Var init: P12Off = 750
005BC898  F8DF 7144		ldr r7, [pc, #+324] ; 0x20414BA2
005BC89C  F240 20EE		movw r0, #0x02EE
005BC8A0  8038     		strh r0, [r7]

Var init: P13On = 840
005BC8A2  F8DF 7140		ldr r7, [pc, #+320] ; 0x20414BA4
005BC8A6  F240 3048		movw r0, #0x0348
005BC8AA  8038     		strh r0, [r7]

Var init: P14Off = 1080
005BC8AC  F8DF 7138		ldr r7, [pc, #+312] ; 0x20414BA6
005BC8B0  F240 4038		movw r0, #0x0438
005BC8B4  8038     		strh r0, [r7]

Var init: P21On = 480
005BC8B6  F8DF 7134		ldr r7, [pc, #+308] ; 0x20414BA8
005BC8BA  F240 10E0		movw r0, #0x01E0
005BC8BE  8038     		strh r0, [r7]

Var init: P22Off = 750
005BC8C0  F8DF 712C		ldr r7, [pc, #+300] ; 0x20414BAA
005BC8C4  F240 20EE		movw r0, #0x02EE
005BC8C8  8038     		strh r0, [r7]

Var init: P23On = 840
005BC8CA  F8DF 7128		ldr r7, [pc, #+296] ; 0x20414BAC
005BC8CE  F240 3048		movw r0, #0x0348
005BC8D2  8038     		strh r0, [r7]

Var init: P24Off = 1080
005BC8D4  F8DF 7120		ldr r7, [pc, #+288] ; 0x20414BAE
005BC8D8  F240 4038		movw r0, #0x0438
005BC8DC  8038     		strh r0, [r7]

Var init: P31On = 480
005BC8DE  F8DF 711C		ldr r7, [pc, #+284] ; 0x20414BB0
005BC8E2  F240 10E0		movw r0, #0x01E0
005BC8E6  8038     		strh r0, [r7]

Var init: P32Off = 750
005BC8E8  F8DF 7114		ldr r7, [pc, #+276] ; 0x20414BB2
005BC8EC  F240 20EE		movw r0, #0x02EE
005BC8F0  8038     		strh r0, [r7]

Var init: P33On = 840
005BC8F2  F8DF 7110		ldr r7, [pc, #+272] ; 0x20414BB4
005BC8F6  F240 3048		movw r0, #0x0348
005BC8FA  8038     		strh r0, [r7]

Var init: P34Off = 1080
005BC8FC  F8DF 7108		ldr r7, [pc, #+264] ; 0x20414BB6
005BC900  F240 4038		movw r0, #0x0438
005BC904  8038     		strh r0, [r7]

Var init: P41On = 480
005BC906  F8DF 7104		ldr r7, [pc, #+260] ; 0x20414BB8
005BC90A  F240 10E0		movw r0, #0x01E0
005BC90E  8038     		strh r0, [r7]

Var init: P42Off = 750
005BC910  F8DF 70FC		ldr r7, [pc, #+252] ; 0x20414BBA
005BC914  F240 20EE		movw r0, #0x02EE
005BC918  8038     		strh r0, [r7]

Var init: P43On = 840
005BC91A  F8DF 70F8		ldr r7, [pc, #+248] ; 0x20414BBC
005BC91E  F240 3048		movw r0, #0x0348
005BC922  8038     		strh r0, [r7]

Var init: P44Off = 1080
005BC924  F8DF 70F0		ldr r7, [pc, #+240] ; 0x20414BBE
005BC928  F240 4038		movw r0, #0x0438
005BC92C  8038     		strh r0, [r7]

Var init: P51On = 480
005BC92E  F8DF 70EC		ldr r7, [pc, #+236] ; 0x20414BC0
005BC932  F240 10E0		movw r0, #0x01E0
005BC936  8038     		strh r0, [r7]

Var init: P52Off = 750
005BC938  F8DF 70E4		ldr r7, [pc, #+228] ; 0x20414BC2
005BC93C  F240 20EE		movw r0, #0x02EE
005BC940  8038     		strh r0, [r7]

Var init: P53On = 840
005BC942  F8DF 70E0		ldr r7, [pc, #+224] ; 0x20414BC4
005BC946  F240 3048		movw r0, #0x0348
005BC94A  8038     		strh r0, [r7]

Var init: P54Off = 1080
005BC94C  F8DF 70D8		ldr r7, [pc, #+216] ; 0x20414BC6
005BC950  F240 4038		movw r0, #0x0438
005BC954  8038     		strh r0, [r7]

Var init: P61On = 480
005BC956  F8DF 70D4		ldr r7, [pc, #+212] ; 0x20414BC8
005BC95A  F240 10E0		movw r0, #0x01E0
005BC95E  8038     		strh r0, [r7]

Var init: P62Off = 750
005BC960  F8DF 70CC		ldr r7, [pc, #+204] ; 0x20414BCA
005BC964  F240 20EE		movw r0, #0x02EE
005BC968  8038     		strh r0, [r7]

Var init: P63On = 840
005BC96A  F8DF 70C8		ldr r7, [pc, #+200] ; 0x20414BCC
005BC96E  F240 3048		movw r0, #0x0348
005BC972  8038     		strh r0, [r7]

Var init: P64Off = 1080
005BC974  F8DF 70C0		ldr r7, [pc, #+192] ; 0x20414BCE
005BC978  F240 4038		movw r0, #0x0438
005BC97C  8038     		strh r0, [r7]

Var init: P71On = 480
005BC97E  F8DF 70BC		ldr r7, [pc, #+188] ; 0x20414BD0
005BC982  F240 10E0		movw r0, #0x01E0
005BC986  8038     		strh r0, [r7]

Var init: P72Off = 750
005BC988  F8DF 70B4		ldr r7, [pc, #+180] ; 0x20414BD2
005BC98C  F240 20EE		movw r0, #0x02EE
005BC990  8038     		strh r0, [r7]

Var init: P73On = 840
005BC992  F8DF 70B0		ldr r7, [pc, #+176] ; 0x20414BD4
005BC996  F240 3048		movw r0, #0x0348
005BC99A  8038     		strh r0, [r7]

Var init: P74Off = 1080
005BC99C  F8DF 70A8		ldr r7, [pc, #+168] ; 0x20414BD6
005BC9A0  F240 4038		movw r0, #0x0438
005BC9A4  8038     		strh r0, [r7]

Var init: Lun_enabled = TRUE
005BC9A6  F8DF 70A4		ldr r7, [pc, #+164] ; 0x20414BD8
005BC9AA  2001     		mov r0, #0x01
005BC9AC  7038     		strb r0, [r7]

Var init: Mar_enabled = TRUE
005BC9AE  F8DF 70A0		ldr r7, [pc, #+160] ; 0x20414BD9
005BC9B2  2001     		mov r0, #0x01
005BC9B4  7038     		strb r0, [r7]

Var init: Mer_enabled = TRUE
005BC9B6  F8DF 709C		ldr r7, [pc, #+156] ; 0x20414BDA
005BC9BA  2001     		mov r0, #0x01
005BC9BC  7038     		strb r0, [r7]

Var init: Gio_enabled = TRUE
005BC9BE  F8DF 7098		ldr r7, [pc, #+152] ; 0x20414BDB
005BC9C2  2001     		mov r0, #0x01
005BC9C4  7038     		strb r0, [r7]

Var init: Ven_enabled = TRUE
005BC9C6  F8DF 7094		ldr r7, [pc, #+148] ; 0x20414BDC
005BC9CA  2001     		mov r0, #0x01
005BC9CC  7038     		strb r0, [r7]

005BC9CE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
005BC9D2  F8DD E000		ldr lr, [sp]
005BC9D6  B002     		add sp, sp, #8

005BC9D8  4770     		bx lr

005BC9DC  20414BA0		; 0x20414BA0
005BC9E0  20414BA2		; 0x20414BA2
005BC9E4  20414BA4		; 0x20414BA4
005BC9E8  20414BA6		; 0x20414BA6
005BC9EC  20414BA8		; 0x20414BA8
005BC9F0  20414BAA		; 0x20414BAA
005BC9F4  20414BAC		; 0x20414BAC
005BC9F8  20414BAE		; 0x20414BAE
005BC9FC  20414BB0		; 0x20414BB0
005BCA00  20414BB2		; 0x20414BB2
005BCA04  20414BB4		; 0x20414BB4
005BCA08  20414BB6		; 0x20414BB6
005BCA0C  20414BB8		; 0x20414BB8
005BCA10  20414BBA		; 0x20414BBA
005BCA14  20414BBC		; 0x20414BBC
005BCA18  20414BBE		; 0x20414BBE
005BCA1C  20414BC0		; 0x20414BC0
005BCA20  20414BC2		; 0x20414BC2
005BCA24  20414BC4		; 0x20414BC4
005BCA28  20414BC6		; 0x20414BC6
005BCA2C  20414BC8		; 0x20414BC8
005BCA30  20414BCA		; 0x20414BCA
005BCA34  20414BCC		; 0x20414BCC
005BCA38  20414BCE		; 0x20414BCE
005BCA3C  20414BD0		; 0x20414BD0
005BCA40  20414BD2		; 0x20414BD2
005BCA44  20414BD4		; 0x20414BD4
005BCA48  20414BD6		; 0x20414BD6
005BCA4C  20414BD8		; 0x20414BD8
005BCA50  20414BD9		; 0x20414BD9
005BCA54  20414BDA		; 0x20414BDA
005BCA58  20414BDB		; 0x20414BDB
005BCA5C  20414BDC		; 0x20414BDC



**************************************************
	Global init code
**************************************************

005BCA70  B082     		sub sp, sp, #8
005BCA72  F8CD E000		str lr, [sp]
005BCA76  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

Var init: Temp_setpoint_inverno = 50
005BCA7A  F8DF 715C		ldr r7, [pc, #+348] ; 0x5BA0D4
005BCA7E  6838     		ldr r0, [r7]

005BCA80  F8DF 71E0		ldr r7, [pc, #+480] ; 0x20418E48
005BCA84  6038     		str r0, [r7]

Var init: T_tolleranza_inverno = 4
005BCA86  F8DF 7154		ldr r7, [pc, #+340] ; 0x5BA0D8
005BCA8A  6838     		ldr r0, [r7]

005BCA8C  F8DF 71D0		ldr r7, [pc, #+464] ; 0x20418E44
005BCA90  6038     		str r0, [r7]

Var init: Temp_setpoint_estate = 12
005BCA92  F8DF 714C		ldr r7, [pc, #+332] ; 0x5BA0DC
005BCA96  6838     		ldr r0, [r7]

005BCA98  F8DF 71C0		ldr r7, [pc, #+448] ; 0x20418E40
005BCA9C  6038     		str r0, [r7]

Var init: T_tolleranza_estate = 3
005BCA9E  F8DF 7144		ldr r7, [pc, #+324] ; 0x5BA0E0
005BCAA2  6838     		ldr r0, [r7]

005BCAA4  F8DF 71C0		ldr r7, [pc, #+448] ; 0x20418E4C
005BCAA8  6038     		str r0, [r7]

Var init: ms_preaccensione = 60
005BCAAA  F8DF 713C		ldr r7, [pc, #+316] ; 0x20414A8C
005BCAAE  F240 003C		movw r0, #0x003C
005BCAB2  6038     		str r0, [r7]

Var init: P11On = 480
005BCAB4  F8DF 7134		ldr r7, [pc, #+308] ; 0x20414AD0
005BCAB8  F240 10E0		movw r0, #0x01E0
005BCABC  8038     		strh r0, [r7]

Var init: P12Off = 780
005BCABE  F8DF 7130		ldr r7, [pc, #+304] ; 0x20414AD2
005BCAC2  F240 300C		movw r0, #0x030C
005BCAC6  8038     		strh r0, [r7]

Var init: P13On = 900
005BCAC8  F8DF 7128		ldr r7, [pc, #+296] ; 0x20414AD4
005BCACC  F240 3084		movw r0, #0x0384
005BCAD0  8038     		strh r0, [r7]

Var init: P14Off = 1140
005BCAD2  F8DF 7124		ldr r7, [pc, #+292] ; 0x20414AD6
005BCAD6  F240 4074		movw r0, #0x0474
005BCADA  8038     		strh r0, [r7]

Var init: P21On = 480
005BCADC  F8DF 711C		ldr r7, [pc, #+284] ; 0x20414AF0
005BCAE0  F240 10E0		movw r0, #0x01E0
005BCAE4  8038     		strh r0, [r7]

Var init: P22Off = 780
005BCAE6  F8DF 7118		ldr r7, [pc, #+280] ; 0x20414AF2
005BCAEA  F240 300C		movw r0, #0x030C
005BCAEE  8038     		strh r0, [r7]

Var init: P23On = 900
005BCAF0  F8DF 7110		ldr r7, [pc, #+272] ; 0x20414AF4
005BCAF4  F240 3084		movw r0, #0x0384
005BCAF8  8038     		strh r0, [r7]

Var init: P24Off = 1140
005BCAFA  F8DF 710C		ldr r7, [pc, #+268] ; 0x20414AF6
005BCAFE  F240 4074		movw r0, #0x0474
005BCB02  8038     		strh r0, [r7]

Var init: P31On = 480
005BCB04  F8DF 7104		ldr r7, [pc, #+260] ; 0x20414B10
005BCB08  F240 10E0		movw r0, #0x01E0
005BCB0C  8038     		strh r0, [r7]

Var init: P32Off = 780
005BCB0E  F8DF 7100		ldr r7, [pc, #+256] ; 0x20414B12
005BCB12  F240 300C		movw r0, #0x030C
005BCB16  8038     		strh r0, [r7]

Var init: P33On = 900
005BCB18  F8DF 70F8		ldr r7, [pc, #+248] ; 0x20414B14
005BCB1C  F240 3084		movw r0, #0x0384
005BCB20  8038     		strh r0, [r7]

Var init: P34Off = 1140
005BCB22  F8DF 70F4		ldr r7, [pc, #+244] ; 0x20414B16
005BCB26  F240 4074		movw r0, #0x0474
005BCB2A  8038     		strh r0, [r7]

Var init: P41On = 480
005BCB2C  F8DF 70EC		ldr r7, [pc, #+236] ; 0x20414B30
005BCB30  F240 10E0		movw r0, #0x01E0
005BCB34  8038     		strh r0, [r7]

Var init: P42Off = 780
005BCB36  F8DF 70E8		ldr r7, [pc, #+232] ; 0x20414B32
005BCB3A  F240 300C		movw r0, #0x030C
005BCB3E  8038     		strh r0, [r7]

Var init: P43On = 900
005BCB40  F8DF 70E0		ldr r7, [pc, #+224] ; 0x20414B34
005BCB44  F240 3084		movw r0, #0x0384
005BCB48  8038     		strh r0, [r7]

Var init: P44Off = 1140
005BCB4A  F8DF 70DC		ldr r7, [pc, #+220] ; 0x20414B36
005BCB4E  F240 4074		movw r0, #0x0474
005BCB52  8038     		strh r0, [r7]

Var init: P51On = 480
005BCB54  F8DF 70D4		ldr r7, [pc, #+212] ; 0x20414B50
005BCB58  F240 10E0		movw r0, #0x01E0
005BCB5C  8038     		strh r0, [r7]

Var init: P52Off = 780
005BCB5E  F8DF 70D0		ldr r7, [pc, #+208] ; 0x20414B52
005BCB62  F240 300C		movw r0, #0x030C
005BCB66  8038     		strh r0, [r7]

Var init: P53On = 900
005BCB68  F8DF 70C8		ldr r7, [pc, #+200] ; 0x20414B54
005BCB6C  F240 3084		movw r0, #0x0384
005BCB70  8038     		strh r0, [r7]

Var init: P54Off = 1200
005BCB72  F8DF 70C4		ldr r7, [pc, #+196] ; 0x20414B56
005BCB76  F240 40B0		movw r0, #0x04B0
005BCB7A  8038     		strh r0, [r7]

Var init: P61On = 480
005BCB7C  F8DF 70BC		ldr r7, [pc, #+188] ; 0x20414B70
005BCB80  F240 10E0		movw r0, #0x01E0
005BCB84  8038     		strh r0, [r7]

Var init: P62Off = 780
005BCB86  F8DF 70B8		ldr r7, [pc, #+184] ; 0x20414B72
005BCB8A  F240 300C		movw r0, #0x030C
005BCB8E  8038     		strh r0, [r7]

Var init: P63On = 900
005BCB90  F8DF 70B0		ldr r7, [pc, #+176] ; 0x20414B74
005BCB94  F240 3084		movw r0, #0x0384
005BCB98  8038     		strh r0, [r7]

Var init: P64Off = 1140
005BCB9A  F8DF 70AC		ldr r7, [pc, #+172] ; 0x20414B76
005BCB9E  F240 4074		movw r0, #0x0474
005BCBA2  8038     		strh r0, [r7]

Var init: P71On = 480
005BCBA4  F8DF 70A4		ldr r7, [pc, #+164] ; 0x20414B90
005BCBA8  F240 10E0		movw r0, #0x01E0
005BCBAC  8038     		strh r0, [r7]

Var init: P72Off = 780
005BCBAE  F8DF 70A0		ldr r7, [pc, #+160] ; 0x20414B92
005BCBB2  F240 300C		movw r0, #0x030C
005BCBB6  8038     		strh r0, [r7]

Var init: P73On = 900
005BCBB8  F8DF 7098		ldr r7, [pc, #+152] ; 0x20414B94
005BCBBC  F240 3084		movw r0, #0x0384
005BCBC0  8038     		strh r0, [r7]

Var init: P74Off = 1140
005BCBC2  F8DF 7094		ldr r7, [pc, #+148] ; 0x20414B96
005BCBC6  F240 4074		movw r0, #0x0474
005BCBCA  8038     		strh r0, [r7]

005BCBCC  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
005BCBD0  F8DD E000		ldr lr, [sp]
005BCBD4  B002     		add sp, sp, #8

005BCBD6  4770     		bx lr

005BCBD8  005BA0D4		; 0x005BA0D4
005BCBDC  005BA0D8		; 0x005BA0D8
005BCBE0  005BA0DC		; 0x005BA0DC
005BCBE4  005BA0E0		; 0x005BA0E0
005BCBE8  20414A8C		; 0x20414A8C
005BCBEC  20414AD0		; 0x20414AD0
005BCBF0  20414AD2		; 0x20414AD2
005BCBF4  20414AD4		; 0x20414AD4
005BCBF8  20414AD6		; 0x20414AD6
005BCBFC  20414AF0		; 0x20414AF0
005BCC00  20414AF2		; 0x20414AF2
005BCC04  20414AF4		; 0x20414AF4
005BCC08  20414AF6		; 0x20414AF6
005BCC0C  20414B10		; 0x20414B10
005BCC10  20414B12		; 0x20414B12
005BCC14  20414B14		; 0x20414B14
005BCC18  20414B16		; 0x20414B16
005BCC1C  20414B30		; 0x20414B30
005BCC20  20414B32		; 0x20414B32
005BCC24  20414B34		; 0x20414B34
005BCC28  20414B36		; 0x20414B36
005BCC2C  20414B50		; 0x20414B50
005BCC30  20414B52		; 0x20414B52
005BCC34  20414B54		; 0x20414B54
005BCC38  20414B56		; 0x20414B56
005BCC3C  20414B70		; 0x20414B70
005BCC40  20414B72		; 0x20414B72
005BCC44  20414B74		; 0x20414B74
005BCC48  20414B76		; 0x20414B76
005BCC4C  20414B90		; 0x20414B90
005BCC50  20414B92		; 0x20414B92
005BCC54  20414B94		; 0x20414B94
005BCC58  20414B96		; 0x20414B96
005BCC5C  20418E40		; 0x20418E40
005BCC60  20418E44		; 0x20418E44
005BCC64  20418E48		; 0x20418E48
005BCC68  20418E4C		; 0x20418E4C



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		00000000005BA000h
End code area:            		00000000005BCC70h
Code size:                		00002C70h

Start local data area:    		0000000020414A08h
End local data area:      		0000000020414BE7h
Local data size:          		000001DFh

Start retentive data area:		000000002041461Ch
End retentive data area:  		000000002041461Ch
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                FE07A250
DEBUG MEMO ID:                          0000BB57
FULL MEMO ID:                           000009BA
********************************************
